<?xml version="1.0"?>
<Definitions xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ShipBlueprints>
    <ShipBlueprint xsi:type="MyObjectBuilder_ShipBlueprintDefinition">
      <Id Type="MyObjectBuilder_ShipBlueprintDefinition" Subtype="Paolo.OctopusV1" />
      <DisplayName>Paolo</DisplayName>
      <CubeGrids>
        <CubeGrid>
          <SubtypeName />
          <EntityId>94914508132182740</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="53583.029950399017" y="-26642.107608767859" z="11931.410884143446" />
            <Forward x="0.4676789" y="0.8093634" z="-0.355256855" />
            <Up x="0.883871555" y="-0.425090075" z="0.195114672" />
            <Orientation>
              <X>-0.518829346</X>
              <Y>-0.230624542</Y>
              <Z>0.6658536</Z>
              <W>-0.4840117</W>
            </Orientation>
          </PositionAndOrientation>
          <LocalPositionAndOrientation xsi:nil="true" />
          <ComponentContainer>
            <Components>
              <ComponentData>
                <TypeId>MyModStorageComponent</TypeId>
                <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                  <Storage>
                    <dictionary>
                      <item>
                        <Key>29ffd684-13d7-4045-bf76-cd48bf80e36a</Key>
                        <Value>CAAQABiAgAEiACgAMAA6AEIASgBVAAAAAFobCQAAAAAAAAAAIQAAAAAAAAAAOQAAAAAAAAAAYhsJAAAAAAAAAAAhAAAAAAAAAAA5AAAAAAAAAABqCgighNjV88sBEARyAHgAgAEAiAEBkAEAmQEAAAAAAAAAAKgBALABALoBGwkAAAAAAAAAACEAAAAAAAAAADkAAAAAAADwv8IBGwkAAAAAAAAAACEAAAAAAADwPzkAAAAAAAAAAMoBCgighNjV88sBEATSATwIABAAGAAgACgAMAE4AEAASABQAFgAYABoAHAAeACAAQCIAQCQAQCYAQCgAQCoAQCwAQC4AQDAAQDIAQDaATwIABAAGAAgACgAMAA4AEAASABQAFgAYABoAHAAeACAAQCIAQCQAQCYAQCgAQCoAQGwAQG4AQHAAQHIAQHiAQA=</Value>
                      </item>
                    </dictionary>
                  </Storage>
                </Component>
              </ComponentData>
            </Components>
          </ComponentContainer>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>133934046397955407</EntityId>
              <Min x="5" y="15" z="-20" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>91127281726652557</EntityId>
              <Min x="4" y="15" z="-20" />
              <IntegrityPercent>0.833348632</IntegrityPercent>
              <BuildPercent>0.833348632</BuildPercent>
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>115741386285863846</EntityId>
              <Min x="3" y="15" z="-20" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>96245508312277634</EntityId>
              <Min x="5" y="13" z="-20" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>106064040894237582</EntityId>
              <Min x="2" y="15" z="-20" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>138428242487027161</EntityId>
              <Min x="5" y="14" z="-20" />
              <IntegrityPercent>0.833348632</IntegrityPercent>
              <BuildPercent>0.833348632</BuildPercent>
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>132151583214386515</EntityId>
              <Min x="-7" y="15" z="-20" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>119516428726272440</EntityId>
              <Min x="-4" y="16" z="-21" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>139475975341308751</EntityId>
              <Min x="-4" y="15" z="-21" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>142120699575447832</EntityId>
              <Min x="-4" y="15" z="-20" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>123971298926108748</EntityId>
              <Min x="-1" y="16" z="-24" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>137274737829090454</EntityId>
              <Min x="-5" y="15" z="-20" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>110248269955771943</EntityId>
              <Min x="-7" y="14" z="-20" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>85423757402597276</EntityId>
              <Min x="-7" y="13" z="-20" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>109464600259548193</EntityId>
              <Min x="2" y="16" z="-21" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>78274013328892447</EntityId>
              <Min x="2" y="15" z="-21" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>140849794698510324</EntityId>
              <Min x="-6" y="15" z="-20" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_LargeGatlingTurret">
              <SubtypeName>SmallGatlingTurret</SubtypeName>
              <EntityId>118911103883915626</EntityId>
              <Min x="0" y="16" z="-26" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>9</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_AmmoMagazine">
                            <SubtypeName>NATO_25x184mm</SubtypeName>
                            <ProjectilesCount>0</ProjectilesCount>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>0</nextItemId>
                      <Volume>0.084</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.Gatling Turret 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsShooting>false</IsShooting>
              <IsShootingFromTerminal>false</IsShootingFromTerminal>
              <IsLargeTurret>true</IsLargeTurret>
              <MinFov>0.1</MinFov>
              <MaxFov>1.04719758</MaxFov>
              <RemainingAmmo>0</RemainingAmmo>
              <Target>0</Target>
              <IsPotentialTarget>true</IsPotentialTarget>
              <PreviousControlledEntityId xsi:nil="true" />
              <Rotation>0</Rotation>
              <Elevation>0</Elevation>
              <GunBase>
                <CurrentAmmoMagazineName>NATO_25x184mm</CurrentAmmoMagazineName>
                <RemainingAmmosList />
                <LastShootTime>0</LastShootTime>
              </GunBase>
              <EnableIdleRotation>true</EnableIdleRotation>
              <PreviousIdleRotationState>true</PreviousIdleRotationState>
              <TargetCharacters>true</TargetCharacters>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_LargeGatlingTurret">
              <SubtypeName>SmallGatlingTurret</SubtypeName>
              <EntityId>137616697381603498</EntityId>
              <Min x="-6" y="16" z="-26" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>9</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_AmmoMagazine">
                            <SubtypeName>NATO_25x184mm</SubtypeName>
                            <ProjectilesCount>0</ProjectilesCount>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>0</nextItemId>
                      <Volume>0.084</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.Gatling Turret</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsShooting>false</IsShooting>
              <IsShootingFromTerminal>false</IsShootingFromTerminal>
              <IsLargeTurret>true</IsLargeTurret>
              <MinFov>0.1</MinFov>
              <MaxFov>1.04719758</MaxFov>
              <RemainingAmmo>0</RemainingAmmo>
              <Target>0</Target>
              <IsPotentialTarget>true</IsPotentialTarget>
              <PreviousControlledEntityId xsi:nil="true" />
              <Rotation>0</Rotation>
              <Elevation>0</Elevation>
              <GunBase>
                <CurrentAmmoMagazineName>NATO_25x184mm</CurrentAmmoMagazineName>
                <RemainingAmmosList />
                <LastShootTime>0</LastShootTime>
              </GunBase>
              <EnableIdleRotation>true</EnableIdleRotation>
              <PreviousIdleRotationState>true</PreviousIdleRotationState>
              <TargetCharacters>true</TargetCharacters>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockBatteryBlock</SubtypeName>
              <EntityId>96303082930537170</EntityId>
              <Min x="-6" y="13" z="-21" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>Battery 11</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.478943229</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockBatteryBlock</SubtypeName>
              <EntityId>124318961290599935</EntityId>
              <Min x="2" y="13" z="-21" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>Battery 10</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.455284</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>101785168245839211</EntityId>
              <Min x="5" y="12" z="-20" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>75159769503934538</EntityId>
              <Min x="-7" y="12" z="-20" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>98699231794950163</EntityId>
              <Min x="-6" y="12" z="-20" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>112872129949455727</EntityId>
              <Min x="4" y="12" z="-20" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>73728563617785943</EntityId>
              <Min x="-5" y="12" z="-20" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>133772641506170883</EntityId>
              <Min x="-4" y="12" z="-20" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="3" y="9" z="-15" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>79760765336213027</EntityId>
              <Min x="4" y="9" z="-15" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>108243115316028427</EntityId>
              <Min x="4" y="9" z="-16" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="3" y="8" z="-15" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>125311708305392555</EntityId>
              <Min x="4" y="8" z="-15" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>102869841186657758</EntityId>
              <Min x="4" y="8" z="-16" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>80707221584949657</EntityId>
              <Min x="5" y="8" z="-15" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector36</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>96548268331282375</EntityId>
              <Min x="5" y="9" z="-15" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector35</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>124559245012377745</EntityId>
              <Min x="5" y="9" z="-16" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector34</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>110781915611032733</EntityId>
              <Min x="5" y="8" z="-16" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector25</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>112528939529366198</EntityId>
              <Min x="5" y="7" z="-15" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="5" y="7" z="-16" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Drill">
              <SubtypeName>SmallBlockDrill</SubtypeName>
              <EntityId>114254658401479030</EntityId>
              <Min x="4" y="1" z="-16" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.122222222" y="0.05" z="0.46" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>3.375</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Drill1</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="5" y="7" z="-17" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>91947955795772501</EntityId>
              <Min x="4" y="9" z="-17" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>117964000235125508</EntityId>
              <Min x="4" y="8" z="-17" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>136130637294164336</EntityId>
              <Min x="5" y="9" z="-17" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector33</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>120077328676190457</EntityId>
              <Min x="5" y="9" z="-18" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector32</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>101650617054519294</EntityId>
              <Min x="5" y="8" z="-17" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector24</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>104195482574084912</EntityId>
              <Min x="4" y="9" z="-18" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>129880374687863790</EntityId>
              <Min x="5" y="9" z="-19" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector31</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="5" y="7" z="-18" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>84571593001222595</EntityId>
              <Min x="5" y="6" z="-17" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>114108699964960217</EntityId>
              <Min x="5" y="6" z="-18" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Drill">
              <SubtypeName>SmallBlockDrill</SubtypeName>
              <EntityId>79467982415926248</EntityId>
              <Min x="4" y="1" z="-21" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="1" z="-1" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>3.375</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Drill2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="5" y="7" z="-19" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>129660833490835275</EntityId>
              <Min x="5" y="8" z="-18" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector23</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>76255917760035792</EntityId>
              <Min x="4" y="8" z="-18" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>91635160446919878</EntityId>
              <Min x="5" y="8" z="-19" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector22</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeAtmosphericThrust</SubtypeName>
              <EntityId>85066066718107734</EntityId>
              <Min x="1" y="10" z="-17" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855883</BuiltBy>
              <CustomName>OctopusV1.2ThrR1</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>98181491909257328</EntityId>
              <Min x="4" y="9" z="-19" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>95828136830035580</EntityId>
              <Min x="4" y="9" z="-20" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>112405197860357293</EntityId>
              <Min x="5" y="9" z="-20" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector30</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>133597103514179054</EntityId>
              <Min x="4" y="8" z="-19" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorSorter">
              <SubtypeName>SmallBlockConveyorSorter</SubtypeName>
              <EntityId>111398489051998951</EntityId>
              <Min x="4" y="8" z="-20" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Sorter2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsWhiteList>true</IsWhiteList>
              <DefinitionIds>
                <SerializableDefinitionId Type="MyObjectBuilder_Ore" Subtype="Stone" />
              </DefinitionIds>
              <DefinitionTypes />
              <DrainAll>false</DrainAll>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>126789565946161729</EntityId>
              <Min x="5" y="7" z="-20" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>139569521588430280</EntityId>
              <Min x="4" y="7" z="-20" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="5" y="7" z="-21" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="5" y="7" z="-22" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>79926061528920244</EntityId>
              <Min x="5" y="8" z="-21" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector21</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>132653114711593967</EntityId>
              <Min x="5" y="6" z="-23" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>132861211550676448</EntityId>
              <Min x="5" y="6" z="-22" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>90639224063792737</EntityId>
              <Min x="4" y="8" z="-21" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>79391794409394853</EntityId>
              <Min x="5" y="8" z="-22" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector20</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>120178590056459538</EntityId>
              <Min x="5" y="9" z="-21" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector29</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Drill">
              <SubtypeName>SmallBlockDrill</SubtypeName>
              <EntityId>122744702334826535</EntityId>
              <Min x="4" y="1" z="-26" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="1" z="-1" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>3.375</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Drill3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="5" y="7" z="-23" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>104876512707615318</EntityId>
              <Min x="4" y="8" z="-22" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>106454186879028919</EntityId>
              <Min x="5" y="8" z="-23" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector19</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>120128633256108473</EntityId>
              <Min x="4" y="8" z="-23" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>117700947111084416</EntityId>
              <Min x="4" y="9" z="-21" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>105600305027048991</EntityId>
              <Min x="4" y="9" z="-22" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>88716041446004479</EntityId>
              <Min x="5" y="9" z="-22" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector28</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>132428912061467878</EntityId>
              <Min x="5" y="9" z="-23" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector27</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>134344828584625851</EntityId>
              <Min x="4" y="9" z="-23" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>73939687459019226</EntityId>
              <Min x="5" y="9" z="-24" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector26</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="5" y="7" z="-24" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>135654232953895488</EntityId>
              <Min x="5" y="8" z="-24" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector18</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>80040016334712813</EntityId>
              <Min x="4" y="8" z="-24" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>74814375425643699</EntityId>
              <Min x="5" y="7" z="-25" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>114584308230480999</EntityId>
              <Min x="5" y="8" z="-25" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector38</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>105679759613717814</EntityId>
              <Min x="4" y="8" z="-25" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>138403078782901241</EntityId>
              <Min x="4" y="9" z="-25" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="5" y="7" z="-26" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>143994610527502195</EntityId>
              <Min x="4" y="7" z="-25" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>123894492859312039</EntityId>
              <Min x="5" y="9" z="-25" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector37</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>120872214294001811</EntityId>
              <Min x="4" y="9" z="-24" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeAtmosphericThrust</SubtypeName>
              <EntityId>72402964227984484</EntityId>
              <Min x="1" y="10" z="-25" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855883</BuiltBy>
              <CustomName>OctopusV1.2ThrR2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>118117652750849052</EntityId>
              <Min x="3" y="7" z="-25" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>90180685590377507</EntityId>
              <Min x="2" y="7" z="-25" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>125021269010352297</EntityId>
              <Min x="1" y="7" z="-25" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>98719374426280471</EntityId>
              <Min x="0" y="7" z="-25" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>74494809453335517</EntityId>
              <Min x="-1" y="7" z="-25" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-1" y="7" z="-26" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Drill">
              <SubtypeName>SmallBlockDrill</SubtypeName>
              <EntityId>143182042815496269</EntityId>
              <Min x="-2" y="1" z="-26" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="1" z="-1" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>3.375</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Drill8</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>111714857026750181</EntityId>
              <Min x="4" y="7" z="-15" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="5" y="7" z="-14" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>139667843310647143</EntityId>
              <Min x="3" y="7" z="-15" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>93431246310148254</EntityId>
              <Min x="2" y="7" z="-15" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>104899686205521149</EntityId>
              <Min x="1" y="7" z="-15" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>74468570060745304</EntityId>
              <Min x="0" y="7" z="-15" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>135077089438869163</EntityId>
              <Min x="-1" y="7" z="-15" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-1" y="7" z="-14" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>135375762022208147</EntityId>
              <Min x="-2" y="7" z="-15" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>79138431484711312</EntityId>
              <Min x="-3" y="7" z="-15" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>127852429773743091</EntityId>
              <Min x="-4" y="7" z="-15" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>141462325425845179</EntityId>
              <Min x="-5" y="7" z="-15" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>79663508735767639</EntityId>
              <Min x="-6" y="7" z="-15" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>114002562657281957</EntityId>
              <Min x="-7" y="7" z="-15" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>102441953514784740</EntityId>
              <Min x="-7" y="8" z="-15" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector42</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-7" y="7" z="-16" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>132048791042772510</EntityId>
              <Min x="-7" y="8" z="-16" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector01</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-7" y="7" z="-14" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="7" z="-16" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Reactor">
              <SubtypeName>SmallBlockLargeGenerator</SubtypeName>
              <EntityId>138691460530683201</EntityId>
              <Min x="-2" y="8" z="-17" />
              <ColorMaskHSV x="0.122222222" y="0.05" z="0.46" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>90.707512</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                            <SubtypeName>Uranium</SubtypeName>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>0</nextItemId>
                      <Volume>1</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Reactor</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Capacity>90.70751</Capacity>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="7" z="-17" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Drill">
              <SubtypeName>SmallBlockDrill</SubtypeName>
              <EntityId>93990877460373734</EntityId>
              <Min x="-2" y="1" z="-16" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="1" z="-1" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>3.375</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Drill4</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>120464398199558795</EntityId>
              <Min x="-1" y="6" z="-17" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>132871491960806869</EntityId>
              <Min x="-1" y="6" z="-18" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>97751059163668842</EntityId>
              <Min x="-1" y="7" z="-18" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="6" z="-18" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="6" z="-17" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>130179362462767043</EntityId>
              <Min x="-1" y="7" z="-19" />
              <IntegrityPercent>0.647058845</IntegrityPercent>
              <BuildPercent>0.647058845</BuildPercent>
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>129583143223721274</EntityId>
              <Min x="-1" y="8" z="-19" />
              <IntegrityPercent>0.647058845</IntegrityPercent>
              <BuildPercent>0.647058845</BuildPercent>
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>78005516095321619</EntityId>
              <Min x="-1" y="8" z="-20" />
              <IntegrityPercent>0.647058845</IntegrityPercent>
              <BuildPercent>0.647058845</BuildPercent>
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>86641564708056715</EntityId>
              <Min x="-1" y="9" z="-20" />
              <IntegrityPercent>0.647058845</IntegrityPercent>
              <BuildPercent>0.647058845</BuildPercent>
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
              <SubtypeName>SmallBlockGyro</SubtypeName>
              <EntityId>83992021648437249</EntityId>
              <Min x="0" y="15" z="-22" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>Gyroscope 6</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_RadioAntenna">
              <SubtypeName>SmallBlockRadioAntenna</SubtypeName>
              <EntityId>94360406936253193</EntityId>
              <Min x="-2" y="7" z="-19" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>OctopusV1.2Antenna</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <BroadcastRadius>500.0001</BroadcastRadius>
              <ShowShipName>false</ShowShipName>
              <EnableBroadcasting>true</EnableBroadcasting>
              <AttachedPB>0</AttachedPB>
              <IgnoreAllied>false</IgnoreAllied>
              <IgnoreOther>true</IgnoreOther>
              <HudText />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CameraBlock">
              <SubtypeName>SmallCameraBlock</SubtypeName>
              <EntityId>77344857157289403</EntityId>
              <Min x="-1" y="5" z="-18" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>OctopusV1.2Camera2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsActive>false</IsActive>
              <Fov>1.04719758</Fov>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>98427340047779227</EntityId>
              <Min x="-6" y="9" z="-19" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockBatteryBlock</SubtypeName>
              <EntityId>129678677475027792</EntityId>
              <Min x="-6" y="10" z="-21" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>OctopusV1.2Battery3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.999999344</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>116853560577555935</EntityId>
              <Min x="-1" y="6" z="-22" />
              <IntegrityPercent>0.647058845</IntegrityPercent>
              <BuildPercent>0.647058845</BuildPercent>
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>77221806964302844</EntityId>
              <Min x="-1" y="6" z="-23" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="7" z="-24" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="7" z="-23" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="7" z="-22" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="7" z="-21" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_RemoteControl">
              <SubtypeName>SmallBlockRemoteControl</SubtypeName>
              <EntityId>92091399001761497</EntityId>
              <Min x="-1" y="7" z="-20" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>OctopusV1.2RemCon</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <UseSingleWeaponMode>false</UseSingleWeaponMode>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
                <SlotsGamepad />
              </Toolbar>
              <SelectedGunId xsi:nil="true" />
              <BuildToolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
                <SlotsGamepad />
              </BuildToolbar>
              <PreviousControlledEntityId xsi:nil="true" />
              <AutoPilotEnabled>false</AutoPilotEnabled>
              <FlightMode>0</FlightMode>
              <BindedCamera>0</BindedCamera>
              <CurrentWaypointIndex>-1</CurrentWaypointIndex>
              <Waypoints />
              <Direction>0</Direction>
              <DockingModeEnabled>false</DockingModeEnabled>
              <CollisionAvoidance>false</CollisionAvoidance>
              <Coords />
              <Names />
              <WaypointThresholdDistance>0</WaypointThresholdDistance>
              <IsMainRemoteControl>false</IsMainRemoteControl>
              <WaitForFreeWay>false</WaitForFreeWay>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="7" z="-20" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="7" z="-20" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_OreDetector">
              <SubtypeName>SmallBlockOreDetector</SubtypeName>
              <EntityId>99764093869259755</EntityId>
              <Min x="0" y="7" z="-19" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>Ore Detector</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <DetectionRadius>50</DetectionRadius>
              <BroadcastUsingAntennas>true</BroadcastUsingAntennas>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>108060185663526938</EntityId>
              <Min x="-6" y="8" z="-15" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>73216907773247747</EntityId>
              <Min x="-6" y="8" z="-16" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>101316705650543997</EntityId>
              <Min x="-7" y="8" z="-17" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector02</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>123710364417733532</EntityId>
              <Min x="-7" y="9" z="-17" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector10</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>110986008309621359</EntityId>
              <Min x="-7" y="9" z="-15" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector41</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>139732204104818660</EntityId>
              <Min x="-7" y="9" z="-16" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector09</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>105579114569794892</EntityId>
              <Min x="-6" y="9" z="-15" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>79692830079889946</EntityId>
              <Min x="-6" y="9" z="-16" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeAtmosphericThrust</SubtypeName>
              <EntityId>116317910457670920</EntityId>
              <Min x="-7" y="10" z="-17" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855883</BuiltBy>
              <CustomName>OctopusV1.2ThrL1</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>129617981987444335</EntityId>
              <Min x="-6" y="8" z="-17" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>85783417732821197</EntityId>
              <Min x="-6" y="9" z="-17" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>136856194504998418</EntityId>
              <Min x="-6" y="9" z="-18" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>113348127266647689</EntityId>
              <Min x="-6" y="8" z="-18" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>110774592379164738</EntityId>
              <Min x="-7" y="9" z="-18" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector11</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>76603055452911923</EntityId>
              <Min x="-7" y="9" z="-19" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector12</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>131358487404630566</EntityId>
              <Min x="-7" y="8" z="-18" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector03</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>113758947599960936</EntityId>
              <Min x="-6" y="8" z="-19" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>132106476745936348</EntityId>
              <Min x="-7" y="9" z="-20" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector13</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>96964923558505759</EntityId>
              <Min x="-7" y="9" z="-21" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector14</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-7" y="7" z="-18" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-7" y="7" z="-17" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-7" y="7" z="-19" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>101751979614000621</EntityId>
              <Min x="-7" y="7" z="-20" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>92857636432012778</EntityId>
              <Min x="-6" y="7" z="-20" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-7" y="7" z="-21" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorSorter">
              <SubtypeName>SmallBlockConveyorSorter</SubtypeName>
              <EntityId>100186778278898193</EntityId>
              <Min x="-6" y="8" z="-20" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Sorter1</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsWhiteList>true</IsWhiteList>
              <DefinitionIds>
                <SerializableDefinitionId Type="MyObjectBuilder_Ore" Subtype="Stone" />
              </DefinitionIds>
              <DefinitionTypes />
              <DrainAll>false</DrainAll>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>109561392612428473</EntityId>
              <Min x="-7" y="8" z="-19" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector04</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>91633766666704014</EntityId>
              <Min x="-6" y="9" z="-20" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>124113778800429275</EntityId>
              <Min x="-6" y="9" z="-21" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Drill">
              <SubtypeName>SmallBlockDrill</SubtypeName>
              <EntityId>116208108044258061</EntityId>
              <Min x="-8" y="1" z="-21" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="1" z="-1" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>3.375</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Drill6</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-5" y="9" z="-25" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>106720298525118875</EntityId>
              <Min x="-6" y="8" z="-21" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>142553954609672127</EntityId>
              <Min x="-7" y="8" z="-21" />
              <IntegrityPercent>0.776286364</IntegrityPercent>
              <BuildPercent>0.776286364</BuildPercent>
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector05</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>109432461026533147</EntityId>
              <Min x="-6" y="9" z="-22" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>143119309619748197</EntityId>
              <Min x="-7" y="9" z="-22" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector15</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>117915017579300223</EntityId>
              <Min x="-6" y="8" z="-22" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>85724069988078992</EntityId>
              <Min x="-7" y="8" z="-22" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector06</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>119700279000435499</EntityId>
              <Min x="-7" y="8" z="-23" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector07</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>125831018481222439</EntityId>
              <Min x="-6" y="9" z="-23" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>120635241742205108</EntityId>
              <Min x="-7" y="9" z="-23" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector16</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>75916900656744725</EntityId>
              <Min x="-6" y="9" z="-24" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>139228804446996182</EntityId>
              <Min x="-6" y="8" z="-24" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>87681908835962402</EntityId>
              <Min x="-7" y="8" z="-24" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector08</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>141233609865582217</EntityId>
              <Min x="-7" y="8" z="-25" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector40</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>139108437294821358</EntityId>
              <Min x="-7" y="9" z="-24" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector17</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>131357587185254560</EntityId>
              <Min x="-6" y="8" z="-23" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>79656372358227030</EntityId>
              <Min x="-6" y="9" z="-25" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>86935966152442231</EntityId>
              <Min x="-6" y="8" z="-25" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>125507956881801943</EntityId>
              <Min x="-7" y="7" z="-25" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Drill">
              <SubtypeName>SmallBlockDrill</SubtypeName>
              <EntityId>103564342650271970</EntityId>
              <Min x="-8" y="1" z="-26" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="1" z="-1" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>3.375</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Drill7</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-7" y="7" z="-23" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-7" y="7" z="-26" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-7" y="7" z="-24" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>99362922375425563</EntityId>
              <Min x="-7" y="6" z="-23" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-7" y="7" z="-22" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>75530627774001356</EntityId>
              <Min x="-7" y="6" z="-22" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-5" y="8" z="-25" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorSmall</SubtypeName>
              <EntityId>89765814369963892</EntityId>
              <Min x="-7" y="9" z="-25" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>0.064</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Ejector39</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <ThrowOut>true</ThrowOut>
              <CollectAll>true</CollectAll>
              <MasterToSlaveTransform xsi:nil="true" />
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>false</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>81830169127617632</EntityId>
              <Min x="-6" y="7" z="-25" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>93077858767715463</EntityId>
              <Min x="-5" y="7" z="-25" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>87377935371846656</EntityId>
              <Min x="-4" y="7" z="-25" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>129373251606491936</EntityId>
              <Min x="-3" y="7" z="-25" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>73676086628081228</EntityId>
              <Min x="-2" y="7" z="-25" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>107052050265464627</EntityId>
              <Min x="-7" y="6" z="-18" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>72637244247061977</EntityId>
              <Min x="-7" y="6" z="-17" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Drill">
              <SubtypeName>SmallBlockDrill</SubtypeName>
              <EntityId>141325597399716652</EntityId>
              <Min x="-8" y="1" z="-16" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="1" z="-1" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>3.375</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Drill5</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Cockpit">
              <SubtypeName>SmallBlockCockpit</SubtypeName>
              <EntityId>110572875635048138</EntityId>
              <Min x="-2" y="15" z="-21" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyHierarchyComponentBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_HierarchyComponentBase">
                      <Children />
                    </Component>
                  </ComponentData>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>8</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Component">
                            <SubtypeName>PowerCell</SubtypeName>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>53</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_AmmoMagazine">
                            <SubtypeName>NATO_25x184mm</SubtypeName>
                            <ProjectilesCount>0</ProjectilesCount>
                          </PhysicalContent>
                          <ItemId>8</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>0</nextItemId>
                      <Volume>1</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                  <ComponentData>
                    <TypeId>MyModStorageComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                      <Storage>
                        <dictionary>
                          <item>
                            <Key>74de02b3-27f9-4960-b1c4-27351f2b06d1</Key>
                            <Value />
                          </item>
                        </dictionary>
                      </Storage>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Cockpit</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <UseSingleWeaponMode>false</UseSingleWeaponMode>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>Pause</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>1</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>View</Action>
                      <BlockEntityId>125852581095535208</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>2</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>View</Action>
                      <BlockEntityId>140404938648183067</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>3</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>110572875635048138</BlockEntityId>
                      <GroupName>OctopusV1.Drills</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>4</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>SaveConnector</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>5</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>StartDepoDrill</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>6</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>StartRockDrill</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>7</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>110572875635048138</BlockEntityId>
                      <GroupName>OctopusV1.AtmosphericThrusters</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>8</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>SetFlyHeight</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>9</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>reset</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>79467901738379129</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>10</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>Stop</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>79467901738379129</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>17</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>110572875635048138</BlockEntityId>
                      <GroupName>OctopusV1.Turrets</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>18</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>PlanetCenter</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>20</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>DisplayHeight</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>22</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>GoHome</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>23</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>StayHome</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>25</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>Rename</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>27</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>Rename</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>35</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>StayHome</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
                <SlotsGamepad>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>Pause</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>1</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>View</Action>
                      <BlockEntityId>125852581095535208</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>2</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>View</Action>
                      <BlockEntityId>140404938648183067</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>4</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>SaveConnector</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>5</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>StartDepoDrill</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>6</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>StartRockDrill</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>8</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>SetFlyHeight</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>9</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>reset</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>79467901738379129</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>10</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>Stop</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>79467901738379129</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>12</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>PlanetCenter</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>16</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>DisplayHeight</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>20</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>GoHome</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>21</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>StayHome</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>24</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>Rename</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>28</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>Rename</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>32</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>StayHome</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                </SlotsGamepad>
              </Toolbar>
              <SelectedGunId xsi:nil="true" />
              <BuildToolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
                <SlotsGamepad />
              </BuildToolbar>
              <PilotRelativeWorld>
                <Position x="2.6030244827270508" y="1.6551915407180786" z="-2.7984373569488525" />
                <Forward x="-0.5921098" y="-0.64094007" z="0.488468468" />
                <Up x="-0.222341031" y="0.7125539" z="0.665455759" />
                <Orientation>
                  <X>0.0182827935</X>
                  <Y>0.8624964</Y>
                  <Z>0.378667057</Z>
                  <W>0.335226744</W>
                </Orientation>
              </PilotRelativeWorld>
              <PilotGunDefinition Type="MyObjectBuilder_Welder" Subtype="Welder4" />
              <IsInFirstPersonView>false</IsInFirstPersonView>
              <OxygenLevel>1</OxygenLevel>
              <PilotJetpackEnabled>true</PilotJetpackEnabled>
              <TextPanels>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>1</FontSize>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294967295</PackedValue>
                    <X>255</X>
                    <Y>255</Y>
                    <Z>255</Z>
                    <R>255</R>
                    <G>255</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <ContentType>SCRIPT</ContentType>
                  <SelectedScript>TSS_ArtificialHorizon</SelectedScript>
                  <TextPadding>2</TextPadding>
                  <CustomizeScripts>true</CustomizeScripts>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>1</FontSize>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294967295</PackedValue>
                    <X>255</X>
                    <Y>255</Y>
                    <Z>255</Z>
                    <R>255</R>
                    <G>255</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <ContentType>SCRIPT</ContentType>
                  <SelectedScript>TSS_EnergyHydrogen</SelectedScript>
                  <TextPadding>2</TextPadding>
                  <CustomizeScripts>true</CustomizeScripts>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>1</FontSize>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294967295</PackedValue>
                    <X>255</X>
                    <Y>255</Y>
                    <Z>255</Z>
                    <R>255</R>
                    <G>255</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <ContentType>SCRIPT</ContentType>
                  <SelectedScript>TSS_Gravity</SelectedScript>
                  <TextPadding>2</TextPadding>
                  <CustomizeScripts>true</CustomizeScripts>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>1</FontSize>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294967295</PackedValue>
                    <X>255</X>
                    <Y>255</Y>
                    <Z>255</Z>
                    <R>255</R>
                    <G>255</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <SelectedScript />
                  <TextPadding>2</TextPadding>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
              </TextPanels>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>132580905618888968</EntityId>
              <Min x="3" y="12" z="-20" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
              <SubtypeName>SmallBlockGyro</SubtypeName>
              <EntityId>126459168905081140</EntityId>
              <Min x="-1" y="15" z="-22" />
              <IntegrityPercent>0.714301</IntegrityPercent>
              <BuildPercent>0.714301</BuildPercent>
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <ConstructionStockpile>
                <Items xsi:type="MyObjectBuilder_StockpileItem">
                  <Amount>7</Amount>
                  <PhysicalContent xsi:type="MyObjectBuilder_Component">
                    <SubtypeName>SteelPlate</SubtypeName>
                  </PhysicalContent>
                </Items>
              </ConstructionStockpile>
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>Gyroscope 5</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
              <SubtypeName>SmallBlockGyro</SubtypeName>
              <EntityId>138647229231221314</EntityId>
              <Min x="-2" y="15" z="-22" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>Gyroscope 4</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
              <SubtypeName>SmallBlockLargeContainer</SubtypeName>
              <EntityId>73659630495308801</EntityId>
              <Min x="-3" y="10" z="-22" />
              <IntegrityPercent>0.900000036</IntegrityPercent>
              <BuildPercent>0.900000036</BuildPercent>
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0.333333343" y="-0.48" z="-0.25" />
              <SkinSubtypeId>Neon_Colorable_Lights</SkinSubtypeId>
              <ConstructionStockpile>
                <Items xsi:type="MyObjectBuilder_StockpileItem">
                  <Amount>14</Amount>
                  <PhysicalContent xsi:type="MyObjectBuilder_Component">
                    <SubtypeName>InteriorPlate</SubtypeName>
                  </PhysicalContent>
                </Items>
              </ConstructionStockpile>
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>129</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Component">
                            <SubtypeName>SteelPlate</SubtypeName>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>102</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Component">
                            <SubtypeName>Motor</SubtypeName>
                          </PhysicalContent>
                          <ItemId>1</ItemId>
                        </MyObjectBuilder_InventoryItem>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>76</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Component">
                            <SubtypeName>InteriorPlate</SubtypeName>
                          </PhysicalContent>
                          <ItemId>2</ItemId>
                        </MyObjectBuilder_InventoryItem>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>1</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Component">
                            <SubtypeName>BulletproofGlass</SubtypeName>
                          </PhysicalContent>
                          <ItemId>3</ItemId>
                        </MyObjectBuilder_InventoryItem>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>9</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Component">
                            <SubtypeName>Computer</SubtypeName>
                          </PhysicalContent>
                          <ItemId>4</ItemId>
                        </MyObjectBuilder_InventoryItem>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>81</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Component">
                            <SubtypeName>Display</SubtypeName>
                          </PhysicalContent>
                          <ItemId>5</ItemId>
                        </MyObjectBuilder_InventoryItem>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>11</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Component">
                            <SubtypeName>Construction</SubtypeName>
                          </PhysicalContent>
                          <ItemId>6</ItemId>
                        </MyObjectBuilder_InventoryItem>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>20</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Ore">
                            <SubtypeName>Scrap</SubtypeName>
                          </PhysicalContent>
                          <ItemId>7</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>0</nextItemId>
                      <Volume>15.625</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Large Cargo Container 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockBatteryBlock</SubtypeName>
              <EntityId>136020485460249147</EntityId>
              <Min x="-2" y="12" z="-25" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>OctopusV1.2Battery6</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.9999999</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockBatteryBlock</SubtypeName>
              <EntityId>110239750514981193</EntityId>
              <Min x="2" y="10" z="-21" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>OctopusV1.2Battery1</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.9999999</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmall</SubtypeName>
              <EntityId>101451617332591220</EntityId>
              <Min x="2" y="12" z="-20" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TimerBlock">
              <SubtypeName>TimerBlockSmall</SubtypeName>
              <EntityId>123313869654448952</EntityId>
              <Min x="0" y="14" z="-23" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>OctopusV1.2TimerClock</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value />
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>1</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Start</Action>
                      <BlockEntityId>123313869654448952</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
                <SlotsGamepad />
              </Toolbar>
              <Delay>1000</Delay>
              <CurrentTime>0</CurrentTime>
              <IsCountingDown>false</IsCountingDown>
              <Silent>true</Silent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TimerBlock">
              <SubtypeName>TimerBlockSmall</SubtypeName>
              <EntityId>86103546574121821</EntityId>
              <Min x="-1" y="14" z="-23" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>OctopusV1.2TimerScan</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value />
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>79467901738379129</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
                <SlotsGamepad />
              </Toolbar>
              <Delay>10000</Delay>
              <CurrentTime>0</CurrentTime>
              <IsCountingDown>false</IsCountingDown>
              <Silent>true</Silent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TimerBlock">
              <SubtypeName>TimerBlockSmall</SubtypeName>
              <EntityId>111400632565244297</EntityId>
              <Min x="-2" y="14" z="-23" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>OctopusV1.2TimerReserve</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
                <SlotsGamepad />
              </Toolbar>
              <Delay>10000</Delay>
              <CurrentTime>0</CurrentTime>
              <IsCountingDown>false</IsCountingDown>
              <Silent>true</Silent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
              <SubtypeName>SmallProgrammableBlock</SubtypeName>
              <EntityId>116569998695489332</EntityId>
              <Min x="-2" y="15" z="-23" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>OctopusV1.2PB_Reserve</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Program>/* v:2.0115 Automatic font detection per LCD, Timers not required, HScroll, PropBool command, Proper Corner LCDs scrolling support, CustomData command to read Custom Data of block 
* In-game script by MMaster 
* 
* Last Update: (support for game update 1.185.1) 
*  Timers are not required anymore - just compile the script &amp; remember and it will work 
*  Automatic detection of Debug / Monospace font per LCD 
*  Much nicer progress bars for monospace font 
*  HScroll command for slow horizontal scrolling text (can't make it faster, sorry) 
*  PropBool and PropsBool commands to display boolean properties of blocks (Handbrake, CollectAll, Open, OnOff, etc) (read more in guide) 
*  LCD linking finally fixed (hopefully) 
*  Vanilla Corner LCDs are now recognized with correct number of lines 
*  Customizable progressbar characters (look below at MMStyle) 
*  CustomData command to read Custom Data of specified block 
*  Working command now displays override of thrusters when they are on 
*  Parachute support 
*  Mass and ShipMass commands now show g, kg, t, kt, Mt, Gt, etc instead of kg, Mg, Gg, etc. 
*  Fixed Scrap now being Ore instead of Ingot (it was changed in game) 
*  Removed everything 'static' from the code 
*  LCD_TAG can be set in Custom Data of Programmable Block (read more in guide section 'What is LCD_TAG?') 
* 
* Previous updates: Look at Change notes tab on Steam workshop page. 
* 
* Customize these: */ 
 
// Use this tag to identify LCDs managed by this script 
// Name filtering rules can be used here so you can use even G:Group or T:[My LCD] 
public string LCD_TAG = "T:[LCD]"; 
 
// How many lines to scroll per step 
public const int SCROLL_LINES_PER_STEP = 1; 
 
// Script automatically figures if LCD is using monospace font 
// if you use custom font scroll down to the bottom, then scroll a bit up until you find AddCharsSize lines 
// monospace font name and size definition is above those 
 
// Enable initial boot sequence (after compile / world load) 
public const bool ENABLE_BOOT = true; 
 
/* READ THIS FULL GUIDE 
http://steamcommunity.com/sharedfiles/filedetails/?id=407158161 
 
Basic video guide 
Please watch the video guide even if you don't understand my English. You can see how things are done there. 
 
https://youtu.be/vqpPQ_20Xso 
 
 
Read Change Notes (above screenshots) for latest updates and new features. 
I notify about updates on twitter so follow if interested. 
 
Please carefully read the FULL GUIDE before asking questions I had to remove guide from here to add more features :( 
Please DO NOT publish this script or its derivations without my permission! Feel free to use it in blueprints! 
 
Special Thanks 
Keen Software House for awesome Space Engineers game 
Malware for contributing to programmable blocks game code 
Textor and CyberVic for their great script related contributions on Keen forums. 
 
Watch Twitter: https://twitter.com/MattsPlayCorner 
and Facebook: https://www.facebook.com/MattsPlayCorner1080p 
for more crazy stuff from me in the future :) 
*/ 
 
 
/* Customize characters used by script */ 
class MMStyle 
{ 
// Monospace font characters (\uXXXX is special character code) 
public const char BAR_MONO_START = '['; 
public const char BAR_MONO_END = ']'; 
public const char BAR_MONO_EMPTY = '\u2591'; // 25% rect 
public const char BAR_MONO_FILL = '\u2588'; // full rect 
 
// Classic (Debug) font characters 
// Start and end characters of progress bar need to be the same width! 
public const char BAR_START = '['; 
public const char BAR_END = ']'; 
// Empty and fill characters of progress bar need to be the same width! 
public const char BAR_EMPTY = '\''; 
public const char BAR_FILL = '|'; 
 
} 
 
 
// (for developer) Debug level to show 
public const int DebugLevel = 0; 
 
// (for modded lcds) Affects all LCDs managed by this programmable block 
/* LCD height modifier 
0.5f makes the LCD have only 1/2 the lines of normal LCD 
2.0f makes it fit 2x more lines on LCD */ 
public const float HEIGHT_MOD = 1.0f; 
 
/* line width modifier 
0.5f moves the right edge to 50% of normal LCD width 
2.0f makes it fit 200% more text on line */ 
public const float WIDTH_MOD = 1.0f; 
 
List&lt;string&gt; BOOT_FRAMES = new List&lt;string&gt;() { 
/* BOOT FRAMES 
* Each @"&lt;text&gt;" marks single frame, add as many as you want each will be displayed for one second 
* @"" is multiline string so you can write multiple lines */ 
@" 
Initializing systems" 
, 
@" 
Verifying connections" 
, 
@" 
Loading commands" 
}; 
 
void ItemsConf() 
{ 
// ITEMS AND QUOTAS LIST 
// (subType, mainType, quota, display name, short name) 
// VANILLA ITEMS 
Add("Stone", "Ore"); 
Add("Iron", "Ore"); 
Add("Nickel", "Ore"); 
Add("Cobalt", "Ore"); 
Add("Magnesium", "Ore"); 
Add("Silicon", "Ore"); 
Add("Silver", "Ore"); 
Add("Gold", "Ore"); 
Add("Platinum", "Ore"); 
Add("Uranium", "Ore"); 
Add("Ice", "Ore"); 
Add("Scrap", "Ore"); 
Add("Stone", "Ingot", 40000, "Gravel", "gravel"); 
Add("Iron", "Ingot", 300000); 
Add("Nickel", "Ingot", 900000); 
Add("Cobalt", "Ingot", 120000); 
Add("Magnesium", "Ingot", 80000); 
Add("Silicon", "Ingot", 80000); 
Add("Silver", "Ingot", 800000); 
Add("Gold", "Ingot", 80000); 
Add("Platinum", "Ingot", 45000); 
Add("Uranium", "Ingot", 12000); 
Add("AutomaticRifleItem", "Tool", 0, "Automatic Rifle"); 
Add("PreciseAutomaticRifleItem", "Tool", 0, "* Precise Rifle"); 
Add("RapidFireAutomaticRifleItem", "Tool", 0, "** Rapid-Fire Rifle"); 
Add("UltimateAutomaticRifleItem", "Tool", 0, "*** Elite Rifle"); 
Add("WelderItem", "Tool", 0, "Welder"); 
Add("Welder2Item", "Tool", 0, "* Enh. Welder"); 
Add("Welder3Item", "Tool", 0, "** Prof. Welder"); 
Add("Welder4Item", "Tool", 0, "*** Elite Welder"); 
Add("AngleGrinderItem", "Tool", 0, "Angle Grinder"); 
Add("AngleGrinder2Item", "Tool", 0, "* Enh. Grinder"); 
Add("AngleGrinder3Item", "Tool", 0, "** Prof. Grinder"); 
Add("AngleGrinder4Item", "Tool", 0, "*** Elite Grinder"); 
Add("HandDrillItem", "Tool", 0, "Hand Drill"); 
Add("HandDrill2Item", "Tool", 0, "* Enh. Drill"); 
Add("HandDrill3Item", "Tool", 0, "** Prof. Drill"); 
Add("HandDrill4Item", "Tool", 0, "*** Elite Drill"); 
Add("Construction", "Component", 50000); 
Add("MetalGrid", "Component", 15500, "Metal Grid"); 
Add("InteriorPlate", "Component", 55000, "Interior Plate"); 
Add("SteelPlate", "Component", 300000, "Steel Plate"); 
Add("Girder", "Component", 3500); 
Add("SmallTube", "Component", 26000, "Small Tube"); 
Add("LargeTube", "Component", 6000, "Large Tube"); 
Add("Motor", "Component", 16000); 
Add("Display", "Component", 500); 
Add("BulletproofGlass", "Component", 12000, "Bulletp. Glass", "bpglass"); 
Add("Computer", "Component", 6500); 
Add("Reactor", "Component", 10000); 
Add("Thrust", "Component", 16000, "Thruster", "thruster"); 
Add("GravityGenerator", "Component", 250, "GravGen", "gravgen"); 
Add("Medical", "Component", 120); 
Add("RadioCommunication", "Component", 250, "Radio-comm", "radio"); 
Add("Detector", "Component", 400); 
Add("Explosives", "Component", 500); 
Add("SolarCell", "Component", 2800, "Solar Cell"); 
Add("PowerCell", "Component", 2800, "Power Cell"); 
Add("Superconductor", "Component", 3000); 
Add("NATO_5p56x45mm", "Ammo", 8000, "5.56x45mm", "5.56x45mm"); 
Add("NATO_25x184mm", "Ammo", 2500, "25x184mm", "25x184mm"); 
Add("Missile200mm", "Ammo", 1600, "200mm Missile", "200mmmissile"); 
Add("OxygenBottle", "OxygenContainerObject", 5, "Oxygen Bottle"); 
Add("HydrogenBottle", "GasContainerObject", 5, "Hydrogen Bottle"); 
 
// MODDED ITEMS 
// (subType, mainType, quota, display name, short name, used) 
// * if used is true, item will be shown in inventory even for 0 items 
// * if used is false, item will be used only for display name and short name 
// AzimuthSupercharger 
Add("AzimuthSupercharger", "Component", 1600, "Supercharger", "supercharger", false); 
// OKI Ammo 
Add("OKI23mmAmmo", "Ammo", 500, "23x180mm", "23x180mm", false); 
Add("OKI50mmAmmo", "Ammo", 500, "50x450mm", "50x450mm", false); 
Add("OKI122mmAmmo", "Ammo", 200, "122x640mm", "122x640mm", false); 
Add("OKI230mmAmmo", "Ammo", 100, "230x920mm", "230x920mm", false); 
 
// REALLY REALLY REALLY 
// DO NOT MODIFY ANYTHING BELOW THIS (TRANSLATION STRINGS ARE AT THE BOTTOM) 
} 
void Add(string sT, string mT, int q = 0, string dN = "", string sN = "", bool u = true) { MMItems.Add(sT, mT, q, dN, sN, u); } 
 uz MMItems;uI k2;ur k3;uK k4=null;void k5(string a){}void k6(string b,string d){var e=b.ToLower(); 
switch(e){case "lcd_tag":LCD_TAG=d;break;}}void k7(){string[]f=Me.CustomData.Split('\n');for(int g=0;g&lt;f.Length;g++){var i=f[g]; 
int j=i.IndexOf('=');if(j&lt;0){k5(i);continue;}var k=i.Substring(0,j).Trim();var l=i.Substring(j+1).Trim();k6(k,l);}}void k8(uI n){ 
MMItems=new uz();ItemsConf();k7();k4=new uK(this,DebugLevel,n);k4.MMItems=MMItems;k4.sS=LCD_TAG;k4.sT=SCROLL_LINES_PER_STEP;k4.sU= 
ENABLE_BOOT;k4.sV=BOOT_FRAMES;k4.sW=false;k4.sZ=HEIGHT_MOD;k4.sY=WIDTH_MOD;k4.tP();}void k9(){k2.s9=this;k4.tf=this;}Program(){ 
Runtime.UpdateFrequency=UpdateFrequency.Update1;}void Main(string o,UpdateType q){try{if(k2==null){k2=new uI(this,DebugLevel);k8( 
k2);k3=new ur(k4);k2.sb(k3,0);}else{k9();k4.th.ql();}if(o.Length==0&amp;&amp;(q&amp;(UpdateType.Update1|UpdateType.Update10|UpdateType. 
Update100))==0){k2.sf();return;}if(o!=""){if(k3.ov(o)){k2.sf();return;}}k3.of=0;k2.sg();}catch(Exception ex){Echo(ex.ToString()); 
Me.Enabled=false;}}class tR:um {public tR(){rU=7;rQ="CmdInvList";}float ka=-1;float kb=-1;public override void Init(){km=new ux(rY 
,nr.th);kn=new uB(rY,nr);}void kc(string r,double u,int v){if(v&gt;0){nr.tA(Math.Min(100,100*u/v),0.3f);nr.Add(' '+r+' ');nr.tw(nr.tI 
(u),1.0f,kb);nr.ts(" / "+nr.tI(v));}else{nr.Add(r+':');nr.tv(nr.tI(u),1.0f,ka);}}void kd(string w,double x,double y,int z){if(z&gt;0) 
{nr.Add(w+' ');nr.tw(nr.tI(x),0.51f);nr.Add(" / "+nr.tI(z));nr.tv("+"+nr.tI(y)+" "+nt.T("I1"),1.0f);nr.tz(Math.Min(100,100*x/z));} 
else{nr.Add(w+':');nr.tw(nr.tI(x),0.51f);nr.tv("+"+nr.tI(y)+" "+nt.T("I1"),1.0f);}}List&lt;uC&gt;ke;int kf=0;int kg=0;bool kh(bool A, 
bool B,string C,string D){if(!A){kg=0;kf=0;}if(kg==0){if((ke=kn.qW(C,A))==null)return false;kg++;A=false;}if(ke.Count&gt;0){if(!B&amp;&amp;!A 
){if(nr.to.sx&gt;0&amp;&amp;nr.to.sw[0]!="")nr.ts("");nr.tx("&lt;&lt; "+D+" "+nt.T("I2")+" &gt;&gt;");}for(;kf&lt;ke.Count;kf++){if(!rY.sl(30))return false; 
double E=ke[kf].r3;if(kr&amp;&amp;E&gt;=ke[kf].qZ)continue;int F=ke[kf].q_;if(kr)F=ke[kf].qZ;var G=nr.tG(ke[kf].r0,ke[kf].r1);kc(G,E,F);}} 
return true;}List&lt;uC&gt;ki;int kj=0;int kk=0;bool kl(bool H){if(!H){kj=0;kk=0;}if(kk==0){if((ki=kn.qW("Ingot",H))==null)return false; 
kk++;H=false;}if(ki.Count&gt;0){if(!ks&amp;&amp;!H){if(nr.to.sx&gt;0&amp;&amp;nr.to.sw[0]!="")nr.ts("");nr.tx("&lt;&lt; "+nt.T("I4")+" "+nt.T("I2")+" &gt;&gt;");} 
for(;kj&lt;ki.Count;kj++){if(!rY.sl(40))return false;double I=ki[kj].r3;if(kr&amp;&amp;I&gt;=ki[kj].qZ)continue;int J=ki[kj].q_;if(kr)J=ki[kj]. 
qZ;var K=nr.tG(ki[kj].r0,ki[kj].r1);if(ki[kj].r0!="Scrap"){double L=kn.qT(ki[kj].r0+" Ore",ki[kj].r0,"Ore").r3;kd(K,I,L,J);}else  
kc(K,I,J);}}return true;}ux km=null;uB kn;List&lt;uv&gt;ko;bool kp,kq,kr,ks;int kt,ku;void kv(){if(kb&lt;0){kb=nr.tN(" / 888.8 M",nr.to.sp) 
;ka=nr.tM(' ',nr.to.sp);}km.qe();kp=nq.pa.EndsWith("x")||nq.pa.EndsWith("xs");kq=nq.pa.EndsWith("s")||nq.pa.EndsWith("sx");kr=nq. 
pa.StartsWith("missing");ks=nq.pa.StartsWith("invlist");kn.qO();ko=nq.ph;if(ko.Count==0)ko.Add(new uv("all"));}bool kw(bool N){if( 
!N)kt=0;for(;kt&lt;ko.Count;kt++){uv O=ko[kt];O.pr();var P=O.po.ToLower();if(!N)ku=0;else N=false;for(;ku&lt;O.pq.Count;ku++){if(!rY.sl( 
30))return false;string[]Q=O.pq[ku].ToLower().Split(':');double R;if(Q[0]=="all")Q[0]="";int S=1;int U=-1;if(Q.Length&gt;1){if(Double 
.TryParse(Q[1],out R)){if(kr)S=(int)Math.Ceiling(R);else U=(int)Math.Ceiling(R);}}var V=Q[0];if(P!="")V+=' '+P;kn.qP(V,(O.pn=="-") 
,S,U);}}return true;}int kx=0;int ky=0;int kz=0;bool kA(bool W){ux X=km;if(!W)kx=0;for(;kx&lt;X.qf();kx++){if(!W)ky=0;for(;ky&lt;X.pV[kx 
].InventoryCount;ky++){if(!W)kz=0;else W=false;IMyInventory Y=X.pV[kx].GetInventory(ky);List&lt;IMyInventoryItem&gt;Z=Y.GetItems();for(; 
kz&lt;Z.Count;kz++){if(!rY.sl(40))return false;IMyInventoryItem _=Z[kz];var a0=nr.tE(_);var a1=a0.ToLower();string a2,a3;nr.tF(a1,out 
a2,out a3);if(a3=="ore"){if(kn.qR(a2.ToLower()+" ingot",a2,"Ingot")&amp;&amp;kn.qR(a0,a2,a3))continue;}else{if(kn.qR(a0,a2,a3))continue;} 
nr.tF(a0,out a2,out a3);uC a4=kn.qT(a1,a2,a3);a4.r3+=(double)_.Amount;}}}return true;}int kB=0;public override bool RunCmd(bool a5 
){if(!a5){kv();kB=0;}for(;kB&lt;=9;kB++){switch(kB){case 0:if(!km.q4(nq.pb,a5))return false;break;case 1:if(!kw(a5))return false;if(! 
kp){if(!kn.qY(a5))return false;}break;case 2:if(!kA(a5))return false;break;case 3:if(!kh(a5,ks,"Ore",nt.T("I3")))return false; 
break;case 4:if(kq){if(!kh(a5,ks,"Ingot",nt.T("I4")))return false;}else{if(!kl(a5))return false;}break;case 5:if(!kh(a5,ks, 
"Component",nt.T("I5")))return false;break;case 6:if(!kh(a5,ks,"OxygenContainerObject",nt.T("I6")))return false;break;case 7:if(! 
kh(a5,true,"GasContainerObject",""))return false;break;case 8:if(!kh(a5,ks,"AmmoMagazine",nt.T("I7")))return false;break;case 9:if 
(!kh(a5,ks,"PhysicalGunObject",nt.T("I8")))return false;break;}a5=false;}return true;}}class tS:um {ux kC;public tS(){rU=2;rQ= 
"CmdCargo";}public override void Init(){kC=new ux(rY,nr.th);}bool kD=true;bool kE=false;bool kF=false;double kG=0;double kH=0;int 
kI=0;public override bool RunCmd(bool a6){if(!a6){kC.qe();kD=nq.pa.Contains("all");kE=(nq.pa[nq.pa.Length-1]=='x');kF=(nq.pa[nq.pa 
.Length-1]=='p');kG=0;kH=0;kI=0;}if(kI==0){if(kD){if(!kC.q4(nq.pb,a6))return false;}else{if(!kC.qc("cargocontainer",nq.pb,a6)) 
return false;}kI++;a6=false;}double a7=kC.pX(ref kG,ref kH,a6);if(Double.IsNaN(a7))return false;nr.Add(nt.T("C2")+" ");if(!kE&amp;&amp;!kF 
){nr.tv(nr.tI(kG)+"L / "+nr.tI(kH)+"L");nr.tA(a7,1.0f,nr.t4[nr.to.sp]);nr.ts(' '+nr.tK(a7)+"%");}else if(kF){nr.tv(nr.tK(a7)+"%"); 
nr.tz(a7);}else nr.tv(nr.tK(a7)+"%");return true;}}class tT:um {ux kJ;public tT(){rU=2;rQ="CmdMass";}public override void Init(){ 
kJ=new ux(rY,nr.th);}bool kK=false;bool kL=false;int kM=0;public override bool RunCmd(bool a8){if(!a8){kJ.qe();kK=(nq.pa[nq.pa. 
Length-1]=='x');kL=(nq.pa[nq.pa.Length-1]=='p');kM=0;}if(kM==0){if(!kJ.q4(nq.pb,a8))return false;kM++;a8=false;}double a9=kJ.p_(a8 
);if(Double.IsNaN(a9))return false;double aa=0;int ab=nq.ph.Count;if(ab&gt;0){double.TryParse(nq.ph[0].pp.Trim(),out aa);if(ab&gt;1){var 
ac=nq.ph[1].pp.Trim().ToLower();if(ac!="")aa*=Math.Pow(1000.0,"kmgtpezy".IndexOf(ac[0]));}aa*=1000.0;}nr.Add(nt.T("M1")+" ");if(aa 
&lt;=0){nr.tv(nr.tJ(a9,false));return true;}double ad=a9/aa*100;if(!kK&amp;&amp;!kL){nr.tv(nr.tJ(a9)+" / "+nr.tJ(aa));nr.tA(ad,1.0f,nr.t4[nr. 
to.sp]);nr.ts(' '+nr.tK(ad)+"%");}else if(kL){nr.tv(nr.tK(ad)+"%");nr.tz(ad);}else nr.tv(nr.tK(ad)+"%");return true;}}class tU:um  
{uE kN;ux kO;public tU(){rU=3;rQ="CmdOxygen";}public override void Init(){kN=nr.tg;kO=new ux(rY,nr.th);}int kP=0;int kQ=0;bool kR= 
false;int kS=0;double kT=0;double kU=0;double kV;public override bool RunCmd(bool ae){if(!ae){kO.qe();kP=0;kQ=0;kV=0;}if(kP==0){if 
(!kO.qc("airvent",nq.pb,ae))return false;kR=(kO.qf()&gt;0);kP++;ae=false;}if(kP==1){for(;kQ&lt;kO.qf();kQ++){if(!rY.sl(8))return false; 
IMyAirVent af=kO.pV[kQ]as IMyAirVent;kV=Math.Max(af.GetOxygenLevel()*100,0f);nr.Add(af.CustomName);if(af.CanPressurize)nr.tv(nr.tK 
(kV)+"%");else nr.tv(nt.T("O1"));nr.tz(kV);}kP++;ae=false;}if(kP==2){if(!ae)kO.qe();if(!kO.qc("oxyfarm",nq.pb,ae))return false;kS= 
kO.qf();kP++;ae=false;}if(kP==3){if(kS&gt;0){if(!ae)kQ=0;double ag=0;for(;kQ&lt;kS;kQ++){if(!rY.sl(4))return false;IMyOxygenFarm ah=kO. 
pV[kQ]as IMyOxygenFarm;ag+=ah.GetOutput()*100;}kV=ag/kS;if(kR)nr.ts("");kR|=(kS&gt;0);nr.Add(nt.T("O2"));nr.tv(nr.tK(kV)+"%");nr.tz( 
kV);}kP++;ae=false;}if(kP==4){if(!ae)kO.qe();if(!kO.qc("oxytank",nq.pb,ae))return false;kS=kO.qf();if(kS==0){if(!kR)nr.ts(nt.T( 
"O3"));return true;}kP++;ae=false;}if(kP==5){if(!ae){kT=0;kU=0;kQ=0;}if(!kN.rl(kO.pV,"oxygen",ref kU,ref kT,ae))return false;if(kT 
==0){if(!kR)nr.ts(nt.T("O3"));return true;}kV=kU/kT*100;if(kR)nr.ts("");nr.Add(nt.T("O4"));nr.tv(nr.tK(kV)+"%");nr.tz(kV);kP++;} 
return true;}}class tV:um {uE kW;ux kX;public tV(){rU=2;rQ="CmdTanks";}public override void Init(){kW=nr.tg;kX=new ux(rY,nr.th);} 
int kY=0;string kZ;string k_;double l0=0;double l1=0;double l2;public override bool RunCmd(bool aj){List&lt;uv&gt;ak=nq.ph;if(ak.Count== 
0){nr.ts(nt.T("T4"));return true;}if(!aj){kZ=(nq.pa.EndsWith("x")?"s":(nq.pa.EndsWith("p")?"p":(nq.pa.EndsWith("v")?"v":"n")));kY= 
0;k_=ak[0].pp.Trim().ToLower();kX.qe();l0=0;l1=0;}if(kY==0){if(!kX.qc("oxytank",nq.pb,aj))return false;aj=false;kY++;}if(kY==1){if 
(!kW.rl(kX.pV,k_,ref l0,ref l1,aj))return false;aj=false;kY++;}if(l1==0){nr.ts(String.Format(nt.T("T5"),k_));return true;}l2=l0/l1 
*100;k_=char.ToUpper(k_[0])+k_.Substring(1);nr.Add(k_+" "+nt.T("T6"));switch(kZ){case "s":nr.tv(' '+nr.tK(l2)+"%");break;default: 
nr.tv(' '+nr.tK(l2)+"%");nr.tz(l2);break;}return true;}}class tW:um {public tW(){rU=7;rQ="CmdPowerTime";}class tX {public TimeSpan 
lt=new TimeSpan(-1);public double lu=-1;public double lv=0;}tX l3=new tX();ux l4;ux l5;public override void Init(){l4=new ux(rY,nr 
.th);l5=new ux(rY,nr.th);}int l6=0;double l7=0;double l8=0,l9=0;double la=0,lb=0,lc=0;double ld=0,le=0;int lg=0;bool lh(string al, 
out TimeSpan am,out double an,bool ao){MyResourceSourceComponent ap;MyResourceSinkComponent aq;double ar=rT;tX at=l3;am=at.lt;an= 
at.lu;if(!ao){l4.qe();l5.qe();at.lu=0;l6=0;l7=0;l8=l9=0;la=0;lb=lc=0;ld=le=0;lg=0;}if(l6==0){if(!l4.qc("reactor",al,ao))return 
false;ao=false;l6++;}if(l6==1){for(;lg&lt;l4.pV.Count;lg++){if(!rY.sl(6))return false;IMyReactor au=l4.pV[lg]as IMyReactor;if(au== 
null||!au.IsWorking)continue;if(au.Components.TryGet&lt;MyResourceSourceComponent&gt;(out ap)){l8+=ap.CurrentOutputByType(nr.tg.rd);l9+= 
ap.MaxOutputByType(nr.tg.rd);}l7+=(double)au.GetInventory(0).CurrentMass;}ao=false;l6++;}if(l6==2){if(!l5.qc("battery",al,ao)) 
return false;ao=false;l6++;}if(l6==3){if(!ao)lg=0;for(;lg&lt;l5.pV.Count;lg++){if(!rY.sl(15))return false;IMyBatteryBlock au=l5.pV[lg 
]as IMyBatteryBlock;if(au==null||!au.IsWorking)continue;if(au.Components.TryGet&lt;MyResourceSourceComponent&gt;(out ap)){lb=ap. 
CurrentOutputByType(nr.tg.rd);lc=ap.MaxOutputByType(nr.tg.rd);}if(au.Components.TryGet&lt;MyResourceSinkComponent&gt;(out aq)){lb-=aq. 
CurrentInputByType(nr.tg.rd);}double av=(lb&lt;0?(au.MaxStoredPower-au.CurrentStoredPower)/(-lb/3600):0);if(av&gt;at.lu)at.lu=av;if(au. 
OnlyRecharge)continue;ld+=lb;le+=lc;la+=au.CurrentStoredPower;}ao=false;l6++;}double aw=l8+ld;if(aw&lt;=0)at.lt=TimeSpan.FromSeconds( 
-1);else{double ax=at.lt.TotalSeconds;double ay;double az=(at.lv-l7)/ar;if(l8&lt;=0)az=Math.Min(aw,l9)/3600000;double aA=0;if(le&gt;0)aA 
=Math.Min(aw,le)/3600;if(az&lt;=0&amp;&amp;aA&lt;=0)ay=-1;else if(az&lt;=0)ay=la/aA;else if(aA&lt;=0)ay=l7/az;else{double aB=aA;double aC=(l8&lt;=0?aw/ 
3600:az*aw/l8);ay=la/aB+l7/aC;}if(ax&lt;=0||ay&lt;0)ax=ay;else ax=(ax+ay)/2;try{at.lt=TimeSpan.FromSeconds(ax);}catch{at.lt=TimeSpan. 
FromSeconds(-1);}}at.lv=l7;an=at.lu;am=at.lt;return true;}string li(TimeSpan aE){var aF="";if(aE.Ticks&lt;=0)return "-";if((int)aE. 
TotalDays&gt;0)aF+=(long)aE.TotalDays+" "+nt.T("C5")+" ";if(aE.Hours&gt;0||aF!="")aF+=aE.Hours+"h ";if(aE.Minutes&gt;0||aF!="")aF+=aE. 
Minutes+"m ";return aF+aE.Seconds+"s";}int lj=0;bool lk=false;bool ll=false;double lm=0;TimeSpan ln;int lo=0,lp=0,lq=0;int lr=0; 
int ls=0;public override bool RunCmd(bool aG){if(!aG){lk=(nq.pa[nq.pa.Length-1]=='x');ll=(nq.pa[nq.pa.Length-1]=='p');lj=0;lo=lp= 
lq=lr=0;ls=0;lm=0;}if(lj==0){if(nq.ph.Count&gt;0){for(;ls&lt;nq.ph.Count;ls++){if(!rY.sl(100))return false;nq.ph[ls].pr();if(nq.ph[ls]. 
pq.Count&lt;=0)continue;var aH=nq.ph[ls].pq[0];int.TryParse(aH,out lr);if(ls==0)lo=lr;else if(ls==1)lp=lr;else if(ls==2)lq=lr;}}lj++; 
aG=false;}if(lj==1){if(!lh(nq.pb,out ln,out lm,aG))return false;lj++;aG=false;}if(!rY.sl(30))return false;double aI=0;TimeSpan aJ; 
try{aJ=new TimeSpan(lo,lp,lq);}catch{aJ=TimeSpan.FromSeconds(-1);}string aK;if(ln.TotalSeconds&gt;0||lm&lt;=0){nr.Add(nt.T("PT1")+" "); 
aK=li(ln);aI=ln.TotalSeconds;}else{nr.Add(nt.T("PT2")+" ");aK=li(TimeSpan.FromSeconds(lm));if(aJ.TotalSeconds&gt;=lm)aI=aJ. 
TotalSeconds-lm;else aI=0;}if(aJ.Ticks&lt;=0){nr.tv(aK);return true;}double aL=aI/aJ.TotalSeconds*100;if(aL&gt;100)aL=100;if(!lk&amp;&amp;!ll){ 
nr.tv(aK);nr.tA(aL,1.0f,nr.t4[nr.to.sp]);nr.ts(' '+aL.ToString("0.0")+"%");}else if(ll){nr.tv(aL.ToString("0.0")+"%");nr.tz(aL);} 
else nr.tv(aL.ToString("0.0")+"%");return true;}}class tY:um {public tY(){rU=7;rQ="CmdPowerUsed";}uE lw;ux lx;public override void 
Init(){lx=new ux(rY,nr.th);lw=nr.tg;}string ly;string lz;string lA;void lB(double aM,double aN){double aO=(aN&gt;0?aM/aN*100:0); 
switch(ly){case "s":nr.tv(aO.ToString("0.0")+"%",1.0f);break;case "v":nr.tv(nr.tI(aM)+"W / "+nr.tI(aN)+"W",1.0f);break;case "c":nr 
.tv(nr.tI(aM)+"W",1.0f);break;case "p":nr.tv(aO.ToString("0.0")+"%",1.0f);nr.tz(aO);break;default:nr.tv(nr.tI(aM)+"W / "+nr.tI(aN) 
+"W");nr.tA(aO,1.0f,nr.t4[nr.to.sp]);nr.tv(' '+aO.ToString("0.0")+"%");break;}}double lC=0,lD=0;int lE=0;int lF=0;tZ lG=new tZ(); 
public override bool RunCmd(bool aP){if(!aP){ly=(nq.pa.EndsWith("x")?"s":(nq.pa.EndsWith("usedp")||nq.pa.EndsWith("topp")?"p":(nq. 
pa.EndsWith("v")?"v":(nq.pa.EndsWith("c")?"c":"n"))));lz=(nq.pa.Contains("top")?"top":"");lA=(nq.ph.Count&gt;0?nq.ph[0].pp:nt.T("PU1" 
));lC=lD=0;lF=0;lE=0;lx.qe();lG.lL();}if(lF==0){if(!lx.q4(nq.pb,aP))return false;aP=false;lF++;}MyResourceSinkComponent aQ; 
MyResourceSourceComponent aR;switch(lz){case "top":if(lF==1){for(;lE&lt;lx.pV.Count;lE++){if(!rY.sl(20))return false;IMyTerminalBlock 
aS=lx.pV[lE];if(aS.Components.TryGet&lt;MyResourceSinkComponent&gt;(out aQ)){ListReader&lt;MyDefinitionId&gt;aT=aQ.AcceptedResources;if(aT. 
IndexOf(lw.rd)&lt;0)continue;lC=aQ.CurrentInputByType(lw.rd)*0xF4240;}else continue;lG.lI(lC,aS);}aP=false;lF++;}if(lG.lJ()&lt;=0){nr.ts 
("PowerUsedTop: "+nt.T("D2"));return true;}int aU=10;if(nq.ph.Count&gt;0)if(!int.TryParse(lA,out aU)){aU=10;}if(aU&gt;lG.lJ())aU=lG.lJ() 
;if(lF==2){if(!aP){lE=lG.lJ()-1;lG.lM();}for(;lE&gt;=lG.lJ()-aU;lE--){if(!rY.sl(30))return false;IMyTerminalBlock aS=lG.lK(lE);var aV 
=nr.tO(aS.CustomName,uK.sQ*0.4f*nr.to.sq);if(aS.Components.TryGet&lt;MyResourceSinkComponent&gt;(out aQ)){lC=aQ.CurrentInputByType(lw.rd 
)*0xF4240;lD=aQ.MaxRequiredInputByType(lw.rd)*0xF4240;}nr.Add(aV+" ");lB(lC,lD);}}break;default:for(;lE&lt;lx.pV.Count;lE++){if(!rY. 
sl(10))return false;double aW;IMyTerminalBlock aS=lx.pV[lE];if(aS.Components.TryGet&lt;MyResourceSinkComponent&gt;(out aQ)){ListReader&lt; 
MyDefinitionId&gt;aT=aQ.AcceptedResources;if(aT.IndexOf(lw.rd)&lt;0)continue;aW=aQ.CurrentInputByType(lw.rd);lD+=aQ. 
MaxRequiredInputByType(lw.rd);}else continue;if(aS.Components.TryGet&lt;MyResourceSourceComponent&gt;(out aR)&amp;&amp;(aS as IMyBatteryBlock!= 
null)){aW-=aR.CurrentOutputByType(lw.rd);if(aW&lt;=0)continue;}lC+=aW;}nr.Add(lA);lB(lC*0xF4240,lD*0xF4240);break;}return true;} 
public class tZ {List&lt;KeyValuePair&lt;double,IMyTerminalBlock&gt;&gt;lH=new List&lt;KeyValuePair&lt;double,IMyTerminalBlock&gt;&gt;();public void lI( 
double a_,IMyTerminalBlock b0){lH.Add(new KeyValuePair&lt;double,IMyTerminalBlock&gt;(a_,b0));}public int lJ(){return lH.Count;}public 
IMyTerminalBlock lK(int b1){return lH[b1].Value;}public void lL(){lH.Clear();}public void lM(){lH.Sort((b2,b3)=&gt;(b2.Key.CompareTo( 
b3.Key)));}}}class t_:um {public t_(){rU=3;rQ="CmdPower";}uE lN;ux lO;ux lP;ux lQ;ux lR;public override void Init(){lO=new ux(rY, 
nr.th);lP=new ux(rY,nr.th);lQ=new ux(rY,nr.th);lR=new ux(rY,nr.th);lN=nr.tg;}string lS;bool lT;string lU;string lV;int lW;int lX=0 
;public override bool RunCmd(bool b4){if(!b4){lS=(nq.pa.EndsWith("x")?"s":(nq.pa.EndsWith("p")?"p":(nq.pa.EndsWith("v")?"v":"n"))) 
;lT=(nq.pa.StartsWith("powersummary"));lU="a";lV="";if(nq.pa.Contains("stored"))lU="s";else if(nq.pa.Contains("in"))lU="i";else if 
(nq.pa.Contains("out"))lU="o";lX=0;lO.qe();lP.qe();lQ.qe();}if(lU=="a"){if(lX==0){if(!lO.qc("reactor",nq.pb,b4))return false;b4= 
false;lX++;}if(lX==1){if(!lP.qc("solarpanel",nq.pb,b4))return false;b4=false;lX++;}}else if(lX==0)lX=2;if(lX==2){if(!lQ.qc( 
"battery",nq.pb,b4))return false;b4=false;lX++;}int b5=lO.qf();int b6=lP.qf();int b7=lQ.qf();if(lX==3){lW=0;if(b5&gt;0)lW++;if(b6&gt;0) 
lW++;if(b7&gt;0)lW++;if(lW&lt;1){nr.ts(nt.T("P6"));return true;}if(nq.ph.Count&gt;0){if(nq.ph[0].pp.Length&gt;0)lV=nq.ph[0].pp;}lX++;b4=false; 
}if(lU!="a"){if(!ma(lQ,(lV==""?nt.T("P7"):lV),lU,lS,b4))return false;return true;}var b8=nt.T("P8");if(!lT){if(lX==4){if(b5&gt;0)if(! 
m2(lO,(lV==""?nt.T("P9"):lV),lS,b4))return false;lX++;b4=false;}if(lX==5){if(b6&gt;0)if(!m2(lP,(lV==""?nt.T("P10"):lV),lS,b4))return 
false;lX++;b4=false;}if(lX==6){if(b7&gt;0)if(!ma(lQ,(lV==""?nt.T("P7"):lV),lU,lS,b4))return false;lX++;b4=false;}}else{b8=nt.T("P11") 
;lW=10;if(lX==4)lX=7;}if(lW==1)return true;if(!b4){lR.qe();lR.qd(lO);lR.qd(lP);lR.qd(lQ);}if(!m2(lR,b8,lS,b4))return false;return 
true;}void lY(double b9,double ba){double bb=(ba&gt;0?b9/ba*100:0);switch(lS){case "s":nr.tv(' '+bb.ToString("0.0")+"%");break;case 
"v":nr.tv(nr.tI(b9)+"W / "+nr.tI(ba)+"W");break;case "c":nr.tv(nr.tI(b9)+"W");break;case "p":nr.tv(' '+bb.ToString("0.0")+"%");nr. 
tz(bb);break;default:nr.tv(nr.tI(b9)+"W / "+nr.tI(ba)+"W");nr.tA(bb,1.0f,nr.t4[nr.to.sp]);nr.tv(' '+bb.ToString("0.0")+"%");break; 
}}double lZ=0;double l_=0,m0=0;int m1=0;bool m2(ux bc,string bd,string be,bool bf){if(!bf){l_=0;m0=0;m1=0;}if(m1==0){if(!lN.rj(bc. 
pV,lN.rd,ref lZ,ref lZ,ref l_,ref m0,bf))return false;m1++;bf=false;}if(!rY.sl(50))return false;double bg=(m0&gt;0?l_/m0*100:0);nr. 
Add(bd+": ");lY(l_*0xF4240,m0*0xF4240);return true;}double m3=0,m4=0,m5=0,m6=0;double m7=0,m8=0;int m9=0;bool ma(ux bh,string bi, 
string bj,string bk,bool bl){if(!bl){m3=m4=0;m5=m6=0;m7=m8=0;m9=0;}if(m9==0){if(!lN.rh(bh.pV,ref m5,ref m6,ref m3,ref m4,ref m7, 
ref m8,bl))return false;m5*=0xF4240;m6*=0xF4240;m3*=0xF4240;m4*=0xF4240;m7*=0xF4240;m8*=0xF4240;m9++;bl=false;}double bm=(m8&gt;0?m7/ 
m8*100:0);double bn=(m4&gt;0?m3/m4*100:0);double bo=(m6&gt;0?m5/m6*100:0);var bp=bj=="a";if(m9==1){if(!rY.sl(50))return false;if(bp){if( 
bk!="p"){nr.Add(bi+": ");nr.tv("(IN "+nr.tI(m5)+"W / OUT "+nr.tI(m3)+"W)");}else nr.ts(bi+": ");nr.Add("  "+nt.T("P3")+": ");}else 
 nr.Add(bi+": ");if(bp||bj=="s")switch(bk){case "s":nr.tv(' '+bm.ToString("0.0")+"%");break;case "v":nr.tv(nr.tI(m7)+"Wh / "+nr.tI 
(m8)+"Wh");break;case "p":nr.tv(' '+bm.ToString("0.0")+"%");nr.tz(bm);break;default:nr.tv(nr.tI(m7)+"Wh / "+nr.tI(m8)+"Wh");nr.tA( 
bm,1.0f,nr.t4[nr.to.sp]);nr.tv(' '+bm.ToString("0.0")+"%");break;}if(bj=="s")return true;m9++;bl=false;}if(m9==2){if(!rY.sl(50)) 
return false;if(bp)nr.Add("  "+nt.T("P4")+": ");if(bp||bj=="o")switch(bk){case "s":nr.tv(' '+bn.ToString("0.0")+"%");break;case 
"v":nr.tv(nr.tI(m3)+"W / "+nr.tI(m4)+"W");break;case "p":nr.tv(' '+bn.ToString("0.0")+"%");nr.tz(bn);break;default:nr.tv(nr.tI(m3) 
+"W / "+nr.tI(m4)+"W");nr.tA(bn,1.0f,nr.t4[nr.to.sp]);nr.tv(' '+bn.ToString("0.0")+"%");break;}if(bj=="o")return true;m9++;bl= 
false;}if(!rY.sl(50))return false;if(bp)nr.Add("  "+nt.T("P5")+": ");if(bp||bj=="i")switch(bk){case "s":nr.tv(' '+bo.ToString( 
"0.0")+"%");break;case "v":nr.tv(nr.tI(m5)+"W / "+nr.tI(m6)+"W");break;case "p":nr.tv(' '+bo.ToString("0.0")+"%");nr.tz(bo);break; 
default:nr.tv(nr.tI(m5)+"W / "+nr.tI(m6)+"W");nr.tA(bo,1.0f,nr.t4[nr.to.sp]);nr.tv(' '+bo.ToString("0.0")+"%");break;}return true; 
}}class u0:um {public u0(){rU=0.5;rQ="CmdSpeed";}public override bool RunCmd(bool bq){double br=0;double bs=1;var bt="m/s";if(nq. 
pa.Contains("kmh")){bs=3.6;bt="km/h";}else if(nq.pa.Contains("mph")){bs=2.23694;bt="mph";}if(nq.pb!="")double.TryParse(nq.pb.Trim( 
),out br);nr.Add(nt.T("S1")+" ");nr.tv((nr.ti.pw*bs).ToString("F1")+" "+bt+" ");if(br&gt;0)nr.tz(nr.ti.pw/br*100);return true;}}class 
u1:um {public u1(){rU=0.5;rQ="CmdAccel";}public override bool RunCmd(bool bu){double bv=0;if(nq.pb!="")double.TryParse(nq.pb.Trim( 
),out bv);nr.Add(nt.T("AC1")+" ");nr.tv(nr.ti.py.ToString("F1")+" m/s²");if(bv&gt;0){double bw=nr.ti.py/bv*100;nr.tz(bw);}return true 
;}}class u2:um {public u2(){rU=30;rQ="CmdEcho";}public override bool RunCmd(bool bx){var by=(nq.pa=="center"?"c":(nq.pa=="right"? 
"r":"n"));switch(by){case "c":nr.tx(nq.pd);break;case "r":nr.tv(nq.pd);break;default:nr.ts(nq.pd);break;}return true;}}class u3:um 
{public u3(){rU=3;rQ="CmdCharge";}ux mb;public override void Init(){mb=new ux(rY,nr.th);}int mc=0;int md=0;public override bool 
RunCmd(bool bz){var bA=nq.pa.Contains("x");if(!bz){mb.qe();md=0;mc=0;}if(mc==0){if(!mb.qc("jumpdrive",nq.pb,bz))return false;if(mb 
.qf()&lt;=0){nr.ts("Charge: "+nt.T("D2"));return true;}mc++;bz=false;}for(;md&lt;mb.qf();md++){if(!rY.sl(25))return false;IMyJumpDrive 
bB=mb.pV[md]as IMyJumpDrive;double bC,bD,bE;bE=nr.th.qt(bB,out bC,out bD);nr.Add(bB.CustomName+" ");if(!bA){nr.tv(nr.tI(bC)+ 
"Wh / "+nr.tI(bD)+"Wh");nr.tA(bE,1.0f,nr.t4[nr.to.sp]);}nr.tv(' '+bE.ToString("0.0")+"%");}return true;}}class u4:um {public u4(){ 
rU=1;rQ="CmdDateTime";}public override bool RunCmd(bool bF){var bG=(nq.pa.StartsWith("datetime"));var bH=(nq.pa.StartsWith("date") 
);var bI=nq.pa.Contains("c");int bJ=nq.pa.IndexOf('+');if(bJ&lt;0)bJ=nq.pa.IndexOf('-');float bK=0;if(bJ&gt;=0)float.TryParse(nq.pa. 
Substring(bJ),out bK);DateTime bL=DateTime.Now.AddHours(bK);var bM="";int bN=nq.pc.IndexOf(' ');if(bN&gt;=0)bM=nq.pc.Substring(bN+1); 
if(!bG){if(!bH)bM+=bL.ToShortTimeString();else bM+=bL.ToShortDateString();}else{if(bM=="")bM=String.Format("{0:d} {0:t}",bL);else{ 
bM=bM.Replace("/","\\/");bM=bM.Replace(":","\\:");bM=bM.Replace("\"","\\\"");bM=bM.Replace("'","\\'");bM=bL.ToString(bM+' ');bM=bM 
.Substring(0,bM.Length-1);}}if(bI)nr.tx(bM);else nr.ts(bM);return true;}}class u5:um {public u5(){rU=1;rQ="CmdCountdown";}public 
override bool RunCmd(bool bO){var bP=nq.pa.EndsWith("c");var bQ=nq.pa.EndsWith("r");var bR="";int bS=nq.pc.IndexOf(' ');if(bS&gt;=0) 
bR=nq.pc.Substring(bS+1).Trim();DateTime bT=DateTime.Now;DateTime bU;if(!DateTime.TryParseExact(bR,"H:mm d.M.yyyy",System. 
Globalization.CultureInfo.InvariantCulture,System.Globalization.DateTimeStyles.None,out bU)){nr.ts(nt.T("C3"));nr.ts( 
"  Countdown 19:02 28.2.2015");return true;}TimeSpan bV=bU-bT;var bW="";if(bV.Ticks&lt;=0)bW=nt.T("C4");else{if((int)bV.TotalDays&gt;0) 
bW+=(int)bV.TotalDays+" "+nt.T("C5")+" ";if(bV.Hours&gt;0||bW!="")bW+=bV.Hours+"h ";if(bV.Minutes&gt;0||bW!="")bW+=bV.Minutes+"m ";bW+= 
bV.Seconds+"s";}if(bP)nr.tx(bW);else if(bQ)nr.tv(bW);else nr.ts(bW);return true;}}class u6:um {public u6(){rU=1;rQ="CmdTextLCD";} 
public override bool RunCmd(bool bX){IMyTextPanel bY=ns.nL.rp;if(bY==null)return true;var bZ="";if(nq.pb!=""&amp;&amp;nq.pb!="*"){ 
IMyTextPanel b_=nr.tk.GetBlockWithName(nq.pb)as IMyTextPanel;if(b_==null){nr.ts("TextLCD: "+nt.T("T1")+nq.pb);return true;}bZ=b_. 
GetPublicText();}else{nr.ts("TextLCD:"+nt.T("T2"));return true;}if(bZ.Length==0)return true;nr.tt(bZ);return true;}}class u7:um { 
public u7(){rU=15;rQ="CmdBlockCount";}ux me;public override void Init(){me=new ux(rY,nr.th);}bool mf;bool mg;int mh=0;int mi=0; 
public override bool RunCmd(bool c0){if(!c0){mf=(nq.pa=="enabledcount");mg=(nq.pa=="prodcount");mh=0;mi=0;}if(nq.ph.Count==0){if( 
mi==0){if(!c0)me.qe();if(!me.q4(nq.pb,c0))return false;mi++;c0=false;}if(!ms(me,"blocks",mf,mg,c0))return false;return true;}for(; 
mh&lt;nq.ph.Count;mh++){uv c1=nq.ph[mh];if(!c0)c1.pr();if(!ml(c1,c0))return false;c0=false;}return true;}int mj=0;int mk=0;bool ml(uv 
c2,bool c3){if(!c3){mj=0;mk=0;}for(;mj&lt;c2.pq.Count;mj++){if(mk==0){if(!c3)me.qe();if(!me.qc(c2.pq[mj],nq.pb,c3))return false;mk++; 
c3=false;}if(!ms(me,c2.pq[mj],mf,mg,c3))return false;mk=0;c3=false;}return true;}Dictionary&lt;string,int&gt;mm=new Dictionary&lt;string, 
int&gt;();Dictionary&lt;string,int&gt;mn=new Dictionary&lt;string,int&gt;();List&lt;string&gt;mo=new List&lt;string&gt;();int mp=0;int mq=0;int mr=0;bool ms( 
ux c4,string c5,bool c6,bool c7,bool c8){string c9;if(c4.qf()==0){c9=c5.ToLower();c9=char.ToUpper(c9[0])+c9.Substring(1).ToLower() 
;nr.Add(c9+" "+nt.T("C1")+" ");var ca=(c6||c7?"0 / 0":"0");nr.tv(ca);return true;}if(!c8){mm.Clear();mn.Clear();mo.Clear();mp=0;mq 
=0;mr=0;}if(mr==0){for(;mp&lt;c4.qf();mp++){if(!rY.sl(15))return false;IMyProductionBlock cb=c4.pV[mp]as IMyProductionBlock;c9=c4.pV[ 
mp].DefinitionDisplayNameText;if(mo.Contains(c9)){mm[c9]++;if((c6&amp;&amp;c4.pV[mp].IsWorking)||(c7&amp;&amp;cb!=null&amp;&amp;cb.IsProducing))mn[c9]++;} 
else{mm.Add(c9,1);mo.Add(c9);if(c6||c7)if((c6&amp;&amp;c4.pV[mp].IsWorking)||(c7&amp;&amp;cb!=null&amp;&amp;cb.IsProducing))mn.Add(c9,1);else mn.Add(c9,0) 
;}}mr++;c8=false;}for(;mq&lt;mm.Count;mq++){if(!rY.sl(8))return false;nr.Add(mo[mq]+" "+nt.T("C1")+" ");var ca=(c6||c7?mn[mo[mq]]+ 
" / ":"")+mm[mo[mq]];nr.tv(ca);}return true;}}class u8:um {public u8(){rU=5;rQ="CmdShipCtrl";}ux mt;public override void Init(){mt 
=new ux(rY,nr.th);}public override bool RunCmd(bool cd){if(!cd)mt.qe();if(!mt.qc("shipctrl",nq.pb,cd))return false;if(mt.qf()&lt;=0){ 
if(nq.pb!=""&amp;&amp;nq.pb!="*")nr.ts(nq.pa+": "+nt.T("SC1")+" ("+nq.pb+")");else nr.ts(nq.pa+": "+nt.T("SC1"));return true;}if(nq.pa. 
StartsWith("damp")){var ce=(mt.pV[0]as IMyShipController).DampenersOverride;nr.Add(nt.T("SCD"));nr.tv(ce?"ON":"OFF");}else{var ce= 
(mt.pV[0]as IMyShipController).IsUnderControl;nr.Add(nt.T("SCO"));nr.tv(ce?"YES":"NO");}return true;}}class u9:um {public u9(){rU= 
5;rQ="CmdWorking";}ux mu;public override void Init(){mu=new ux(rY,nr.th);}int mv=0;int mw=0;bool mx;public override bool RunCmd( 
bool cg){if(!cg){mv=0;mx=(nq.pa=="workingx");mw=0;}if(nq.ph.Count==0){if(mv==0){if(!cg)mu.qe();if(!mu.q4(nq.pb,cg))return false;mv 
++;cg=false;}if(!mG(mu,mx,"",cg))return false;return true;}for(;mw&lt;nq.ph.Count;mw++){uv ch=nq.ph[mw];if(!cg)ch.pr();if(!mD(ch,cg)) 
return false;cg=false;}return true;}int my=0;int mz=0;string[]mA;string mB;string mC;bool mD(uv ci,bool cj){if(!cj){my=0;mz=0;}for 
(;mz&lt;ci.pq.Count;mz++){if(my==0){if(!cj){if(ci.pq[mz]=="")continue;mu.qe();mA=ci.pq[mz].ToLower().Split(':');mB=mA[0];mC=(mA. 
Length&gt;1?mA[1]:"");}if(mB!=""){if(!mu.qc(mB,nq.pb,cj))return false;}else{if(!mu.q4(nq.pb,cj))return false;}my++;cj=false;}if(!mG( 
mu,mx,mC,cj))return false;my=0;cj=false;}return true;}string mE(IMyTerminalBlock ck){uy cl=nr.th;if(!ck.IsWorking)return nt.T("W1" 
);IMyProductionBlock cm=ck as IMyProductionBlock;if(cm!=null)if(cm.IsProducing)return nt.T("W2");else return nt.T("W3");IMyAirVent 
cn=ck as IMyAirVent;if(cn!=null){if(cn.CanPressurize)return(cn.GetOxygenLevel()*100).ToString("F1")+"%";else return nt.T("W4");} 
IMyGasTank co=ck as IMyGasTank;if(co!=null)return(co.FilledRatio*100).ToString("F1")+"%";IMyBatteryBlock cp=ck as IMyBatteryBlock; 
if(cp!=null)return cl.qr(cp);IMyJumpDrive cq=ck as IMyJumpDrive;if(cq!=null)return cl.qu(cq).ToString("0.0")+"%";IMyLandingGear cr 
=ck as IMyLandingGear;if(cr!=null){switch((int)cr.LockMode){case 0:return nt.T("W8");case 1:return nt.T("W10");case 2:return nt.T( 
"W7");}}IMyDoor cs=ck as IMyDoor;if(cs!=null){if(cs.Status==DoorStatus.Open)return nt.T("W5");return nt.T("W6");}IMyShipConnector 
cu=ck as IMyShipConnector;if(cu!=null){if(cu.Status==MyShipConnectorStatus.Unconnected)return nt.T("W8");if(cu.Status== 
MyShipConnectorStatus.Connected)return nt.T("W7");else return nt.T("W10");}IMyLaserAntenna cv=ck as IMyLaserAntenna;if(cv!=null) 
return cl.qs(cv);IMyRadioAntenna cw=ck as IMyRadioAntenna;if(cw!=null)return nr.tI(cw.Radius)+"m";IMyBeacon cx=ck as IMyBeacon;if( 
cx!=null)return nr.tI(cx.Radius)+"m";IMyThrust cy=ck as IMyThrust;if(cy!=null&amp;&amp;cy.ThrustOverride&gt;0)return nr.tI(cy.ThrustOverride) 
+"N";return nt.T("W9");}int mF=0;bool mG(ux cz,bool cA,string cB,bool cC){if(!cC)mF=0;for(;mF&lt;cz.qf();mF++){if(!rY.sl(20))return 
false;IMyTerminalBlock cD=cz.pV[mF];var cE=(cA?(cD.IsWorking?nt.T("W9"):nt.T("W1")):mE(cD));if(cB!=""&amp;&amp;cE.ToLower()!=cB)continue; 
if(cA)cE=mE(cD);var cF=cD.CustomName;cF=nr.tO(cF,uK.sQ*0.7f*nr.to.sq);nr.Add(cF);nr.tv(cE);}return true;}}class ua:um {public ua() 
{rU=5;rQ="CmdDamage";}ux mH;public override void Init(){mH=new ux(rY,nr.th);}bool mI=false;int mJ=0;public override bool RunCmd( 
bool cG){var cH=nq.pa.StartsWith("damagex");var cI=nq.pa.EndsWith("noc");var cJ=(!cI&amp;&amp;nq.pa.EndsWith("c"));float cK=100;if(!cG){mH 
.qe();mI=false;mJ=0;}if(!mH.q4(nq.pb,cG))return false;if(nq.ph.Count&gt;0){if(!float.TryParse(nq.ph[0].pp,out cK))cK=100;}for(;mJ&lt;mH. 
qf();mJ++){if(!rY.sl(30))return false;IMyTerminalBlock cL=mH.pV[mJ];IMySlimBlock cM=cL.CubeGrid.GetCubeBlock(cL.Position);if(cM== 
null)continue;float cN=(cI?cM.MaxIntegrity:cM.BuildIntegrity);if(!cJ)cN-=cM.CurrentDamage;float cO=100*(cN/cM.MaxIntegrity);if(cO 
&gt;=cK)continue;mI=true;nr.Add(nr.tO(cM.FatBlock.DisplayNameText,uK.sQ*0.69f*nr.to.sq-70)+" ");if(!cH){nr.tw(nr.tI(cN)+" / ",0.69f); 
nr.Add(nr.tI(cM.MaxIntegrity));}nr.tv(' '+cO.ToString("0.0")+"%");nr.tz(cO);}if(!mI)nr.ts(nt.T("D3"));return true;}}class ub:um { 
public ub(){rU=2;rQ="CmdAmount";}ux mK;public override void Init(){mK=new ux(rY,nr.th);}bool mL;int mM=0;int mN=0;int mO=0;public 
override bool RunCmd(bool cP){if(!cP){mL=!nq.pa.EndsWith("x");if(nq.ph.Count==0)nq.ph.Add(new uv( 
"reactor,gatlingturret,missileturret,interiorturret,gatlinggun,launcherreload,launcher,oxygenerator"));mN=0;}for(;mN&lt;nq.ph.Count; 
mN++){uv cQ=nq.ph[mN];if(!cP){cQ.pr();mM=0;mO=0;}for(;mO&lt;cQ.pq.Count;mO++){if(mM==0){if(!cP){if(cQ.pq[mO]=="")continue;mK.qe();} 
var cR=cQ.pq[mO];if(!mK.qc(cR,nq.pb,cP))return false;mM++;cP=false;}if(!mZ(cP))return false;cP=false;mM=0;}}return true;}int mP=0; 
int mQ=0;double mR=0;double mS=0;double mT=0;int mU=0;IMyTerminalBlock mV;IMyInventory mW;List&lt;IMyInventoryItem&gt;mX;string mY=""; 
bool mZ(bool cS){if(!cS){mP=0;mQ=0;}for(;mP&lt;mK.qf();mP++){if(mQ==0){if(!rY.sl(50))return false;mV=mK.pV[mP];mW=mV.GetInventory(0); 
if(mW==null)continue;mQ++;cS=false;}if(!cS){mX=mW.GetItems();mY=(mX.Count&gt;0?mX[0].Content.ToString():"");mU=0;mR=0;mS=0;mT=0;}for( 
;mU&lt;mX.Count;mU++){if(!rY.sl(30))return false;IMyInventoryItem cT=mX[mU];if(cT.Content.ToString()!=mY)mT+=(double)cT.Amount;else  
mR+=(double)cT.Amount;}var cU=nt.T("A1");var cV=mV.CustomName;if(mR&gt;0&amp;&amp;(double)mW.CurrentVolume&gt;0){double cW=mT*(double)mW. 
CurrentVolume/(mR+mT);mS=Math.Floor(mR*((double)mW.MaxVolume-cW)/(double)mW.CurrentVolume-cW);cU=nr.tI(mR)+" / "+(mT&gt;0?"~":"")+nr. 
tI(mS);}cV=nr.tO(cV,uK.sQ*0.8f*nr.to.sq);nr.Add(cV);nr.tv(cU);if(mL&amp;&amp;mS&gt;0){double cX=100*mR/mS;nr.tz(cX);}mQ=0;cS=false;}return 
true;}}class uc:um {public uc(){rU=1;rQ="CmdPosition";}public override bool RunCmd(bool cY){var cZ=(nq.pa=="posxyz");var c_=(nq.pa 
=="posgps");IMyTerminalBlock d0=ns.nL.rp;if(nq.pb!=""&amp;&amp;nq.pb!="*"){d0=nr.tk.GetBlockWithName(nq.pb);if(d0==null){nr.ts("Pos: "+nt. 
T("P1")+": "+nq.pb);return true;}}if(c_){VRageMath.Vector3D d1=d0.GetPosition();nr.ts("GPS:"+nt.T("P2")+":"+d1.GetDim(0).ToString( 
"F2")+":"+d1.GetDim(1).ToString("F2")+":"+d1.GetDim(2).ToString("F2")+":");return true;}nr.Add(nt.T("P2")+": ");if(!cZ){nr.tv(d0. 
GetPosition().ToString("F0"));return true;}nr.ts("");nr.Add(" X: ");nr.tv(d0.GetPosition().GetDim(0).ToString("F0"));nr.Add(" Y: " 
);nr.tv(d0.GetPosition().GetDim(1).ToString("F0"));nr.Add(" Z: ");nr.tv(d0.GetPosition().GetDim(2).ToString("F0"));return true;}} 
class ud:um {public ud(){rU=5;rQ="CmdDetails";}string m_="";ux n0;public override void Init(){n0=new ux(rY,nr.th);if(nq.ph.Count&gt;0 
)m_=nq.ph[0].pp.Trim();}int n1=0;int n2=1;IMyTerminalBlock n3;public override bool RunCmd(bool d2){if(nq.pb==""||nq.pb=="*"){nr.ts 
("Details: "+nt.T("D1"));return true;}if(!d2){n0.qe();n1=0;n2=1;}if(n1==0){if(!n0.q4(nq.pb,d2))return true;if(n0.qf()&lt;=0){nr.ts( 
"Details: "+nt.T("D2"));return true;}n1++;d2=false;}int d3=(nq.pa.EndsWith("x")?1:0);if(n1==1){if(!d2){n3=n0.pV[0];nr.ts(n3. 
CustomName);}if(!n7(n3,d3,d2))return false;n1++;d2=false;}for(;n2&lt;n0.qf();n2++){if(!d2){n3=n0.pV[n2];nr.ts("");nr.ts(n3.CustomName 
);}if(!n7(n3,d3,d2))return false;d2=false;}return true;}string[]n4;int n5=0;bool n6=false;bool n7(IMyTerminalBlock d4,int d5,bool 
d6){if(!d6){n4=(d4.DetailedInfo+"\n"+d4.CustomInfo).Split('\n');n5=d5;n6=(m_=="");}for(;n5&lt;n4.Length;n5++){if(!rY.sl(5))return 
false;if(n4[n5]=="")continue;if(!n6){if(!n4[n5].Contains(m_))continue;n6=true;}nr.ts("  "+n4[n5]);}return true;}}class ue:um { 
public ue(){rU=1;rQ="CmdShipMass";}public override bool RunCmd(bool d7){var d8=nq.pa.EndsWith("base");double d9=0;if(nq.pb!="") 
double.TryParse(nq.pb.Trim(),out d9);int da=nq.ph.Count;if(da&gt;0){var db=nq.ph[0].pp.Trim().ToLower();if(db!="")d9*=Math.Pow(1000.0 
,"kmgtpezy".IndexOf(db[0]));}double dc=(d8?nr.ti.pG:nr.ti.pF);if(!d8)nr.Add(nt.T("SM1")+" ");else nr.Add(nt.T("SM2")+" ");nr.tv(nr 
.tJ(dc,true,'k')+" ");if(d9&gt;0)nr.tz(dc/d9*100);return true;}}class uf:um {public uf(){rU=1;rQ="CmdDistance";}string n8="";string[] 
n9;Vector3D na;string nb="";bool nc=false;public override void Init(){nc=false;if(nq.ph.Count&lt;=0)return;n8=nq.ph[0].pp.Trim();n9= 
n8.Split(':');if(n9.Length&lt;5||n9[0]!="GPS")return;double dd,de,df;if(!double.TryParse(n9[2],out dd))return;if(!double.TryParse(n9[ 
3],out de))return;if(!double.TryParse(n9[4],out df))return;na=new Vector3D(dd,de,df);nb=n9[1];nc=true;}public override bool RunCmd 
(bool dg){if(!nc){nr.ts("Distance: "+nt.T("DTU")+" '"+n8+"'.");return true;}IMyTerminalBlock dh=ns.nL.rp;if(nq.pb!=""&amp;&amp;nq.pb!="*") 
{dh=nr.tk.GetBlockWithName(nq.pb);if(dh==null){nr.ts("Distance: "+nt.T("P1")+": "+nq.pb);return true;}}double di=Vector3D.Distance 
(dh.GetPosition(),na);nr.Add(nb+": ");nr.tv(nr.tI(di)+"m ");return true;}}class ug:um {public ug(){rU=1;rQ="CmdAltitude";}public 
override bool RunCmd(bool dj){var dk=(nq.pa.EndsWith("sea")?"sea":"ground");switch(dk){case "sea":nr.Add(nt.T("ALT1"));nr.tv(nr.ti 
.pI.ToString("F0")+" m");break;default:nr.Add(nt.T("ALT2"));nr.tv(nr.ti.pK.ToString("F0")+" m");break;}return true;}}class uh:um { 
public uh(){rU=1;rQ="CmdStopTask";}public override bool RunCmd(bool dl){double dm=0;if(nq.pa.Contains("best"))dm=nr.ti.pw/nr.ti.pA 
;else dm=nr.ti.pw/nr.ti.pD;double dn=nr.ti.pw/2*dm;if(nq.pa.Contains("time")){nr.Add(nt.T("ST"));if(double.IsNaN(dm)){nr.tv("N/A") 
;return true;}var dp="";try{TimeSpan dq=TimeSpan.FromSeconds(dm);if((int)dq.TotalDays&gt;0)dp=" &gt; 24h";else{if(dq.Hours&gt;0)dp=dq.Hours 
+"h ";if(dq.Minutes&gt;0||dp!="")dp+=dq.Minutes+"m ";dp+=dq.Seconds+"s";}}catch{dp="N/A";}nr.tv(dp);return true;}nr.Add(nt.T("SD")); 
if(!double.IsNaN(dn)&amp;&amp;!double.IsInfinity(dn))nr.tv(nr.tI(dn)+"m ");else nr.tv("N/A");return true;}}class ui:um {public ui(){rU=1; 
rQ="CmdGravity";}public override bool RunCmd(bool dr){var ds=(nq.pa.Contains("nat")?"n":(nq.pa.Contains("art")?"a":(nq.pa.Contains 
("tot")?"t":"s")));Vector3D dt;switch(ds){case "n":nr.Add(nt.T("G2")+" ");dt=nr.ti.pN.GetNaturalGravity();nr.tv(dt.Length(). 
ToString("F1")+" m/s²");break;case "a":nr.Add(nt.T("G3")+" ");dt=nr.ti.pN.GetArtificialGravity();nr.tv(dt.Length().ToString("F1")+ 
" m/s²");break;case "t":nr.Add(nt.T("G1")+" ");dt=nr.ti.pN.GetTotalGravity();nr.tv(dt.Length().ToString("F1")+" m/s²");break; 
default:nr.Add(nt.T("GN"));nr.tw(" | ",0.33f);nr.tw(nt.T("GA")+" | ",0.66f);nr.tv(nt.T("GT"),1.0f);nr.Add("");dt=nr.ti.pN. 
GetNaturalGravity();nr.tw(dt.Length().ToString("F1")+" | ",0.33f);dt=nr.ti.pN.GetArtificialGravity();nr.tw(dt.Length().ToString( 
"F1")+" | ",0.66f);dt=nr.ti.pN.GetTotalGravity();nr.tv(dt.Length().ToString("F1")+" ");break;}return true;}}class uj:um {public uj 
(){rU=1;rQ="CmdCustomData";}public override bool RunCmd(bool du){IMyTextPanel dv=ns.nL.rp;if(dv==null)return true;var dw="";if(nq. 
pb!=""&amp;&amp;nq.pb!="*"){IMyTerminalBlock dx=nr.tk.GetBlockWithName(nq.pb)as IMyTerminalBlock;if(dx==null){nr.ts("CustomData: "+nt.T( 
"CD1")+nq.pb);return true;}dw=dx.CustomData;}else{nr.ts("CustomData:"+nt.T("CD2"));return true;}if(dw.Length==0)return true;nr.tt( 
dw);return true;}}class uk:um {ux nd;public uk(){rU=1;rQ="CmdProp";}public override void Init(){nd=new ux(rY,nr.th);}int ne=0;int 
nf=0;bool ng=false;string nh=null;string ni=null;string nj=null;string nk=null;public override bool RunCmd(bool dy){if(!dy){ng=nq. 
pa.StartsWith("props");nh=ni=nj=nk=null;nf=0;ne=0;}if(nq.ph.Count&lt;1){nr.ts(nq.pa+": "+"Missing property name.");return true;}if(ne 
==0){if(!dy)nd.qe();if(!nd.q4(nq.pb,dy))return false;nl();ne++;dy=false;}if(ne==1){int dz=nd.qf();if(dz==0){nr.ts(nq.pa+": "+ 
"No blocks found.");return true;}for(;nf&lt;dz;nf++){if(!rY.sl(50))return false;IMyTerminalBlock dA=nd.pV[nf];if(dA.GetProperty(nh)!= 
null){if(ni==null){var dB=nr.tO(dA.CustomName,uK.sQ*0.7f*nr.to.sq);nr.Add(dB);}else nr.Add(ni);nr.tv(nm(dA,nh,nj,nk));if(!ng) 
return true;}}}return true;}void nl(){nh=nq.ph[0].pp;if(nq.ph.Count&gt;1){if(!ng)ni=nq.ph[1].pp;else nj=nq.ph[1].pp;if(nq.ph.Count&gt;2) 
{if(!ng)nj=nq.ph[2].pp;else nk=nq.ph[2].pp;if(nq.ph.Count&gt;3&amp;&amp;!ng)nk=nq.ph[3].pp;}}}string nm(IMyTerminalBlock dC,string dD,string 
dE=null,string dF=null){return(dC.GetValue&lt;bool&gt;(dD)?(dE!=null?dE:nt.T("W9")):(dF!=null?dF:nt.T("W1")));}}class ul:um {public ul() 
{rU=0.5;rQ="CmdHScroll";}StringBuilder nn=new StringBuilder();int no=1;public override bool RunCmd(bool dG){if(nn.Length==0){var 
dH=nq.pd+"  ";if(dH.Length==0)return true;float dI=nr.tr();float dJ=nr.tN(dH,nr.to.sp);float dK=dI/dJ;if(dK&gt;1)nn.Append(string. 
Join("",Enumerable.Repeat(dH,(int)Math.Ceiling(dK))));else nn.Append(dH);if(dH.Length&gt;40)no=3;else if(dH.Length&gt;5)no=2;else no=1; 
nr.ts(nn.ToString());return true;}var dL=nq.pa.EndsWith("r");if(dL){nn.Insert(0,nn.ToString(nn.Length-no,no));nn.Remove(nn.Length- 
no,no);}else{nn.Append(nn.ToString(0,no));nn.Remove(0,no);}nr.ts(nn.ToString());return true;}}class um:uH {public uJ np=null; 
protected uu nq;protected uK nr;protected up ns;protected TranslationTable nt;public um(){rU=3600;rQ="CommandTask";}public void nu 
(up dM,uu dN){ns=dM;nr=ns.nK;nq=dN;nt=nr.tj;}public virtual bool RunCmd(bool dO){nr.ts(nt.T("UC")+": '"+nq.pc+"'");return true;} 
public override bool Run(bool dP){np=nr.tp(np,ns.nL);if(!dP)nr.tB();return RunCmd(dP);}}class un:uH {ur nv;uK nw;string nx=""; 
public un(uK dQ,ur dR,string dS){rU=-1;rQ="ArgScroll";nx=dS;nv=dR;nw=dQ;}int ny;ux nz;public override void Init(){nz=new ux(rY,nw. 
th);}int nA=0;int nB=0;uu nC;public override bool Run(bool dT){if(!dT){nB=0;nz.qe();nC=new uu(rY);nA=0;}if(nB==0){if(!nC.pm(nx,dT) 
)return false;if(nC.ph.Count&gt;0){if(!int.TryParse(nC.ph[0].pp,out ny))ny=1;else if(ny&lt;1)ny=1;}if(nC.pa.EndsWith("up"))ny=-ny;else 
if(!nC.pa.EndsWith("down"))ny=0;nB++;dT=false;}if(nB==1){if(!nz.qc("textpanel",nC.pb,dT))return false;nB++;dT=false;}uF dU;for(;nA 
&lt;nz.qf();nA++){if(!rY.sl(20))return false;IMyTextPanel dV=nz.pV[nA]as IMyTextPanel;if(!nv.ol.TryGetValue(dV,out dU))continue;if(dU 
==null||dU.rp!=dV)continue;if(dU.rt)dU.ro.sM=10;if(ny&gt;0)dU.ro.sL(ny);else if(ny&lt;0)dU.ro.sK(-ny);else dU.ro.sN();dU.rE();}return 
true;}}class uo:uH {uK nD;ur nE;public int nF=0;public uo(uK dW,ur dX){rQ="BootPanelsTask";rU=1;nD=dW;nE=dX;if(!nD.sU){nF=int. 
MaxValue;nE.om=true;}}TranslationTable nG;public override void Init(){nG=nD.tj;}public override bool Run(bool dY){if(nF&gt;nD.sV. 
Count){s1();return true;}if(nF==0){nE.om=false;}nI();nF++;return true;}public override void End(){nE.om=true;}public void nH(){us 
dZ=nE.oh;for(int d_=0;d_&lt;dZ.oz();d_++){uF e0=dZ.oB(d_);nD.tp(e0.ro,e0);nD.tB();nD.tC(e0);}nF=(nD.sU?0:int.MaxValue);}public void 
nI(){us e1=nE.oh;for(int e2=0;e2&lt;e1.oz();e2++){uF e3=e1.oB(e2);nD.tp(e3.ro,e3);nD.tB();if(e3.rp.FontSize&gt;3f)continue;nD.tx(nG.T( 
"B1"));double e4=(double)nF/nD.sV.Count*100;nD.tz(e4);if(nF==nD.sV.Count){nD.ts("");nD.tx("Automatic LCDs 2");nD.tx("by MMaster"); 
}else nD.tt(nD.sV[nF]);var e5=e3.rt;e3.rt=false;nD.tC(e3);e3.rt=e5;}}public bool nJ(){return nF&lt;=nD.sV.Count;}}class up:uH {public 
uK nK;public uF nL;public uq nM=null;string nN="N/A";public Dictionary&lt;string,um&gt;nO=new Dictionary&lt;string,um&gt;();public List&lt;string 
&gt;nP=null;public ur nQ;public bool nR{get{return nQ.om;}}public up(ur e6,uF e7){rU=5;nL=e7;nQ=e6;nK=e6.og;rQ="PanelProcess";} 
TranslationTable nS;public override void Init(){nS=nK.tj;}uu nT=null;um nU(string e8,bool e9){if(!e9)nT=new uu(rY);if(!nT.pm(e8,e9 
))return null;um ea=nT.pg();ea.nu(this,nT);rY.sb(ea,0);return ea;}string nV="";void nW(){try{nV=nL.rp.CustomData;}catch{nV="";nL. 
rp.CustomData="";}nV=nV.Replace("\\\n","");}int nX=0;int nY=0;List&lt;string&gt;nZ=null;HashSet&lt;string&gt;n_=new HashSet&lt;string&gt;();int o0=0 
;bool o1(bool eb){if(!eb){char[]ec={';','\n' };var ed=nV.Replace("\\;","\f");nZ=new List&lt;string&gt;(ed.Split(ec,StringSplitOptions. 
RemoveEmptyEntries));n_.Clear();nX=0;nY=0;o0=0;}while(nX&lt;nZ.Count){if(!rY.sl(500))return false;if(nZ[nX].StartsWith("//")){nZ. 
RemoveAt(nX);continue;}nZ[nX]=nZ[nX].Replace('\f',';');if(!nO.ContainsKey(nZ[nX])){if(o0!=1)eb=false;o0=1;um ee=nU(nZ[nX],eb);if( 
ee==null)return false;eb=false;nO.Add(nZ[nX],ee);o0=0;}if(!n_.Contains(nZ[nX]))n_.Add(nZ[nX]);nX++;}if(nP!=null){um ef;while(nY&lt;nP 
.Count){if(!rY.sl(7))return false;if(!n_.Contains(nP[nY]))if(nO.TryGetValue(nP[nY],out ef)){ef.s1();nO.Remove(nP[nY]);}nY++;}}nP= 
nZ;return true;}public override void End(){if(nP!=null){um eg;for(int eh=0;eh&lt;nP.Count;eh++){if(nO.TryGetValue(nP[eh],out eg))eg. 
s1();}nP=null;}if(nM!=null){nM.s1();nM=null;}}string o2="";bool o3=false;public override bool Run(bool ei){if(nL.rn.rL()&lt;=0){s1(); 
return true;}if(!ei){nL.ro=nK.tp(nL.ro,nL);nW();if(nL.rp.CustomName!=o2){o3=true;}else{o3=false;}o2=nL.rp.CustomName;}if(nV!=nN){ 
if(!o1(ei))return false;if(nV==""){if(nQ.om){nK.tB();nK.ts(nS.T("H1"));nK.tC(nL);return true;}return this.r_(2);}o3=true;}nN=nV;if 
(nM!=null&amp;&amp;o3){rY.sc(nM);nM.o8();rY.sb(nM,0);}else if(nM==null){nM=new uq(this);rY.sb(nM,0);}return true;}}class uq:uH {public uK 
o4;public uF o5;up o6;public uq(up ej){o6=ej;o4=o6.nK;o5=o6.nL;rU=0.5;rQ="PanelDisplay";}double o7=0;public void o8(){o7=0;}int o9 
=0;int oa=0;bool ob=true;double oc=double.MaxValue;int od=0;public override bool Run(bool ek){um el;if(!ek&amp;&amp;(!o6.nR||o6.nP==null|| 
o6.nP.Count&lt;=0))return true;if(o6.nQ.of&gt;5)return r_(0);if(!ek){oa=0;ob=false;oc=double.MaxValue;od=0;}if(od==0){while(oa&lt;o6.nP. 
Count){if(!rY.sl(5))return false;if(o6.nO.TryGetValue(o6.nP[oa],out el)){if(!el.rW)return r_(el.rR-rY.s5+0.001);if(el.rS&gt;o7)ob= 
true;if(el.rR&lt;oc)oc=el.rR;}oa++;}od++;ek=false;}double em=oc-rY.s5+0.001;if(!ob&amp;&amp;!o5.ru())return r_(em);o4.tq(o5);if(ob){if(!ek){ 
o7=rY.s5;o4.tB();var en=o5.rp.CustomName;en=(en.Contains("#")?en.Substring(en.LastIndexOf('#')+1):"");if(en!="")o4.ts(en);o9=0;} 
while(o9&lt;o6.nP.Count){if(!rY.sl(7))return false;if(!o6.nO.TryGetValue(o6.nP[o9],out el)){o4.ts("ERR: No cmd task ("+o6.nP[o9]+")") 
;o9++;continue;}o4.tu(el.np.sE());o9++;}}o4.tC(o5);o6.nQ.of++;if(rU&lt;em&amp;&amp;!o5.ru())return r_(em);return true;}}class ur:uH {public 
int of=0;public uK og;public us oh=new us();ux oi;ux oj;Dictionary&lt;uF,up&gt;ok=new Dictionary&lt;uF,up&gt;();public Dictionary&lt;IMyTextPanel 
,uF&gt;ol=new Dictionary&lt;IMyTextPanel,uF&gt;();public bool om=false;uo on=null;public ur(uK eo){rU=5;og=eo;rQ="ProcessPanels";}public 
override void Init(){oi=new ux(rY,og.th);oj=new ux(rY,og.th);on=new uo(og,this);}int oo=0;bool oq(bool ep){if(!ep)oo=0;if(oo==0){ 
if(!oi.qc("textpanel",og.sS,ep))return false;oo++;ep=false;}if(oo==1){if(og.sS=="T:[LCD]"&amp;&amp;"T:!LCD!"!="")if(!oi.qc("textpanel", 
"T:!LCD!",ep))return false;oo++;ep=false;}return true;}string or(IMyTextPanel eq){return eq.CustomName+" "+eq.NumberInGrid+" "+eq. 
GetPosition().ToString("F0");}void os(IMyTextPanel er){uF es=null;if(!ol.TryGetValue(er,out es)){return;}es.rn.rK(er);ol.Remove(er 
);if(es.rn.rL()&lt;=0){up et;if(ok.TryGetValue(es,out et)){oh.oC(es.rs);ok.Remove(es);et.s1();}}}int ot=0;int ou=0;public override 
bool Run(bool eu){if(!eu){oi.qe();ot=0;ou=0;}if(!oq(eu))return false;while(ot&lt;oi.qf()){if(!rY.sl(20))return false;IMyTextPanel ev= 
(oi.pV[ot]as IMyTextPanel);if(ev==null||!ev.IsWorking){oi.pV.RemoveAt(ot);continue;}uF ew=null;var ey=false;var ez=or(ev);int eA= 
ez.IndexOf("!LINK:");if(eA&gt;=0&amp;&amp;ez.Length&gt;eA+6){ez=ez.Substring(eA+6);ey=true;}string[]eB=ez.Split(' ');var eC=eB[0];if(ol. 
ContainsKey(ev)){ew=ol[ev];if(ew.rs==ez||(ey&amp;&amp;ew.rs==eC)){ot++;continue;}this.os(ev);}if(!ey){ew=new uF(og,ez);ew.rn.rI(ez,ev);up 
eD=new up(this,ew);rY.sb(eD,0);ok.Add(ew,eD);oh.oy(ez,ew);ol.Add(ev,ew);ot++;continue;}ew=oh.oA(eC);if(ew==null){ew=new uF(og,eC); 
oh.oy(eC,ew);up eD=new up(this,ew);rY.sb(eD,0);ok.Add(ew,eD);}ew.rn.rI(ez,ev);ol.Add(ev,ew);ot++;}while(ou&lt;oj.qf()){if(!rY.sl(300) 
)return false;IMyTextPanel ev=oj.pV[ou]as IMyTextPanel;if(ev==null)continue;if(!oi.pV.Contains(ev)){this.os(ev);}ou++;}oj.qe();oj. 
qd(oi);if(!on.rV&amp;&amp;on.nJ())rY.sb(on,0);return true;}public bool ov(string eG){var eH=eG.ToLower();if(eH=="clear"){on.nH();if(!on.rV 
)rY.sb(on,0);return true;}if(eH=="boot"){on.nF=0;if(!on.rV)rY.sb(on,0);return true;}if(eH.StartsWith("scroll")){un eI=new un(og, 
this,eG);rY.sb(eI,0);return true;}if(eH=="props"){uy eJ=og.th;var eK=new List&lt;IMyTerminalBlock&gt;();var eL=new List&lt;ITerminalAction&gt; 
();var eM=new List&lt;ITerminalProperty&gt;();IMyTextPanel eN=rY.s9.GridTerminalSystem.GetBlockWithName("DEBUG")as IMyTextPanel;if(eN== 
null){return true;}eN.WritePublicText("Properties: ");foreach(var item in eJ.qk){eN.WritePublicText(item.Key+" =============="+ 
"\n",true);item.Value(eK,null);if(eK.Count&lt;=0){eN.WritePublicText("No blocks\n",true);continue;}eK[0].GetProperties(eM,eO=&gt;{return 
eO.Id!="Name"&amp;&amp;eO.Id!="OnOff"&amp;&amp;!eO.Id.StartsWith("Show");});foreach(var prop in eM){eN.WritePublicText("P "+prop.Id+" "+prop. 
TypeName+"\n",true);}eM.Clear();eK.Clear();}}return false;}}public class us {Dictionary&lt;string,uF&gt;ow=new Dictionary&lt;string,uF&gt;(); 
List&lt;string&gt;ox=new List&lt;string&gt;();public void oy(string eP,uF eQ){if(!ow.ContainsKey(eP)){ox.Add(eP);ow.Add(eP,eQ);}}public int oz 
(){return ow.Count;}public uF oA(string eR){if(ow.ContainsKey(eR))return ow[eR];return null;}public uF oB(int eS){return ow[ox[eS] 
];}public void oC(string eT){ow.Remove(eT);ox.Remove(eT);}public void oD(){ox.Clear();ow.Clear();}public void oE(){ox.Sort();}} 
public enum ut {oF=0,oG=1,oH=2,oI=3,oJ=4,oK=5,oL=6,oM=7,oN=8,oO=9,oP=10,oQ=11,oR=12,oS=13,oT=14,oU=15,oV=16,oW=17,oX=18,oY=19,oZ= 
20,o_=21,p0=22,p1=23,p2=24,p3=25,p4=26,p5=27,p6=28,p7=29,p8=30,}class uu {uI p9;public string pa="";public string pb="";public 
string pc="";public string pd="";public ut pe=ut.oF;public uu(uI eU){p9=eU;}ut pf(){if(pa=="echo"||pa=="center"||pa=="right") 
return ut.oG;if(pa.StartsWith("hscroll"))return ut.p8;if(pa.StartsWith("inventory")||pa=="missing"||pa.StartsWith("invlist")) 
return ut.oH;if(pa.StartsWith("working"))return ut.oX;if(pa.StartsWith("cargo"))return ut.oI;if(pa.StartsWith("mass"))return ut.oJ 
;if(pa.StartsWith("shipmass"))return ut.p1;if(pa=="oxygen")return ut.oK;if(pa.StartsWith("tanks"))return ut.oL;if(pa.StartsWith( 
"powertime"))return ut.oM;if(pa.StartsWith("powerused"))return ut.oN;if(pa.StartsWith("power"))return ut.oO;if(pa.StartsWith( 
"speed"))return ut.oP;if(pa.StartsWith("accel"))return ut.oQ;if(pa.StartsWith("alti"))return ut.p3;if(pa.StartsWith("charge")) 
return ut.oR;if(pa.StartsWith("time")||pa.StartsWith("date"))return ut.oS;if(pa.StartsWith("countdown"))return ut.oT;if(pa. 
StartsWith("textlcd"))return ut.oU;if(pa.EndsWith("count"))return ut.oV;if(pa.StartsWith("dampeners")||pa.StartsWith("occupied")) 
return ut.oW;if(pa.StartsWith("damage"))return ut.oY;if(pa.StartsWith("amount"))return ut.oZ;if(pa.StartsWith("pos"))return ut.o_; 
if(pa.StartsWith("distance"))return ut.p2;if(pa.StartsWith("details"))return ut.p0;if(pa.StartsWith("stop"))return ut.p4;if(pa. 
StartsWith("gravity"))return ut.p5;if(pa.StartsWith("customdata"))return ut.p6;if(pa.StartsWith("prop"))return ut.p7;return ut.oF; 
}public um pg(){switch(pe){case ut.oG:return new u2();case ut.oH:return new tR();case ut.oI:return new tS();case ut.oJ:return new 
tT();case ut.oK:return new tU();case ut.oL:return new tV();case ut.oM:return new tW();case ut.oN:return new tY();case ut.oO:return 
new t_();case ut.oP:return new u0();case ut.oQ:return new u1();case ut.oR:return new u3();case ut.oS:return new u4();case ut.oT: 
return new u5();case ut.oU:return new u6();case ut.oV:return new u7();case ut.oW:return new u8();case ut.oX:return new u9();case 
ut.oY:return new ua();case ut.oZ:return new ub();case ut.o_:return new uc();case ut.p0:return new ud();case ut.p1:return new ue(); 
case ut.p2:return new uf();case ut.p3:return new ug();case ut.p4:return new uh();case ut.p5:return new ui();case ut.p6:return new 
uj();case ut.p7:return new uk();case ut.p8:return new ul();default:return new um();}}public List&lt;uv&gt;ph=new List&lt;uv&gt;();string[]pi= 
null;string pj="";bool pk=false;int pl=1;public bool pm(string eV,bool eW){if(!eW){pe=ut.oF;pb="";pa="";pc=eV.TrimStart(' ');ph. 
Clear();if(pc=="")return true;int eX=pc.IndexOf(' ');if(eX&lt;0||eX&gt;=pc.Length-1)pd="";else pd=pc.Substring(eX+1);pi=pc.Split(' ');pj 
="";pk=false;pa=pi[0].ToLower();pl=1;}for(;pl&lt;pi.Length;pl++){if(!p9.sl(40))return false;var eY=pi[pl];if(eY=="")continue;if(eY[0] 
=='{'&amp;&amp;eY[eY.Length-1]=='}'){eY=eY.Substring(1,eY.Length-2);if(eY=="")continue;if(pb=="")pb=eY;else ph.Add(new uv(eY));continue;} 
if(eY[0]=='{'){pk=true;pj=eY.Substring(1);continue;}if(eY[eY.Length-1]=='}'){pk=false;pj+=' '+eY.Substring(0,eY.Length-1);if(pb== 
"")pb=pj;else ph.Add(new uv(pj));continue;}if(pk){if(pj.Length!=0)pj+=' ';pj+=eY;continue;}if(pb=="")pb=eY;else ph.Add(new uv(eY)) 
;}pe=pf();return true;}}public class uv {public string pn="";public string po="";public string pp="";public List&lt;string&gt;pq=new 
List&lt;string&gt;();public uv(string eZ){pp=eZ;}public void pr(){if(pp==""||pn!=""||po!=""||pq.Count&gt;0)return;var e_=pp.Trim();if(e_[0] 
=='+'||e_[0]=='-'){pn+=e_[0];e_=pp.Substring(1);}string[]f0=e_.Split('/');var f1=f0[0];if(f0.Length&gt;1){po=f0[0];f1=f0[1];}else po= 
"";if(f1.Length&gt;0){string[]f2=f1.Split(',');for(int f3=0;f3&lt;f2.Length;f3++)if(f2[f3]!="")pq.Add(f2[f3]);}}}public class uw:uH { 
MyShipVelocities ps;public VRageMath.Vector3D pt{get{return ps.LinearVelocity;}}public VRageMath.Vector3D pu{get{return ps. 
AngularVelocity;}}double pv=0;public double pw{get{if(pL!=null)return pL.GetShipSpeed();else return pv;}}double px=0;public double 
py{get{return px;}}double pz=0;public double pA{get{return pz;}}double pB=0;double pC=0;public double pD{get{return pB;}} 
MyShipMass pE;public double pF{get{return pE.TotalMass;}}public double pG{get{return pE.BaseMass;}}double pH=double.NaN;public 
double pI{get{return pH;}}double pJ=double.NaN;public double pK{get{return pJ;}}IMyShipController pL=null;IMySlimBlock pM=null; 
public IMyShipController pN{get{return pL;}}VRageMath.Vector3D pO;public uw(uI f4){rQ="ShipMgr";rY=f4;pO=rY.s9.Me.GetPosition();rU 
=0.5;}List&lt;IMyTerminalBlock&gt;pP=new List&lt;IMyTerminalBlock&gt;();int pQ=0;public override bool Run(bool f5){if(!f5){pP.Clear();rY.s9. 
GridTerminalSystem.GetBlocksOfType&lt;IMyShipController&gt;(pP);pQ=0;if(pL!=null&amp;&amp;pL.CubeGrid.GetCubeBlock(pL.Position)!=pM)pL=null;}if( 
pP.Count&gt;0){for(;pQ&lt;pP.Count;pQ++){if(!rY.sl(20))return false;IMyShipController f6=pP[pQ]as IMyShipController;if(f6.IsMainCockpit 
||f6.IsUnderControl){pL=f6;pM=f6.CubeGrid.GetCubeBlock(f6.Position);if(f6.IsMainCockpit){pQ=pP.Count;break;}}}if(pL==null){pL=pP[0 
]as IMyShipController;pM=pL.CubeGrid.GetCubeBlock(pL.Position);}pE=pL.CalculateShipMass();if(!pL.TryGetPlanetElevation( 
MyPlanetElevation.Sealevel,out pH))pH=double.NaN;if(!pL.TryGetPlanetElevation(MyPlanetElevation.Surface,out pJ))pJ=double.NaN;ps= 
pL.GetShipVelocities();}double f7=pv;pv=pt.Length();px=(pv-f7)/rT;if(-px&gt;pz)pz=-px;if(-px&gt;pB){pB=-px;pC=rY.s5;}if(rY.s5-pC&gt;5&amp;&amp;-px&gt; 
0.1)pB-=(pB+px)*0.3f;return true;}}public class ux {uI pR=null;uy pS;IMyCubeGrid pT{get{return pR.s9.Me.CubeGrid;}} 
IMyGridTerminalSystem pU{get{return pR.s9.GridTerminalSystem;}}public List&lt;IMyTerminalBlock&gt;pV=new List&lt;IMyTerminalBlock&gt;();public 
ux(uI f8,uy f9){pR=f8;pS=f9;}int pW=0;public double pX(ref double fa,ref double fb,bool fc){if(!fc)pW=0;for(;pW&lt;pV.Count;pW++){if( 
!pR.sl(4))return Double.NaN;IMyInventory fd=pV[pW].GetInventory(0);if(fd==null)continue;fa+=(double)fd.CurrentVolume;fb+=(double) 
fd.MaxVolume;}fa*=1000;fb*=1000;return(fb&gt;0?fa/fb*100:100);}int pY=0;double pZ=0;public double p_(bool fe){if(!fe){pY=0;pZ=0;}for( 
;pY&lt;pV.Count;pY++){if(!pR.sl(6))return Double.NaN;for(int ff=0;ff&lt;2;ff++){IMyInventory fg=pV[pY].GetInventory(ff);if(fg==null) 
continue;pZ+=(double)fg.CurrentMass;}}return pZ*1000;}int q0=0;bool q1(bool fh=false){if(!fh)q0=0;while(q0&lt;pV.Count){if(!pR.sl(4)) 
return false;if(pV[q0].CubeGrid!=pT){pV.RemoveAt(q0);continue;}q0++;}return true;}List&lt;IMyBlockGroup&gt;q2=new List&lt;IMyBlockGroup&gt;(); 
int q3=0;public bool q4(string fi,bool fj){int fk=fi.IndexOf(':');var fl=(fk&gt;=1&amp;&amp;fk&lt;=2?fi.Substring(0,fk):"");var fm=fl.Contains( 
"T");if(fl!="")fi=fi.Substring(fk+1);if(fi==""||fi=="*"){if(!fj){var fn=new List&lt;IMyTerminalBlock&gt;();pU.GetBlocks(fn);pV.AddList( 
fn);}if(fm)if(!q1(fj))return false;return true;}var fo=(fl.Contains("G")?fi.Trim().ToLower():"");if(fo!=""){if(!fj){q2.Clear();pU. 
GetBlockGroups(q2);q3=0;}for(;q3&lt;q2.Count;q3++){IMyBlockGroup fp=q2[q3];if(fp.Name.ToLower()==fo){if(!fj)fp.GetBlocks(pV);if(fm)if 
(!q1(fj))return false;return true;}}return true;}if(!fj)pU.SearchBlocksOfName(fi,pV);if(fm)if(!q1(fj))return false;return true;} 
List&lt;IMyBlockGroup&gt;q5=new List&lt;IMyBlockGroup&gt;();List&lt;IMyTerminalBlock&gt;q6=new List&lt;IMyTerminalBlock&gt;();int q7=0;int q8=0;public 
bool q9(string fq,string fr,bool fs,bool ft){if(!ft){q5.Clear();pU.GetBlockGroups(q5);q7=0;}for(;q7&lt;q5.Count;q7++){IMyBlockGroup 
fu=q5[q7];if(fu.Name.ToLower()==fr){if(!ft){q8=0;q6.Clear();fu.GetBlocks(q6);}else ft=false;for(;q8&lt;q6.Count;q8++){if(!pR.sl(6)) 
return false;if(fs&amp;&amp;q6[q8].CubeGrid!=pT)continue;if(pS.qo(q6[q8],fq))pV.Add(q6[q8]);}return true;}}return true;}List&lt; 
IMyTerminalBlock&gt;qa=new List&lt;IMyTerminalBlock&gt;();int qb=0;public bool qc(string fv,string fw,bool fx){int fy=fw.IndexOf(':');var 
fz=(fy&gt;=1&amp;&amp;fy&lt;=2?fw.Substring(0,fy):"");var fA=fz.Contains("T");if(fz!="")fw=fw.Substring(fy+1);if(!fx){qa.Clear();qb=0;}var fB=( 
fz.Contains("G")?fw.Trim().ToLower():"");if(fB!=""){if(!q9(fv,fB,fA,fx))return false;return true;}if(!fx)pS.qn(ref qa,fv);if(fw== 
""||fw=="*"){if(!fx)pV.AddList(qa);if(fA)if(!q1(fx))return false;return true;}for(;qb&lt;qa.Count;qb++){if(!pR.sl(4))return false;if( 
fA&amp;&amp;qa[qb].CubeGrid!=pT)continue;if(qa[qb].CustomName.Contains(fw))pV.Add(qa[qb]);}return true;}public void qd(ux fC){pV.AddList( 
fC.pV);}public void qe(){pV.Clear();}public int qf(){return pV.Count;}}public class uy {uI qg;uK qh;public MyGridProgram qi{get{ 
return qg.s9;}}public IMyGridTerminalSystem qj{get{return qg.s9.GridTerminalSystem;}}public Dictionary&lt;string,Action&lt;List&lt; 
IMyTerminalBlock&gt;,Func&lt;IMyTerminalBlock,bool&gt;&gt;&gt;qk=null;public uy(uI fD,uK fE){qg=fD;qh=fE;}public void ql(){if(qk!=null&amp;&amp;qj. 
GetBlocksOfType&lt;IMyCargoContainer&gt; ==qk["CargoContainer"])return;qk=new Dictionary&lt;string,Action&lt;List&lt;IMyTerminalBlock&gt;,Func&lt; 
IMyTerminalBlock,bool&gt;&gt;&gt;(){{"CargoContainer",qj.GetBlocksOfType&lt;IMyCargoContainer&gt;},{"TextPanel",qj.GetBlocksOfType&lt;IMyTextPanel&gt;} 
,{"Assembler",qj.GetBlocksOfType&lt;IMyAssembler&gt;},{"Refinery",qj.GetBlocksOfType&lt;IMyRefinery&gt;},{"Reactor",qj.GetBlocksOfType&lt; 
IMyReactor&gt;},{"SolarPanel",qj.GetBlocksOfType&lt;IMySolarPanel&gt;},{"BatteryBlock",qj.GetBlocksOfType&lt;IMyBatteryBlock&gt;},{"Beacon",qj. 
GetBlocksOfType&lt;IMyBeacon&gt;},{"RadioAntenna",qj.GetBlocksOfType&lt;IMyRadioAntenna&gt;},{"AirVent",qj.GetBlocksOfType&lt;IMyAirVent&gt;},{ 
"ConveyorSorter",qj.GetBlocksOfType&lt;IMyConveyorSorter&gt;},{"OxygenTank",qj.GetBlocksOfType&lt;IMyGasTank&gt;},{"OxygenGenerator",qj. 
GetBlocksOfType&lt;IMyGasGenerator&gt;},{"OxygenFarm",qj.GetBlocksOfType&lt;IMyOxygenFarm&gt;},{"LaserAntenna",qj.GetBlocksOfType&lt; 
IMyLaserAntenna&gt;},{"Thrust",qj.GetBlocksOfType&lt;IMyThrust&gt;},{"Gyro",qj.GetBlocksOfType&lt;IMyGyro&gt;},{"SensorBlock",qj.GetBlocksOfType&lt; 
IMySensorBlock&gt;},{"ShipConnector",qj.GetBlocksOfType&lt;IMyShipConnector&gt;},{"ReflectorLight",qj.GetBlocksOfType&lt;IMyReflectorLight&gt;},{ 
"InteriorLight",qj.GetBlocksOfType&lt;IMyInteriorLight&gt;},{"LandingGear",qj.GetBlocksOfType&lt;IMyLandingGear&gt;},{"ProgrammableBlock",qj. 
GetBlocksOfType&lt;IMyProgrammableBlock&gt;},{"TimerBlock",qj.GetBlocksOfType&lt;IMyTimerBlock&gt;},{"MotorStator",qj.GetBlocksOfType&lt; 
IMyMotorStator&gt;},{"PistonBase",qj.GetBlocksOfType&lt;IMyPistonBase&gt;},{"Projector",qj.GetBlocksOfType&lt;IMyProjector&gt;},{"ShipMergeBlock" 
,qj.GetBlocksOfType&lt;IMyShipMergeBlock&gt;},{"SoundBlock",qj.GetBlocksOfType&lt;IMySoundBlock&gt;},{"Collector",qj.GetBlocksOfType&lt; 
IMyCollector&gt;},{"JumpDrive",qj.GetBlocksOfType&lt;IMyJumpDrive&gt;},{"Door",qj.GetBlocksOfType&lt;IMyDoor&gt;},{"GravityGeneratorSphere",qj. 
GetBlocksOfType&lt;IMyGravityGeneratorSphere&gt;},{"GravityGenerator",qj.GetBlocksOfType&lt;IMyGravityGenerator&gt;},{"ShipDrill",qj. 
GetBlocksOfType&lt;IMyShipDrill&gt;},{"ShipGrinder",qj.GetBlocksOfType&lt;IMyShipGrinder&gt;},{"ShipWelder",qj.GetBlocksOfType&lt;IMyShipWelder&gt;} 
,{"Parachute",qj.GetBlocksOfType&lt;IMyParachute&gt;},{"LargeGatlingTurret",qj.GetBlocksOfType&lt;IMyLargeGatlingTurret&gt;},{ 
"LargeInteriorTurret",qj.GetBlocksOfType&lt;IMyLargeInteriorTurret&gt;},{"LargeMissileTurret",qj.GetBlocksOfType&lt;IMyLargeMissileTurret&gt;} 
,{"SmallGatlingGun",qj.GetBlocksOfType&lt;IMySmallGatlingGun&gt;},{"SmallMissileLauncherReload",qj.GetBlocksOfType&lt; 
IMySmallMissileLauncherReload&gt;},{"SmallMissileLauncher",qj.GetBlocksOfType&lt;IMySmallMissileLauncher&gt;},{"VirtualMass",qj. 
GetBlocksOfType&lt;IMyVirtualMass&gt;},{"Warhead",qj.GetBlocksOfType&lt;IMyWarhead&gt;},{"FunctionalBlock",qj.GetBlocksOfType&lt; 
IMyFunctionalBlock&gt;},{"LightingBlock",qj.GetBlocksOfType&lt;IMyLightingBlock&gt;},{"ControlPanel",qj.GetBlocksOfType&lt;IMyControlPanel&gt;},{ 
"Cockpit",qj.GetBlocksOfType&lt;IMyCockpit&gt;},{"MedicalRoom",qj.GetBlocksOfType&lt;IMyMedicalRoom&gt;},{"RemoteControl",qj.GetBlocksOfType&lt; 
IMyRemoteControl&gt;},{"ButtonPanel",qj.GetBlocksOfType&lt;IMyButtonPanel&gt;},{"CameraBlock",qj.GetBlocksOfType&lt;IMyCameraBlock&gt;},{ 
"OreDetector",qj.GetBlocksOfType&lt;IMyOreDetector&gt;},{"ShipController",qj.GetBlocksOfType&lt;IMyShipController&gt;}};}public void qm(ref 
List&lt;IMyTerminalBlock&gt;fF,string fG){Action&lt;List&lt;IMyTerminalBlock&gt;,Func&lt;IMyTerminalBlock,bool&gt;&gt;fH=null;if(qk.TryGetValue(fG,out fH) 
)fH(fF,null);else{if(fG=="CryoChamber"){qj.GetBlocksOfType&lt;IMyCockpit&gt;(fF,fI=&gt;fI.BlockDefinition.ToString().Contains("Cryo")); 
return;}}}public void qn(ref List&lt;IMyTerminalBlock&gt;fJ,string fK){qm(ref fJ,qp(fK.Trim()));}public bool qo(IMyTerminalBlock fL, 
string fM){var fN=qp(fM);switch(fN){case "FunctionalBlock":return true;case "ShipController":return(fL as IMyShipController!=null) 
;default:return fL.BlockDefinition.ToString().Contains(qp(fM));}}public string qp(string fO){fO=fO.ToLower();if(fO.StartsWith( 
"carg")||fO.StartsWith("conta"))return "CargoContainer";if(fO.StartsWith("text")||fO.StartsWith("lcd"))return "TextPanel";if(fO. 
StartsWith("ass"))return "Assembler";if(fO.StartsWith("refi"))return "Refinery";if(fO.StartsWith("reac"))return "Reactor";if(fO. 
StartsWith("solar"))return "SolarPanel";if(fO.StartsWith("bat"))return "BatteryBlock";if(fO.StartsWith("bea"))return "Beacon";if( 
fO.Contains("vent"))return "AirVent";if(fO.Contains("sorter"))return "ConveyorSorter";if(fO.Contains("tank"))return "OxygenTank"; 
if(fO.Contains("farm")&amp;&amp;fO.Contains("oxy"))return "OxygenFarm";if(fO.Contains("gene")&amp;&amp;fO.Contains("oxy"))return "OxygenGenerator" 
;if(fO.Contains("cryo"))return "CryoChamber";if(fO=="laserantenna")return "LaserAntenna";if(fO.Contains("antenna"))return 
"RadioAntenna";if(fO.StartsWith("thrust"))return "Thrust";if(fO.StartsWith("gyro"))return "Gyro";if(fO.StartsWith("sensor"))return 
"SensorBlock";if(fO.Contains("connector"))return "ShipConnector";if(fO.StartsWith("reflector"))return "ReflectorLight";if((fO. 
StartsWith("inter")&amp;&amp;fO.EndsWith("light")))return "InteriorLight";if(fO.StartsWith("land"))return "LandingGear";if(fO.StartsWith( 
"program"))return "ProgrammableBlock";if(fO.StartsWith("timer"))return "TimerBlock";if(fO.StartsWith("motor"))return "MotorStator" 
;if(fO.StartsWith("piston"))return "PistonBase";if(fO.StartsWith("proj"))return "Projector";if(fO.Contains("merge"))return 
"ShipMergeBlock";if(fO.StartsWith("sound"))return "SoundBlock";if(fO.StartsWith("col"))return "Collector";if(fO.Contains("jump")) 
return "JumpDrive";if(fO=="door")return "Door";if((fO.Contains("grav")&amp;&amp;fO.Contains("sphe")))return "GravityGeneratorSphere";if(fO 
.Contains("grav"))return "GravityGenerator";if(fO.EndsWith("drill"))return "ShipDrill";if(fO.Contains("grind"))return 
"ShipGrinder";if(fO.EndsWith("welder"))return "ShipWelder";if(fO.StartsWith("parach"))return "Parachute";if((fO.Contains("turret") 
&amp;&amp;fO.Contains("gatl")))return "LargeGatlingTurret";if((fO.Contains("turret")&amp;&amp;fO.Contains("inter")))return "LargeInteriorTurret"; 
if((fO.Contains("turret")&amp;&amp;fO.Contains("miss")))return "LargeMissileTurret";if(fO.Contains("gatl"))return "SmallGatlingGun";if((fO 
.Contains("launcher")&amp;&amp;fO.Contains("reload")))return "SmallMissileLauncherReload";if((fO.Contains("launcher")))return 
"SmallMissileLauncher";if(fO.Contains("mass"))return "VirtualMass";if(fO=="warhead")return "Warhead";if(fO.StartsWith("func")) 
return "FunctionalBlock";if(fO=="shipctrl")return "ShipController";if(fO.StartsWith("light"))return "LightingBlock";if(fO. 
StartsWith("contr"))return "ControlPanel";if(fO.StartsWith("coc"))return "Cockpit";if(fO.StartsWith("medi"))return "MedicalRoom"; 
if(fO.StartsWith("remote"))return "RemoteControl";if(fO.StartsWith("but"))return "ButtonPanel";if(fO.StartsWith("cam"))return 
"CameraBlock";if(fO.Contains("detect"))return "OreDetector";return "Unknown";}public List&lt;double&gt;qq(IMyTerminalBlock fP,int fQ=-1) 
{var fR=new List&lt;double&gt;();string[]fS=fP.DetailedInfo.Split('\n');int fT=Math.Min(fS.Length,(fQ&gt;0?fQ:fS.Length));for(int fU=0;fU&lt; 
fT;fU++){string[]fV=fS[fU].Split(':');if(fV.Length&lt;2){fV=fS[fU].Split('r');if(fV.Length&lt;2)fV=fS[fU].Split('x');}var fW=(fV.Length&lt; 
2?fV[0]:fV[1]);string[]fX=fW.Trim().Split(' ');var fY=fX[0].Trim();var fZ=(fX.Length&gt;1&amp;&amp;fX[1].Length&gt;1?fX[1][0]:'.');double f_;if( 
Double.TryParse(fY,out f_)){double g0=f_*Math.Pow(1000.0,".kMGTPEZY".IndexOf(fZ));fR.Add(g0);}}return fR;}public string qr( 
IMyBatteryBlock g1){var g2="";if(g1.OnlyRecharge)g2="(+) ";else if(g1.OnlyDischarge)g2="(-) ";else g2="(±) ";return g2+qh.tK((g1. 
CurrentStoredPower/g1.MaxStoredPower)*100.0f)+"%";}public string qs(IMyLaserAntenna g3){string[]g4=g3.DetailedInfo.Split('\n'); 
return g4[g4.Length-1].Split(' ')[0].ToUpper();}public double qt(IMyJumpDrive g5,out double g6,out double g7){List&lt;double&gt;g8=qq(g5 
,5);if(g8.Count&lt;4){g7=0;g6=0;return 0;}g7=g8[1];g6=g8[3];return(g7&gt;0?g6/g7*100:0);}public double qu(IMyJumpDrive g9){List&lt;double&gt; 
ga=qq(g9,5);double gb=0,gc=0;if(ga.Count&lt;4)return 0;gb=ga[1];gc=ga[3];return(gb&gt;0?gc/gb*100:0);}}public class uz {public 
Dictionary&lt;string,uA&gt;qv=new Dictionary&lt;string,uA&gt;();Dictionary&lt;string,uA&gt;qw=new Dictionary&lt;string,uA&gt;();public List&lt;string&gt;qx=new 
List&lt;string&gt;();public Dictionary&lt;string,uA&gt;qy=new Dictionary&lt;string,uA&gt;();public void Add(string gd,string ge,int gf,string gg, 
string gh,bool gi){if(ge=="Ammo")ge="AmmoMagazine";else if(ge=="Tool")ge="PhysicalGunObject";var gj=gd+' '+ge;uA gk=new uA(gd,ge, 
gf,gg,gh,gi);qv.Add(gj,gk);if(!qw.ContainsKey(gd))qw.Add(gd,gk);if(gh!="")qy.Add(gh.ToLower(),gk);qx.Add(gj);}public uA qz(string 
gl="",string gm=""){if(qv.ContainsKey(gl+" "+gm))return qv[gl+" "+gm];if(gm==""){uA gn=null;qw.TryGetValue(gl,out gn);return gn;} 
if(gl=="")for(int go=0;go&lt;qv.Count;go++){uA gn=qv[qx[go]];if(gm==gn.qB)return gn;}return null;}}public class uA {public string qA; 
public string qB;public int qC;public string qD;public string qE;public bool qF;public uA(string gq,string gr,int gs=0,string gt= 
"",string gu="",bool gv=true){qA=gq;qB=gr;qC=gs;qD=gt;qE=gu;qF=gv;}}public class uB {readonly Dictionary&lt;string,string&gt;qG=new 
Dictionary&lt;string,string&gt;(){{"ingot","ingot" },{"ore","ore" },{"component","component" },{"tool","physicalgunobject" },{"ammo", 
"ammomagazine" },{"oxygen","oxygencontainerobject" },{"gas","gascontainerobject" }};uI qH;uK qI;uD qJ;uD qK;uD qL;uz MMItems;bool 
qM;public uD qN;public uB(uI gw,uK gx,int gy=20){qJ=new uD();qK=new uD();qL=new uD();qM=false;qN=new uD();qH=gw;qI=gx;MMItems=qI. 
MMItems;}public void qO(){qL.ra();qK.ra();qJ.ra();qM=false;qN.ra();}public void qP(string gz,bool gA=false,int gB=1,int gC=-1){if( 
gz==""){qM=true;return;}string[]gD=gz.Split(' ');var gE="";uC gF=new uC(gA,gB,gC);if(gD.Length==2){if(!qG.TryGetValue(gD[1],out gE 
))gE=gD[1];}var gG=gD[0];if(qG.TryGetValue(gG,out gF.r1)){qK.r6(gF.r1,gF);return;}qI.tH(ref gG,ref gE);if(gE==""){gF.r0=gG.ToLower 
();qJ.r6(gF.r0,gF);return;}gF.r0=gG;gF.r1=gE;qL.r6(gG.ToLower()+' '+gE.ToLower(),gF);}public uC qQ(string gH,string gI,string gJ){ 
uC gK;gH=gH.ToLower();gK=qL.r8(gH);if(gK!=null)return gK;gI=gI.ToLower();gK=qJ.r8(gI);if(gK!=null)return gK;gJ=gJ.ToLower();gK=qK. 
r8(gJ);if(gK!=null)return gK;return null;}public bool qR(string gL,string gM,string gN){uC gO;var gP=false;gO=qK.r8(gN.ToLower()); 
if(gO!=null){if(gO.r2)return true;gP=true;}gO=qJ.r8(gM.ToLower());if(gO!=null){if(gO.r2)return true;gP=true;}gO=qL.r8(gL.ToLower() 
);if(gO!=null){if(gO.r2)return true;gP=true;}return!(qM||gP);}public uC qS(string gQ,string gR,string gS){uC gT=new uC();gQ=gQ. 
ToLower();uC gU=qQ(gQ,gR.ToLower(),gS.ToLower());if(gU!=null){gT.qZ=gU.qZ;gT.q_=gU.q_;}gT.r0=gR;gT.r1=gS;qN.r6(gQ,gT);return gT;} 
public uC qT(string gV,string gW,string gX){uC gY=qN.r8(gV.ToLower());if(gY==null)gY=qS(gV,gW,gX);return gY;}int qU=0;List&lt;uC&gt;qV; 
public List&lt;uC&gt;qW(string gZ,bool g_){if(!g_){qV=new List&lt;uC&gt;();qU=0;}for(;qU&lt;qN.r7();qU++){if(!qH.sl(5))return null;uC h0=qN.r9(qU 
);if(qR((h0.r0+' '+h0.r1).ToLower(),h0.r0,h0.r1))continue;if(h0.r1==gZ)qV.Add(h0);}return qV;}int qX=0;public bool qY(bool h1){if( 
!h1){qX=0;}for(;qX&lt;MMItems.qx.Count;qX++){if(!qH.sl(10))return false;uA h2=MMItems.qv[MMItems.qx[qX]];if(!h2.qF)continue;var h3=h2 
.qA+' '+h2.qB;if(qR(h3,h2.qA,h2.qB))continue;uC h4=qT(h3,h2.qA,h2.qB);if(h4.q_==-1)h4.q_=h2.qC;}return true;}}public class uC { 
public int qZ;public int q_;public string r0="";public string r1="";public bool r2;public double r3;public uC(bool h5=false,int h6 
=1,int h7=-1){qZ=h6;r2=h5;q_=h7;}}public class uD {Dictionary&lt;string,uC&gt;r4=new Dictionary&lt;string,uC&gt;();List&lt;string&gt;r5=new List&lt; 
string&gt;();public void r6(string h8,uC h9){if(!r4.ContainsKey(h8)){r5.Add(h8);r4.Add(h8,h9);}}public int r7(){return r4.Count;} 
public uC r8(string ha){if(r4.ContainsKey(ha))return r4[ha];return null;}public uC r9(int hb){return r4[r5[hb]];}public void ra(){ 
r5.Clear();r4.Clear();}public void rb(){r5.Sort();}}public class uE {uI rc;public MyDefinitionId rd=new MyDefinitionId(typeof( 
VRage.Game.ObjectBuilders.Definitions.MyObjectBuilder_GasProperties),"Electricity");public MyDefinitionId re=new MyDefinitionId( 
typeof(VRage.Game.ObjectBuilders.Definitions.MyObjectBuilder_GasProperties),"Oxygen");public MyDefinitionId rf=new MyDefinitionId( 
typeof(VRage.Game.ObjectBuilders.Definitions.MyObjectBuilder_GasProperties),"Hydrogen");public uE(uI hc){rc=hc;}int rg=0;public 
bool rh(List&lt;IMyTerminalBlock&gt;hd,ref double he,ref double hf,ref double hg,ref double hh,ref double hi,ref double hj,bool hk){if(! 
hk)rg=0;MyResourceSinkComponent hl;MyResourceSourceComponent hm;for(;rg&lt;hd.Count;rg++){if(!rc.sl(8))return false;if(hd[rg]. 
Components.TryGet&lt;MyResourceSinkComponent&gt;(out hl)){he+=hl.CurrentInputByType(rd);hf+=hl.MaxRequiredInputByType(rd);}if(hd[rg]. 
Components.TryGet&lt;MyResourceSourceComponent&gt;(out hm)){hg+=hm.CurrentOutputByType(rd);hh+=hm.MaxOutputByType(rd);}hi+=(hd[rg]as 
IMyBatteryBlock).CurrentStoredPower;hj+=(hd[rg]as IMyBatteryBlock).MaxStoredPower;}return true;}int ri=0;public bool rj(List&lt; 
IMyTerminalBlock&gt;hn,MyDefinitionId ho,ref double hp,ref double hq,ref double hr,ref double hs,bool ht){if(!ht)ri=0; 
MyResourceSinkComponent hu;MyResourceSourceComponent hv;for(;ri&lt;hn.Count;ri++){if(!rc.sl(6))return false;if(hn[ri].Components. 
TryGet&lt;MyResourceSinkComponent&gt;(out hu)){hp+=hu.CurrentInputByType(ho);hq+=hu.MaxRequiredInputByType(ho);}if(hn[ri].Components. 
TryGet&lt;MyResourceSourceComponent&gt;(out hv)){hr+=hv.CurrentOutputByType(ho);hs+=hv.MaxOutputByType(ho);}}return true;}int rk=0; 
public bool rl(List&lt;IMyTerminalBlock&gt;hw,string hx,ref double hy,ref double hz,bool hA){hx=hx.ToLower();if(!hA){rk=0;hz=0;hy=0;} 
MyResourceSinkComponent hB;for(;rk&lt;hw.Count;rk++){if(!rc.sl(30))return false;IMyGasTank hC=hw[rk]as IMyGasTank;if(hC==null) 
continue;double hD=0;if(hC.Components.TryGet&lt;MyResourceSinkComponent&gt;(out hB)){ListReader&lt;MyDefinitionId&gt;hE=hB.AcceptedResources; 
int hF=0;for(;hF&lt;hE.Count;hF++){if(hE[hF].SubtypeId.ToString().ToLower()==hx){hD=100;hz+=hD;hy+=hD*hC.FilledRatio;break;}}}}return 
true;}}public class uF {uK rm=null;public uG rn=new uG();public uJ ro=null;public IMyTextPanel rp=null;public int rq=0;public 
string rr="";public string rs="";public bool rt=true;public uF(uK hG,string hH){rm=hG;rs=hH;}public bool ru(){return ro.sw.Count&gt; 
ro.ss||ro.st!=0;}public void rv(float hI){for(int hJ=0;hJ&lt;rn.rL();hJ++)rn.rN(hJ).SetValueFloat("FontSize",hI);}public void rw(){rn 
.rP();rp=rn.rN(0);int hK=rp.CustomName.IndexOf("!MARGIN:");if(hK&lt;0||hK+8&gt;=rp.CustomName.Length){rq=1;rr=" ";}else{var hL=rp. 
CustomName.Substring(hK+8);int hM=hL.IndexOf(" ");if(hM&gt;=0)hL=hL.Substring(0,hM);if(!int.TryParse(hL,out rq))rq=1;rr=new String( 
' ',rq);}if(rp.CustomName.Contains("!NOSCROLL"))rt=false;else rt=true;}public bool rx(){return(rp.BlockDefinition.SubtypeId. 
Contains("Wide")||rp.DefinitionDisplayNameText=="Computer Monitor");}float ry=1.0f;bool rz=false;public float rA(){if(rz)return ry 
;rz=true;ry=(rx()?2.0f:1.0f);return ry;}float rB=1.0f;bool rC=false;public float rD(){if(rC)return rB;rC=true;if(rp. 
BlockDefinition.SubtypeId.Contains("Corner_LCD_Flat"))rB=0.1765f;else if(rp.BlockDefinition.SubtypeId.Contains("Corner_LCD"))rB= 
0.15f;if(rp.BlockDefinition.SubtypeId.Contains("Small"))rB*=1.8f;return rB;}public void rE(){if(ro==null||rp==null)return;float hN 
=rp.FontSize;var hO=rp.Font;for(int hP=0;hP&lt;rn.rL();hP++){IMyTextPanel hQ=rn.rN(hP);if(hP&gt;0){hQ.FontSize=hN;hQ.Font=hO;}hQ. 
WritePublicText(ro.sJ(hP));if(rm.sW)hQ.ShowTextureOnScreen();hQ.ShowPublicTextOnScreen();}}}public class uG {Dictionary&lt;string, 
IMyTextPanel&gt;rF=new Dictionary&lt;string,IMyTextPanel&gt;();Dictionary&lt;IMyTextPanel,string&gt;rG=new Dictionary&lt;IMyTextPanel,string&gt;();List 
&lt;string&gt;rH=new List&lt;string&gt;();public void rI(string hR,IMyTextPanel hS){if(!rH.Contains(hR)){rH.Add(hR);rF.Add(hR,hS);rG.Add(hS,hR 
);}}public void rJ(string hT){if(rH.Contains(hT)){rH.Remove(hT);rG.Remove(rF[hT]);rF.Remove(hT);}}public void rK(IMyTextPanel hU){ 
if(rG.ContainsKey(hU)){rH.Remove(rG[hU]);rF.Remove(rG[hU]);rG.Remove(hU);}}public int rL(){return rF.Count;}public IMyTextPanel rM 
(string hV){if(rH.Contains(hV))return rF[hV];return null;}public IMyTextPanel rN(int hW){return rF[rH[hW]];}public void rO(){rH. 
Clear();rF.Clear();rG.Clear();}public void rP(){rH.Sort();}}public class uH {public string rQ="MMTask";public double rR=0;public 
double rS=0;public double rT=0;public double rU=-1;public bool rV=false;public bool rW=false;double rX=0;protected uI rY;public 
void rZ(uI hX){rY=hX;}protected bool r_(double hY){rX=Math.Max(hY,0.0001);return true;}public bool s0(){if(rS&gt;0){rT=rY.s5-rS;rY.sd 
((rW?"Running":"Resuming")+" task: "+rQ);rW=Run(!rW);}else{rT=0;rY.sd("Init task: "+rQ);Init();rY.sd("Running..");rW=Run(false);if 
(!rW)rS=0.001;}if(rW){rS=rY.s5;if((rU&gt;=0||rX&gt;0)&amp;&amp;rV)rY.sb(this,(rX&gt;0?rX:rU));else{rV=false;rS=0;}}else{if(rV)rY.sb(this,0,true);} 
rY.sd("Task "+(rW?"":"NOT ")+"finished. "+(rV?(rX&gt;0?"Postponed by "+rX.ToString("F1")+"s":"Scheduled after "+rU.ToString("F1")+"s" 
):"Stopped."));rX=0;return rW;}public void s1(){rY.sc(this);End();rV=false;rW=false;rS=0;}public virtual void Init(){}public 
virtual bool Run(bool hZ){return true;}public virtual void End(){}}public class uI {public double s5{get{return s7;}}int s6=1000; 
double s7=0;List&lt;uH&gt;s8=new List&lt;uH&gt;(100);public MyGridProgram s9;int sa=0;public uI(MyGridProgram h_,int i0=1){s9=h_;sa=i0;}public 
void sb(uH i1,double i2,bool i3=false){sd("Scheduling task: "+i1.rQ+" after "+i2.ToString("F2"));i1.rV=true;i1.rZ(this);if(i3){i1. 
rR=s5;s8.Insert(0,i1);return;}if(i2&lt;=0)i2=0.001;i1.rR=s5+i2;for(int i4=0;i4&lt;s8.Count;i4++){if(s8[i4].rR&gt;i1.rR){s8.Insert(i4,i1); 
return;}if(i1.rR-s8[i4].rR&lt;0.05)i1.rR=s8[i4].rR+0.05;}s8.Add(i1);}public void sc(uH i5){if(s8.Contains(i5)){s8.Remove(i5);i5.rV= 
false;}}public void sd(string i6,int i7=1){if(sa==i7)s9.Echo(i6);}double se=0;public void sf(){se+=s9.Runtime.TimeSinceLastRun. 
TotalSeconds;}public void sg(){double i8=s9.Runtime.TimeSinceLastRun.TotalSeconds+se;se=0;s7+=i8;sd("Total time: "+s7.ToString( 
"F1")+" Time Step: "+i8.ToString("F2"));s6=(int)Math.Min((i8*60)*1000,20000-1000);sd("Total tasks: "+s8.Count+" InstrPerRun: "+s6) 
;while(s8.Count&gt;=1){uH i9=s8[0];if(s6-s9.Runtime.CurrentInstructionCount&lt;=0)break;if(i9.rR&gt;s7){int ia=(int)(60*(i9.rR-s7));if(ia&gt;= 
100){s9.Runtime.UpdateFrequency=UpdateFrequency.Update100;}else{if(ia&gt;=10)s9.Runtime.UpdateFrequency=UpdateFrequency.Update10;else 
 s9.Runtime.UpdateFrequency=UpdateFrequency.Update1;}break;}s8.Remove(i9);if(!i9.s0())break;sd("Done. NextExecTime: "+i9.rR. 
ToString("F1"));sd("Remaining Instr: "+sk().ToString());}}int sh=0;StringBuilder si=new StringBuilder();public void sj(){double ib 
=s9.Runtime.LastRunTimeMs*1000;if(sh==5000){IMyTextPanel ic=s9.GridTerminalSystem.GetBlockWithName("AUTOLCD Profiler")as 
IMyTextPanel;if(ic==null)return;ic.WritePublicText(si.ToString());sh++;return;}si.Append(sh).Append(";").AppendLine(ib.ToString( 
"F2"));sh++;}public int sk(){return(20000-s9.Runtime.CurrentInstructionCount);}public bool sl(int id){return((20000-s9.Runtime. 
CurrentInstructionCount)&gt;=id);}public void sm(){sd("Remaining Instr: "+sk().ToString());}}public class uJ {uK sn=null;public float 
so=1.0f;public string sp="Debug";public float sq=1.0f;public float sr=1.0f;public int ss=17;public int st=0;int su=1;int sv=1; 
public List&lt;string&gt;sw=new List&lt;string&gt;();public int sx=0;public float sy=0;public uJ(uK ie,float ig=1.0f){sn=ie;sz(ig);sw.Add(""); 
}public void sz(float ih){so=ih;}public void sA(int ii){sv=ii;}public void sB(){ss=(int)Math.Floor(uK.sP*sr*sv/uK.sR);}public void 
sC(string ij){sw[sx]+=ij;}public void sD(List&lt;string&gt;ik){if(sw[sx]=="")sw.RemoveAt(sx);else sx++;sw.AddList(ik);sx+=ik.Count;sw. 
Add("");sy=0;}public List&lt;string&gt;sE(){if(sw[sx]=="")return sw.GetRange(0,sx);else return sw;}public void sF(string il,string im="" 
){string[]io=il.Split('\n');for(int ip=0;ip&lt;io.Length;ip++)sG(im+io[ip]);}public void sG(string iq){sw[sx]+=iq;sw.Add("");sx++;sy= 
0;}public void sH(){sw.Clear();sw.Add("");sy=0;sx=0;}public string sI(){return String.Join("\n",sw);}public string sJ(int ir=0){if 
(sw.Count&lt;=ir*ss/sv)return "";if(sw.Count&lt;=ss/sv){st=0;su=1;return sI();}int it=st+ir*(ss/sv);if(it&gt;sw.Count)it=sw.Count;List&lt; 
string&gt;iu=sw.GetRange(it,Math.Min(sw.Count-it,ss/sv));return String.Join("\n",iu);}public bool sK(int iv=-1){if(iv&lt;=0)iv=sn.sT;if( 
st-iv&lt;=0){st=0;return true;}st-=iv;return false;}public bool sL(int iw=-1){if(iw&lt;=0)iw=sn.sT;int ix=sw.Count-1;if(st+iw+ss&gt;=ix){st 
=Math.Max(ix-ss,0);return true;}st+=iw;return false;}public int sM=0;public void sN(){if(sM&gt;0){sM--;return;}if(sw.Count-1&lt;=ss){st= 
0;su=1;return;}if(su&gt;0){if(sL()){su=-1;sM=2;}}else{if(sK()){su=1;sM=2;}}}}public class uK {public const float sP=512/0.7783784f; 
public const float sQ=512/0.7783784f;public const float sR=37;public string sS="T:[LCD]";public int sT=1;public bool sU=true; 
public List&lt;string&gt;sV=null;public bool sW=true;public int sX=0;public float sY=1.0f;public float sZ=1.0f;string s_;string t0;float 
t1=-1;Dictionary&lt;string,float&gt;t2=new Dictionary&lt;string,float&gt;(2);Dictionary&lt;string,float&gt;t3=new Dictionary&lt;string,float&gt;(2);public 
Dictionary&lt;string,float&gt;t4=new Dictionary&lt;string,float&gt;(2);Dictionary&lt;string,float&gt;t5=new Dictionary&lt;string,float&gt;(2);Dictionary&lt; 
string,float&gt;t6=new Dictionary&lt;string,float&gt;(2);Dictionary&lt;string,float&gt;t7=new Dictionary&lt;string,float&gt;(2);int t8=0;string t9=""; 
Dictionary&lt;string,char&gt;ta=new Dictionary&lt;string,char&gt;(2);Dictionary&lt;string,char&gt;tb=new Dictionary&lt;string,char&gt;(2);Dictionary&lt; 
string,char&gt;tc=new Dictionary&lt;string,char&gt;(2);Dictionary&lt;string,char&gt;td=new Dictionary&lt;string,char&gt;(2);uI te;public MyGridProgram 
tf;public uE tg;public uy th;public uw ti;public uz MMItems;public TranslationTable tj;public IMyGridTerminalSystem tk{get{return 
tf.GridTerminalSystem;}}public IMyProgrammableBlock tl{get{return tf.Me;}}public Action&lt;string&gt;tm{get{return tf.Echo;}}public uK( 
MyGridProgram iy,int iz,uI iA){te=iA;sX=iz;tf=iy;tj=new TranslationTable();tg=new uE(iA);th=new uy(iA,this);th.ql();ti=new uw(te); 
te.sb(ti,0);}Dictionary&lt;IMyTextPanel,uJ&gt;tn=new Dictionary&lt;IMyTextPanel,uJ&gt;();public uJ to=null;public uJ tp(uJ iB,uF iC){iC.rw(); 
IMyTextPanel iD=iC.rp;if(iB==null)iB=new uJ(this,iD.FontSize);else iB.sz(iD.FontSize);iB.sp=iC.rp.Font;if(!t5.ContainsKey(iB.sp)) 
iB.sp=s_;iB.sA(iC.rn.rL());iB.sq=iC.rA()*sY/iB.so;iB.sr=iC.rD()*sZ/iB.so;iB.sB();t9=iC.rr;t8=iC.rq;to=iB;return iB;}public void tq 
(uF iE){to=iE.ro;}public float tr(){return(float)sQ*to.sq-2*t5[to.sp]*t8;}public void ts(string iF){if(to.sy&lt;=0)iF=t9+iF;to.sG(iF) 
;}public void tt(string iG){to.sF(iG,t9);}public void tu(List&lt;string&gt;iH){to.sD(iH);}public void Add(string iI){if(to.sy&lt;=0)iI=t9+ 
iI;to.sC(iI);to.sy+=tN(iI,to.sp);}public void tv(string iJ,float iK=1.0f,float iL=0f){tw(iJ,iK,iL);ts("");}public void tw(string 
iM,float iN=1.0f,float iO=0f){float iP=tN(iM,to.sp);float iQ=iN*sQ*to.sq-to.sy-iO;if(t8&gt;0)iQ-=t5[to.sp]*t8;if(iQ&lt;iP){to.sC(iM);to. 
sy+=iP;return;}iQ-=iP;int iR=(int)Math.Floor(iQ/t5[to.sp]);float iS=iR*t5[to.sp];to.sC(new String(' ',iR)+iM);to.sy+=iS+iP;}public 
void tx(string iT){ty(iT);ts("");}public void ty(string iU){float iV=tN(iU,to.sp);float iW=sQ/2*to.sq-to.sy;if(iW&lt;iV/2){to.sC(iU); 
to.sy+=iV;return;}iW-=iV/2;int iX=(int)Math.Round(iW/t5[to.sp],MidpointRounding.AwayFromZero);float iY=iX*t5[to.sp];to.sC(new 
String(' ',iX)+iU);to.sy+=iY+iV;}public void tz(double iZ,float i_=1.0f,float j0=0f){if(t8&gt;0)j0+=t8*t5[to.sp]*((to.sy&lt;=0)?2:1); 
float j1=sQ*i_*to.sq-to.sy-j0;if(Double.IsNaN(iZ))iZ=0;int j2=(int)(j1/t6[to.sp])-2;if(j2&lt;=0)j2=2;int j3=Math.Min((int)(iZ*j2)/100 
,j2);if(j3&lt;0)j3=0;to.sG((to.sy&lt;=0?t9:"")+ta[to.sp]+new String(td[to.sp],j3)+new String(tc[to.sp],j2-j3)+tb[to.sp]);}public void tA 
(double j4,float j5=1.0f,float j6=0f){if(t8&gt;0)j6+=t8*t5[to.sp]*((to.sy&lt;=0)?2:1);float j7=sQ*j5*to.sq-to.sy-j6;if(Double.IsNaN(j4)) 
j4=0;int j8=(int)(j7/t6[to.sp])-2;if(j8&lt;=0)j8=2;int j9=Math.Min((int)(j4*j8)/100,j8);if(j9&lt;0)j9=0;to.sC((to.sy&lt;=0?t9:"")+ta[to.sp] 
+new String(td[to.sp],j9)+new String(tc[to.sp],j8-j9)+tb[to.sp]);to.sy+=(to.sy&lt;=0?t8*t5[to.sp]:0)+t6[to.sp]*j8+2*t7[to.sp];}public 
void tB(){to.sH();}public void tC(uF ja){ja.rE();if(ja.rt)to.sN();}public void tD(string jb,string jc){IMyTextPanel jd=tf. 
GridTerminalSystem.GetBlockWithName(jb)as IMyTextPanel;if(jd==null)return;jd.WritePublicText(jc+"\n",true);}public string tE( 
IMyInventoryItem je){var jf=je.Content.TypeId.ToString();jf=jf.Substring(jf.LastIndexOf('_')+1);return je.Content.SubtypeId+" "+jf 
;}public void tF(string jg,out string jh,out string ji){int jj=jg.LastIndexOf(' ');if(jj&gt;=0){jh=jg.Substring(0,jj);ji=jg.Substring 
(jj+1);return;}jh=jg;ji="";}public string tG(string jk){string jl,jm;tF(jk,out jl,out jm);return tG(jl,jm);}public string tG( 
string jn,string jo){uA jp=MMItems.qz(jn,jo);if(jp!=null){if(jp.qD!="")return jp.qD;return jp.qA;}return System.Text. 
RegularExpressions.Regex.Replace(jn,"([a-z])([A-Z])","$1 $2");}public void tH(ref string jq,ref string jr){var js=jq.ToLower();uA 
jt;if(MMItems.qy.TryGetValue(js,out jt)){jq=jt.qA;jr=jt.qB;return;}jt=MMItems.qz(jq,jr);if(jt!=null){jq=jt.qA;if(jr=="Ore"||jr== 
"Ingot")return;jr=jt.qB;}}public string tI(double ju,bool jv=true,char jw=' '){if(!jv)return ju.ToString( 
"#,###,###,###,###,###,###,###,###,###");var jx=" kMGTPEZY";double jy=ju;int jz=jx.IndexOf(jw);int jA=(jz&lt;0?0:jz);while(jy&gt;=1000&amp;&amp; 
jA+1&lt;jx.Length){jy/=1000;jA++;}var jB=Math.Round(jy,1,MidpointRounding.AwayFromZero).ToString();if(jA&gt;0)jB+=" "+jx[jA];return jB;} 
public string tJ(double jC,bool jD=true,char jE=' '){if(!jD)return jC.ToString("#,###,###,###,###,###,###,###,###,###");var jF= 
" ktkMGTPEZY";double jG=jC;int jH=jF.IndexOf(jE);int jI=(jH&lt;0?0:jH);while(jG&gt;=1000&amp;&amp;jI+1&lt;jF.Length){jG/=1000;jI++;}var jJ=Math. 
Round(jG,1,MidpointRounding.AwayFromZero).ToString();if(jI==1)jJ+=" kg";else if(jI==2)jJ+=" t";else if(jI&gt;2)jJ+=" "+jF[jI]+"t"; 
return jJ;}public string tK(double jK){return(Math.Floor(jK*10)/10).ToString("F1");}Dictionary&lt;char,float&gt;tL=new Dictionary&lt;char, 
float&gt;();void AddCharsSize(string jL,float jM){jM+=1;for(int jN=0;jN&lt;jL.Length;jN++){if(jM&gt;t2[s_])t2[s_]=jM;tL.Add(jL[jN],jM);}} 
public float tM(char jO,string jP){float jQ;if(jP==t0||!tL.TryGetValue(jO,out jQ))return t2[jP];return jQ;}public float tN(string 
jR,string jS){if(jS==t0)return jR.Length*t2[jS];float jT=0;for(int jU=0;jU&lt;jR.Length;jU++)jT+=tM(jR[jU],jS);return jT;}public 
string tO(string jV,float jW){if(jW/t2[to.sp]&gt;=jV.Length)return jV;float jX=tN(jV,to.sp);if(jX&lt;=jW)return jV;float jY=jX/jV.Length 
;jW-=t3[to.sp];int jZ=(int)Math.Max(jW/jY,1);if(jZ&lt;jV.Length/2){jV=jV.Remove(jZ);jX=tN(jV,to.sp);}else{jZ=jV.Length;}while(jX&gt;jW&amp;&amp; 
jZ&gt;1){jZ--;jX-=tM(jV[jZ],to.sp);}if(jV.Length&gt;jZ)jV=jV.Remove(jZ);return jV+"..";}void SetupClassicFont(string j_){s_=j_;ta[s_]= 
MMStyle.BAR_START;tb[s_]=MMStyle.BAR_END;tc[s_]=MMStyle.BAR_EMPTY;td[s_]=MMStyle.BAR_FILL;t2[s_]=0f;}void SetupMonospaceFont( 
string k0,float k1){t0=k0;t1=k1;t2[t0]=t1+1;t3[t0]=2*(t1+1);ta[t0]=MMStyle.BAR_MONO_START;tb[t0]=MMStyle.BAR_MONO_END;tc[t0]= 
MMStyle.BAR_MONO_EMPTY;td[t0]=MMStyle.BAR_MONO_FILL;t5[t0]=tM(' ',t0);t6[t0]=tM(tc[t0],t0);t7[t0]=tM(ta[t0],t0);t4[t0]=tN( 
" 100.0%",t0);}public void tP(){if(tL.Count&gt;0)return; 
 
// Monospace font name, width of single character 
// Change this if you want to use different (modded) monospace font 
SetupMonospaceFont("Monospace", 24f); 
 
// Classic/Debug font name (uses widths of characters below) 
// Change this if you want to use different font name (non-monospace) 
SetupClassicFont("Debug"); 
// Font characters width (font "aw" values here) 
AddCharsSize("3FKTabdeghknopqsuy£µÝàáâãäåèéêëðñòóôõöøùúûüýþÿāăąďđēĕėęěĝğġģĥħĶķńņňŉōŏőśŝşšŢŤŦũūŭůűųŶŷŸșȚЎЗКЛбдекруцяёђћўџ", 17f); 
AddCharsSize("ABDNOQRSÀÁÂÃÄÅÐÑÒÓÔÕÖØĂĄĎĐŃŅŇŌŎŐŔŖŘŚŜŞŠȘЅЊЖф□", 21f); 
AddCharsSize("#0245689CXZ¤¥ÇßĆĈĊČŹŻŽƒЁЌАБВДИЙПРСТУХЬ€", 19f); 
AddCharsSize("￥$&amp;GHPUVY§ÙÚÛÜÞĀĜĞĠĢĤĦŨŪŬŮŰŲОФЦЪЯжы†‡", 20f); 
AddCharsSize("！ !I`ijl ¡¨¯´¸ÌÍÎÏìíîïĨĩĪīĮįİıĵĺļľłˆˇ˘˙˚˛˜˝ІЇії‹›∙", 8f); 
AddCharsSize("？7?Jcz¢¿çćĉċčĴźżžЃЈЧавийнопсъьѓѕќ", 16f); 
AddCharsSize("（）：《》，。、；【】(),.1:;[]ft{}·ţťŧț", 9f); 
AddCharsSize("+&lt;=&gt;E^~¬±¶ÈÉÊË×÷ĒĔĖĘĚЄЏЕНЭ−", 18f); 
AddCharsSize("L_vx«»ĹĻĽĿŁГгзлхчҐ–•", 15f); 
AddCharsSize("\"-rª­ºŀŕŗř", 10f); 
AddCharsSize("WÆŒŴ—…‰", 31f); 
AddCharsSize("'|¦ˉ‘’‚", 6f); 
AddCharsSize("@©®мшњ", 25f); 
AddCharsSize("mw¼ŵЮщ", 27f); 
AddCharsSize("/ĳтэє", 14f); 
AddCharsSize("\\°“”„", 12f); 
AddCharsSize("*²³¹", 11f); 
AddCharsSize("¾æœЉ", 28f); 
AddCharsSize("%ĲЫ", 24f); 
AddCharsSize("MМШ", 26f); 
AddCharsSize("½Щ", 29f); 
AddCharsSize("ю", 23f); 
AddCharsSize("ј", 7f); 
AddCharsSize("љ", 22f); 
AddCharsSize("ґ", 13f); 
AddCharsSize("™", 30f); 
// End of font characters width 
 t5[s_]=tM(' ',s_);t6[s_]=tM(tc[s_],s_);t7[s_]= 
tM(ta[s_],s_);t4[s_]=tN(" 100.0%",s_);t3[s_]=tM('.',s_)*2;}} 
 
public class TranslationTable 
{ 
public string T(string msgid) {return TT[msgid];} 
 
readonly Dictionary&lt;string, string&gt; TT = new Dictionary&lt;string, string&gt; 
{ 
// TRANSLATION STRINGS 
// msg id, text 
{ "AC1", "Acceleration:" }, 
// amount 
{ "A1", "EMPTY" }, 
{ "ALT1", "Altitude:"}, 
{ "ALT2", "Ground:"}, 
{ "B1", "Booting up..." }, 
{ "C1", "count:" }, 
{ "C2", "Cargo Used:" }, 
{ "C3", "Invalid countdown format, use:" }, 
{ "C4", "EXPIRED" }, 
{ "C5", "days" }, 
// customdata 
{ "CD1", "Block not found: " }, // NEW 
{ "CD2", "Missing block name" }, // NEW 
{ "D1", "You need to enter name." }, 
{ "D2", "No blocks found." }, 
{ "D3", "No damaged blocks found." }, 
{ "DTU", "Invalid GPS format" }, 
{ "GA", "Artif."}, // (not more than 5 characters) 
{ "GN", "Natur."}, // (not more than 5 characters) 
{ "GT", "Total"}, // (not more than 5 characters) 
{ "G1", "Total Gravity:"}, 
{ "G2", "Natur. Gravity:"}, 
{ "G3", "Artif. Gravity:"}, 
{ "H1", "Write commands to Custom Data of this panel." }, 
// inventory 
{ "I1", "ore" }, 
{ "I2", "summary" }, 
{ "I3", "Ores" }, 
{ "I4", "Ingots" }, 
{ "I5", "Components" }, 
{ "I6", "Gas" }, 
{ "I7", "Ammo" }, 
{ "I8", "Tools" }, 
{ "M1", "Cargo Mass:" }, 
// oxygen 
{ "O1", "Leaking" }, 
{ "O2", "Oxygen Farms" }, 
{ "O3", "No oxygen blocks found." }, 
{ "O4", "Oxygen Tanks" }, 
// position 
{ "P1", "Block not found" }, 
{ "P2", "Location" }, 
// power 
{ "P3", "Stored" }, 
{ "P4", "Output" }, 
{ "P5", "Input" }, 
{ "P6", "No power source found!" }, 
{ "P7", "Batteries" }, 
{ "P8", "Total Output" }, 
{ "P9", "Reactors" }, 
{ "P10", "Solars" }, 
{ "P11", "Power" }, 
{ "PT1", "Power Time:" }, 
{ "PT2", "Charge Time:" }, 
{ "PU1", "Power Used:" }, 
{ "S1", "Speed:" }, 
{ "SM1", "Ship Mass:" }, 
{ "SM2", "Ship Base Mass:" }, 
{ "SD", "Stop Distance:" }, 
{ "ST", "Stop Time:" }, 
// text 
{ "T1", "Source LCD not found: " }, 
{ "T2", "Missing source LCD name" }, 
{ "T3", "LCD Private Text is empty" }, 
// tanks 
{ "T4", "Missing tank type. eg: 'Tanks * Hydrogen'" }, 
{ "T5", "No {0} tanks found." }, // {0} is tank type 
{ "T6", "Tanks" }, 
{ "UC", "Unknown command" }, 
// occupied &amp; dampeners 
{ "SC1", "Cannot find control block." }, 
{ "SCD", "Dampeners: " }, 
{ "SCO", "Occupied: " }, 
// working 
{ "W1", "OFF" }, 
{ "W2", "WORK" }, 
{ "W3", "IDLE" }, 
{ "W4", "LEAK" }, 
{ "W5", "OPEN" }, 
{ "W6", "CLOSED" }, 
{ "W7", "LOCK" }, 
{ "W8", "UNLOCK" }, 
{ "W9", "ON" }, 
{ "W10", "READY" } 
}; 
}</Program>
              <Storage />
              <TextPanels>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>1</FontSize>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294967295</PackedValue>
                    <X>255</X>
                    <Y>255</Y>
                    <Z>255</Z>
                    <R>255</R>
                    <G>255</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <SelectedScript />
                  <TextPadding>2</TextPadding>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>1</FontSize>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294967295</PackedValue>
                    <X>255</X>
                    <Y>255</Y>
                    <Z>255</Z>
                    <R>255</R>
                    <G>255</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <SelectedScript />
                  <TextPadding>2</TextPadding>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
              </TextPanels>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
              <SubtypeName>SmallProgrammableBlock</SubtypeName>
              <EntityId>79467901738379129</EntityId>
              <Min x="-1" y="15" z="-23" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>OctopusV1.2PB_Scan</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Program>int max_GFD = 3; // 3 is the minimum required for now. You can set it higher, but it may tax the server.     
int max_targets = 50; // this does not do anything for now. Be aware that having a high number of grids will lag      
int asteroid_check = 180000; // check an asteroid every 15 minutes. Usually it will be hit by a random beam sooner.     
float max_dist = 25000; // this is a very long range, but it works. If you are afraid this causes lag, set it lower.     
double max_v = 120; //  this is used on a hit, to guess wether a target is the same target you were tracking.     
                                     // I set it to 120, because it seems possible to go over the 100 m/s limit.      
double max_acc = 10; // This number is the maximum acceleration a ship is expected to have. Any higher than this     
                                     //and the lock may be lost when making a quick velocity change in the transverse direction.      
int max_loop = 100;     
float max_beam_width = 500;     
  
Vector3D cone1= new Vector3D();  
Vector3D  cone2= new Vector3D();  
bool Stop;  
string ShipName = "PaoloOctopus3";  
  
  
  
int Clock=1;  
int TickCount;  
string SearchStr = "                              ------------------------------                              ";  
  
void Main(string argument)       
{     
	var gts = GridTerminalSystem;     
    IMyTimerBlock timer = (IMyTimerBlock)gts.GetBlockWithName(ShipName+ "TimerScan");    
    IMyRemoteControl rc = (IMyRemoteControl)gts.GetBlockWithName(ShipName+ "RemCon");    	  
	if (argument == "Stop")  
		{  
			Stop=!Stop;  
		}  
	else if (argument == "reset")   
		{  
			Storage = "";  
			Stop=false;			  
		}      
  
TickCount++;  
if (TickCount % Clock !=0 )  
{  
	timer.GetActionWithName("TriggerNow").Apply(timer);  
	return;  
}  
   
    //IMyTextPanel grid_panel = (IMyTextPanel)gts.GetBlockWithName(ShipName+ "TP_Rock");      
    Vector3D rc_pos = rc.GetPosition();      
	  
    double radius;       
    Vector3D center = rc_pos;      
    Matrix or, world_or;     
    // we use the orientation vectors below to print the target arrows on the target LCD     
    rc.Orientation.GetMatrix(out or);      
    world_or = rc.WorldMatrix.GetOrientation();      
       
    	Vector3D c_fwd  = Vector3D.Transform(or.Forward, MatrixD.Transpose(or));       
    	Vector3D c_up  = Vector3D.Transform(or.Up, MatrixD.Transpose(or));       
    	Vector3D c_right  = Vector3D.Transform(or.Right, MatrixD.Transpose(or));      
      
    Vector3D fwd_wrld = Vector3D.Transform(c_fwd, world_or);      
    	Vector3D up_wrld  = Vector3D.Transform(c_up, world_or);      
    	Vector3D right_wrld  = Vector3D.Transform(c_right, world_or);     
     
    int GFD_tick = 0;      
    string[] target_strings = LoadStorage();      
      
    List&lt;Target&gt; targets = new List&lt;Target&gt;();      
    char[] delim = {';'};      
     
    for (int i = 0; i &lt; target_strings.Length; i++) {      
        string[] tar = target_strings[i].Split(delim);      
        targets.Add(new Target{time = int.Parse(tar[0])+1, countdown = int.Parse(tar[1])-1,      
        radius = double.Parse(tar[2]), velocity = GetVector3D(tar[3]), coords = GetVector3D(tar[4]),      
        stat = bool.Parse(tar[5]), grid = bool.Parse(tar[6])});         
    }      
        
    for (int i = targets.Count-1; i &gt; -1; i--) {       
        if (targets[i].countdown &lt; 1 &amp;&amp; GFD_tick &lt; max_GFD) { //we check if one of the tracked targets needs updating     
            Vector3D target = targets[i].coords + targets[i].velocity * targets[i].time - rc_pos;      
            // we use the velocity to predict where the target has travelled across the sky.     
            target.Normalize();       
            center = Lock3GFD(rc,rc_pos+target, max_dist, 0f, out radius);        
            if (!center.IsValid()) { // if something went wrong and we get a bad result,      
                                             // we count it as 3 GFD calls and remove the target from our list.      
                GFD_tick += 3;        
                targets.RemoveAt(i);      
            }     
            else {      
                if (center == rc_pos) GFD_tick += 1; //the Lock3GFD method returns after 1 GFD call if it misses     
                else {     
                    GFD_tick += 3;  //if Lock3GF hits, we count it a 3 GFD calls     
                    update_targetlist (targets,  rc_pos, center, radius);  // we only update when something is hit.     
                }     
                if (Math.Abs(radius- targets[i].radius) &gt; 0.1 || (center-rc_pos).Length() &lt; 1) targets.RemoveAt(i);     
                // when the target is too close to be right or its radius is not correct, we remove the target.     
            }     
        }        
    }      
     
    Random rnd = new Random();      
     
    //The while loop below shoots GFD beams into random directions to find new targets.      
    //It uses spherical coördinates.      
	int loop_count = 0;  
     
    while (GFD_tick &lt; max_GFD-2 &amp;&amp; loop_count &lt; max_loop) { // we loop over the allowed number of GFD     
        loop_count++;                             // we take a maximum of 100 loops to prevent problems with the script     
        double theta = rnd.NextDouble() * 2 * Math.PI;  // theta is between 0 and 2 pi     
		double z=rnd.NextDouble();  		  
        double z_fac = Math.Sqrt(1- Sq(z)); //the squareroot of 1 minus z-square         
        double x = z_fac * Math.Cos(theta);     
        double y = z_fac * Math.Sin(theta);     
     
        Vector3D rel_target = new Vector3D(x,-z,y); //spherical coordinates transformed to cartesian.     
		rel_target = Vector3D.Transform(rel_target, rc.WorldMatrix)-rc.GetPosition();  
    
        float beam_width = max_beam_width;     
        for(int i = 0; i &lt; targets.Count; i++) { //this checks how wide the beam can be without crossing known targets     
            Vector3D target_dir = targets[i].coords - rc_pos;     
            float target_beam_width = (float)(rel_target.Cross(target_dir)).Length();     
            target_beam_width -=(float)targets[i].radius - 1;     
            if (target_beam_width &lt; beam_width) beam_width = target_beam_width;     
            if (target_beam_width &lt; 0) break;     
        }     
     
        if (beam_width &gt; 0) { // if the beam_width is negative it will hit a known target even with beam_width 0;     
            Vector3D target = rc_pos + rel_target; // we don't need to normalize because the length of rel_target = 1.      
            center = Lock3GFD(rc, target, max_dist, beam_width, out radius);        
     
            if (center == rc_pos) GFD_tick += 1;  //the Lock3GFD method returns after 1 GFD call if it misses     
            else {      
                GFD_tick += 3; //if Lock3GF hits, we count it a 3 GFD calls     
                update_targetlist (targets,  rc_pos, center, radius); // we only update when something is hit.     
            }     
        }     
    }      
	string strRoids="";  
	int ii=0;  
    for(int i = 0; i &lt; targets.Count; i++) {       
        Vector3D coords = targets[i].coords;   
        if ((targets[i].stat) &amp;&amp; (Math.Round(targets[i].radius/Math.Sqrt(3),1)==8))   
		{  
            strRoids += ii.ToString() +";";  
            strRoids += Math.Round(coords.GetDim(0),1) +";"+ Math.Round(coords.GetDim(1),1) +";"+ Math.Round(coords.GetDim(2),1) +";";  
            strRoids += Math.Round((targets[i].coords - rc_pos).Length(),0).ToString() +";\n";  
			ii++;  
		}  
    }  
	int tt= (int)((TickCount / Clock)%60);  
	string SearchSubStr = SearchStr.Substring(tt, 30);  
	strRoids="\nRocks found:"+(ii).ToString()+";\n"+SearchSubStr+"\n"+strRoids;	  
	 
	IMyTextPanel grid_panel = (IMyTextPanel)gts.GetBlockWithName(ShipName+ "TP_Rock"); 
	grid_panel.ShowTextureOnScreen(); 
	grid_panel.WritePublicText(strRoids);  
    grid_panel.ShowPublicTextOnScreen();    
    grid_panel.GetActionWithName("OnOff_On").Apply(grid_panel);  
				 
    double dotprod = -1;     
    int target_index = -1;     
     
    Storage = "";      
    StringBuilder builder = new StringBuilder();       
    for(int j = 0; j &lt; targets.Count; j++) {      
        builder.Append(targets[j].ToString());      
        if (j &lt; targets.Count - 1) builder.Append("\n");      
    }      
    Storage = builder.ToString();      
	if (!Stop)  
		timer.GetActionWithName("TriggerNow").Apply(timer);      
}      
      
Vector3D GetVector3D(string rString){  // convert String to Vector3D                       
    if (rString == "0") rString = "(X:0 Y:0 Z:0)";                       
    string[] temp = rString.Substring(1,rString.Length-2).Split(' ');                        
    double x = double.Parse(temp[0].Substring(2,temp[0].Length-2));                       
    double y = double.Parse(temp[1].Substring(2,temp[1].Length-2));                        
    double z = double.Parse(temp[2].Substring(2,temp[2].Length-2));                          
    Vector3D rValue = new Vector3D(x,y,z);              
    return rValue;                      
  }                                                             
      
Vector3D Lock3GFD (IMyRemoteControl rc, Vector3D target, float max_dist, float beam_width, out double radius) {       
    // this method is commented on the Keen forums except the radius part at the bottom.      
    // I did not come up with this myself, exept the radius calculation. That part is mine.     
    Vector3D R = rc.GetPosition();      
    Vector3D F1 = rc.GetFreeDestination(target, max_dist, beam_width);  // F,O and R refer to PennyWise's pictures     
    Vector3D RF1 = F1-R;     
    if (RF1.Length() &lt; 1) {     
        radius = 0;     
        return R;     
    }     
    Vector3D RO_norm = Vector3D.Normalize(target-R);      
    Vector3D O1 = R + (F1-R).Length()*RO_norm;        
    Vector3D dO = Vector3D.Normalize(F1-O1);  //named differently in Pennywise's pictures      
    Vector3D O2 = O1 - dO;  // shift the points to the inside of the sphere instead of the outside to avoid miss          
    Vector3D O3 = O2 - dO;        
    Vector3D F2 = rc.GetFreeDestination(O2, max_dist, beam_width);        
    Vector3D F3 = rc.GetFreeDestination(O3, max_dist, beam_width);        
    Vector3D circle_norm = Vector3D.Cross(F1-O1,O1-R);        
    Vector3D F12 = (F1+F2)/2;        
    Vector3D F23 = (F2+F3)/2;        
      
    Vector3D FC12 = circle_norm.Cross(F2-F1);        
    Vector3D FC23 = circle_norm.Cross(F3-F2);        
    Vector3D T = Intersect(F12,FC12, F23,FC23);       
    Vector3D RT = T-R;         
    Vector3D RT_RF1 = RT + RF1;       
      
    // getting line parameter "k" to find O along the line through R and O. We use that FO and TO are perpendicular.      
          
    double k = (RT_RF1.Dot(RO_norm) - Math.Sqrt(Sq(RT_RF1.Dot(RO_norm))-4*RT.Dot(RF1)))/2;      
    radius = (T- R - k * RO_norm).Length() - beam_width;      
    if (double.IsNaN(radius)) T = R;     
       
    return T;      
}       
       
Vector3D Intersect(Vector3D Pos1, Vector3D Vec1, Vector3D Pos2, Vector3D Vec2)         
{         
  // this method intersects two vectors that start at pos 1 and pos 2 and point in the direction of vec1 and vec2      
    Vec1.Normalize();       
    Vec2.Normalize();       
    double D11, D22, D12, DP1, DP2, C12, S1, S2;        
        
    Vector3D Pos_change = Pos2 - Pos1;         
    Vector3D Cross12 = Vec1.Cross(Vec2);         
        
    D11 = Vec1.LengthSquared();         
    D22= Vec2.LengthSquared();         
    D12 = Vec1.Dot(Vec2);         
    DP1= Pos_change.Dot(Vec1);          
    DP2= Pos_change.Dot(Vec2);        
    C12 = Cross12.LengthSquared();        
        
    S1= (D22*DP1 - DP2*D12) / C12;           
    S2= (D12*DP1 - DP2*D11) / C12;         
        
    Vector3D P1 = Pos1 + S1 * Vec1;        
    Vector3D P2 = Pos2 + S2 *Vec2;        
         
    return (P1+P2)/2;         
}      
      
double Sq(double number) {              // just for squaring stuff.       
    	double squared = number*number;       
    	return squared;       
}      
      
string[] LoadStorage()                           
{                                                    
    char[] delim = {'\n'};            
    string[] data= Storage.Split(delim);                                  
    if (Storage == "") return new string[0];                                           
    else return data;                           
}                           
                            
public class Target { // this class describes a datapoint (target) with all the information that goes with it.     
    public int time;    // time since last scan (ticks)     
    public int countdown; // countdown to next scan     
    public double radius; // radius of the target, used for identification     
    public Vector3D velocity; // velocity of the target      
    public Vector3D coords;  // the GPS coords of the target     
    public bool stat; // this is true when a target has velocity 0 and is of a radius that an asteroid may have     
    public bool grid; // this is true when a "supposed" asteroid has ever gotten a velocity.      
      
    public override string ToString()       
    {       
       return time + ";" + countdown + ";" + radius + ";" + velocity + ";"+ coords + ";" + stat + ";" + grid;      
    }      
}       
      
List&lt;Target&gt; update_targetlist (List&lt;Target&gt; targets,  Vector3D rc_pos, Vector3D center, double radius)       
{       
    if (center.IsValid() &amp;&amp; (center - rc_pos).Length() &gt; 1) {         
        bool new_target = true;    // if this is true we have a new target, it may be made false below.     
        for (int i = 0; i&lt;targets.Count; i++) {          
            Vector3D offset = center - targets[i].coords; // we find out if the target is close to another known target     
     
            // the complicated "if" below checks two situations. If the target is a grid, it checks if a target with the     
            // same radius exists at a location within a sphere of radius "possible distance travelled since last check"     
     
            // if the target is an asteroid it simply checks if the radius is correct and it has the same location     
     
             if ((!targets[i].stat &amp;&amp; Math.Abs(radius - targets[i].radius) &lt; 0.1 &amp;&amp;       
                offset.Length() &lt; Math.Max(targets[i].time,1) * max_v/60*Clock) || (targets[i].stat &amp;&amp;      
                Math.Abs(radius - targets[i].radius) &lt; 0.2 &amp;&amp; offset.Length() &lt; 1)) {        
     
                    new_target = false;         
                    if (targets[i].time &gt; 0) {       
                        targets[i].radius = radius;         
                        targets[i].velocity = (center-targets[i].coords)/targets[i].time;       
     
                        if ((targets[i].velocity).Length() &gt; 1) { // if a target has ever moved, it is not considered an asteroid     
                            targets[i].grid = true;       
                            targets[i].stat = false;     
                        }     
     
                        if (targets[i].stat) targets[i].countdown = asteroid_check;      
                        else targets[i].countdown = (int)Math.Floor(Math.Sqrt(radius/max_acc)*60/Clock);      
     
                        targets[i].time = 0;         
                        targets[i].coords = center;         
                        double real_radius = radius/Math.Sqrt(3);         
                             
                        bool asteroid = false;         
                        if (targets[i].grid == false) {          
                            for (int j = 0; j &lt; 7; j++) {         
                            if (Math.Abs(real_radius - 8* Math.Pow(2,j)) &lt; 0.1 &amp;&amp; (targets[i].velocity).Length() &lt; 1) {     
                                targets[i].stat = true;     
                            // this checks whether the radius is the same as a possible asteroids radius and if it moves.     
                            // if so, then it is considered a stationary target (possibly asteroid)     
                            // if it ever does move, this check will never be made again. Asteroids never move.     
                            }     
                                 
                        }            
                    }            
                }         
            }         
        }      
     
        if (new_target) {         
            targets.Add(new Target{time = 0, countdown = 1, radius = radius,  velocity = new Vector3D(0,0,0), coords = center,         
            stat = false, grid = false});            
        }         
    }       
    return targets;       
}</Program>
              <Storage />
              <TextPanels>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>1</FontSize>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294967295</PackedValue>
                    <X>255</X>
                    <Y>255</Y>
                    <Z>255</Z>
                    <R>255</R>
                    <G>255</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <SelectedScript />
                  <TextPadding>2</TextPadding>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>1</FontSize>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294967295</PackedValue>
                    <X>255</X>
                    <Y>255</Y>
                    <Z>255</Z>
                    <R>255</R>
                    <G>255</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <SelectedScript />
                  <TextPadding>2</TextPadding>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
              </TextPanels>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
              <SubtypeName>SmallProgrammableBlock</SubtypeName>
              <EntityId>140757921696918985</EntityId>
              <Min x="0" y="15" z="-23" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>OctopusV1.2PB_Nav</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Program>//toolbar 
/* 
1st toolbar 
Pause 
camera1 view 
camera2 view 
blank 
SaveConnector 
StartDepoDrill 
GoHome 
StayHome 
SetFlyHeight 
*/ 
 
    int TickCount;  
    int Clock = 10;  
    string ShipName = "OctopusV1.2";  
    string NewName = "OctopusV1.2";  
    float GyroMult = 0.5f;  
    int CriticalMass = 180000;  
    float AlignAccelMult = 0.3f;  
    float DrillAccel = 0.5f;  
    float DrillSpeedLimit = 0.5f;  
    float DrillGyroMult = 2f;  
    float ReturnOnCharge = 0.25f;  
    float DrillFrameWidth = 8f;  
    float DrillFrameLength = 7f;  
    float DrillDepth = 35;  
    int MaxShafts = 50;  
    float TargetSize = 100;  
    int StoneDumpOn = 250000;  
    //---------------------            
  
  
    IMyTimerBlock Timer;  
  
    MyDriller thisDriller;  
    public static class Commands  
    {  
        public const int Idle = 0;  
        public const int SaveConnector = 1;  
        public const int SaveDrillPoint = 2;  
        public const int Lock = 3;  
        public const int Complete = 4;  
        public const int StartDepoDrill = 5;  
        public const int DepoDrill = 6;  
        public const int Pause = 7;  
        public const int StartRockDrill = 8;  
        public const int RockDrill = 9;  
  
        public const int UnDock = 20;  
        public const int ToDrillPoint = 21;  
        public const int DrillAlign = 22;  
        public const int Drill = 23;  
        public const int PullOut = 24;  
        public const int ToBase = 25;  
        public const int Dock = 26;  
        public const int Docked = 27;  
        public const int BaseOperations = 28;  
        public const int PullUp = 29;  
    }  
  
    void Main(string argument)  
    {  
        if (thisDriller == null)  
            thisDriller = new MyDriller(ShipName, this);  
        if (Timer == null)  
            Timer = GridTerminalSystem.GetBlockWithName(thisDriller.MyName + "TimerClock") as IMyTimerBlock;  
        TickCount++;  
  
        if (argument != "")  
        {  
            TickCount = 0;  
            switch (argument)  
            {  
                case "SaveConnector":  
                    {  
                        if (thisDriller.Paused)  
                            thisDriller.Pause();  
                        thisDriller.Command = Commands.SaveConnector;  
                        break;  
                    }  
                case "StartDepoDrill":  
                    {  
                        if (thisDriller.Paused)  
                            thisDriller.Pause();  
                        thisDriller.Command = Commands.StartDepoDrill;  
                        break;  
                    }  
                case "StartRockDrill":  
                    {  
                        if (thisDriller.Paused)  
                            thisDriller.Pause();  
                        thisDriller.Command = Commands.StartRockDrill;  
                        break;  
                    }  
                case "Pause":  
                    {  
                        thisDriller.Pause();  
                        break;  
                    }  
                case "Rename":  
                    {  
                        thisDriller.Rename(ShipName, NewName);  
                        if (!thisDriller.Paused)  
                            thisDriller.Pause();  
                        break;  
                    }  
                case "PlanetCenter":  
                    {  
                        thisDriller.FindPlanetCenter();  
                        if (!thisDriller.Paused)  
                            thisDriller.Pause();  
                        break;  
                    }  
                case "SetFlyHeight":  
                    {  
                        thisDriller.SetFlyHeight();  
                        if (!thisDriller.Paused)  
                            thisDriller.Pause();  
                        break;  
                    }  
                case "DisplayHeight":  
                    {  
                        thisDriller.DisplayHeight();  
                        if (!thisDriller.Paused)  
                            thisDriller.Pause();  
                        break;  
                    }  
                case "GoHome":  
                    {  
                        thisDriller.GoHome = true;  
                        if (thisDriller.Paused)  
                            thisDriller.Pause();  
                        break;  
                    }  
                case "StayHome":  
                    {  
                        thisDriller.GoHome = true;  
                        thisDriller.StayHome = true;  
                        if (thisDriller.Paused)  
                            thisDriller.Pause();  
                        break;  
                    }  
  
                default:  
                    break;  
            }  
        }  
  
        if (!thisDriller.Paused)  
        {  
            if ((TickCount % Clock) == 0)  
            {  
                thisDriller.Update();  
            }  
            Timer.GetActionWithName("TriggerNow").Apply(Timer);  
        }  
    }  
  
    public class MyDriller  
    {  
        private MyNavigation navBlock;  
        private MyThrusters thrustBlock;  
        private MyGyros gyroBlock;  
        private MyCargo cargoBlock;  
        private MyDrills drillBlock;  
        private MyConnector connectorBlock;  
        private MyBatteries batteryBlock;  
        public int Command { get; set; }  
        public string MyName { get; private set; }  
        internal static Program ParentProgram;  
        public float ShipMass { get; private set; }  
        public bool EmergencyReturn = false;  
        public bool GoHome = false;  
        public bool StayHome = false;  
        public bool Paused { get; private set; }  
        public int CurrentStatus { get; set; }  
		public bool Damaged = false; 
				 
        public MyDriller(string DrillerName, Program MyProg)  
        {  
            MyName = DrillerName;  
            ParentProgram = MyProg;  
            InitSubSystems();  
			 
			TextOutput("TPPaolo", "\n START \n");  
			CheckDamaged(); 
        }  
        public void InitSubSystems()  
        {  
            thrustBlock = new MyThrusters(this);  
            gyroBlock = new MyGyros(this);  
            cargoBlock = new MyCargo(this);  
            drillBlock = new MyDrills(this);  
            connectorBlock = new MyConnector(this);  
            batteryBlock = new MyBatteries(this);  
            navBlock = new MyNavigation(this);  
        }  
  
        public void FindPlanetCenter()  
        {  
            navBlock.FindPlanetCenter();  
        }  
        public void DisplayHeight()  
        {  
            navBlock.DisplayHeight();  
        }  
        public void SetFlyHeight()  
        {  
            navBlock.SetFlyHeight();  
        }  
        public void Rename(string OldName, string NewName)  
        {  
            List&lt;IMyTerminalBlock&gt; blockTemp = new List&lt;IMyTerminalBlock&gt;();  
            ParentProgram.GridTerminalSystem.SearchBlocksOfName(OldName, blockTemp);  
            for (int i = 0; i &lt; blockTemp.Count; i++)  
            {  
                IMyTerminalBlock block = blockTemp[i] as IMyTerminalBlock;  
                block.CustomName = block.CustomName.Replace(OldName, NewName);  
            }  
            MyName = NewName;  
            InitSubSystems();  
        }  
        public void TextOutput(string TP, string Output = "")  
        {  
            IMyTextPanel ScrObj = ParentProgram.GridTerminalSystem.GetBlockWithName(MyName + TP) as IMyTextPanel;  
            if (ScrObj != null)  
            {  
                if (Output != "")  
                {  
                    ScrObj.WritePublicText(Output);  
                }  
                ScrObj.GetActionWithName("OnOff_On").Apply(ScrObj);  
            }  
        }  
        private static void TurnGroup(string t, string OnOff)  
        {  
            var GrItems = GetBlocksFromGroup(t);  
            for (int i = 0; i &lt; GrItems.Count; i++)  
            {  
                var GrItem = GrItems[i] as IMyTerminalBlock;  
                GrItem.GetActionWithName("OnOff_" + OnOff).Apply(GrItem);  
            }  
        }  
        private static List&lt;IMyTerminalBlock&gt; GetBlocksFromGroup(string group)  
        {  
            var blocks = new List&lt;IMyTerminalBlock&gt;();  
            ParentProgram.GridTerminalSystem.SearchBlocksOfName(group, blocks);  
            if (blocks != null)  
            { return blocks; }  
            throw new Exception("GetBlocksFromGroup: Group \"" + group + "\" not found");  
        } 
		 
		public void CheckDamaged() 
		{ 
			var dmg = IsDamaged(); 
			if(dmg) 
			{ 
				GoHome = true;  
                StayHome = true;  
				Damaged = true; 
                if (Paused)  
                    Pause();  
				 
				TextOutput("TPPaolo", "\n DAMAGED \n");   
			} 
			else if(Damaged) 
			{ 
				//Repaired 
				GoHome = false;  
                StayHome = false; 
			} 
		} 
 
		//Paolo True if any named block is damaged 
		public bool IsDamaged() 
		{ 
			List&lt;IMyTerminalBlock&gt; blockTemp = new List&lt;IMyTerminalBlock&gt;();  
            ParentProgram.GridTerminalSystem.SearchBlocksOfName(MyName, blockTemp);  
            for (int i = 0; i &lt; blockTemp.Count; i++)  
            {  
                IMyTerminalBlock terminalBlock = blockTemp[i] as IMyTerminalBlock; 
				IMySlimBlock slimBlock = terminalBlock.CubeGrid.GetCubeBlock(terminalBlock.Position); 
				if(slimBlock == null) continue; 
				 
				bool damaged =  (slimBlock.MaxIntegrity &gt; slimBlock.BuildIntegrity) || slimBlock.CurrentDamage &gt; 0; 
				 
				if(damaged) 
				{ 
					string text = "\n Damaged: " + slimBlock.CurrentDamage.ToString() + " \n"; 
					text += "MaxIntegrity: " + slimBlock.MaxIntegrity.ToString() + " \n"; 
					text += "BuildIntegrity: " + slimBlock.BuildIntegrity.ToString() + " \n"; 
					text += "" + terminalBlock.CustomName.ToString() + " \n"; 
					text += "Count: " + blockTemp.Count.ToString() + " \n"; 
				 
					TextOutput("TPPaolo", text);  
					 
					return damaged; 
				} 
            } 
			 
			TextOutput("TPPaolo", "Damaged: " + Damaged.ToString()+ "\n Counter: " + navBlock.counter.ToString() + "\n");  
 
			return false; 
		} 
  
        public void Pause()  
        {  
            IMyTextPanel ScrObj = ParentProgram.GridTerminalSystem.GetBlockWithName(MyName + "TP_Icon") as IMyTextPanel;  
            if (Paused)  
            {  
                ParentProgram.Timer.GetActionWithName("Start").Apply(ParentProgram.Timer);  
                Paused = false;  
                ScrObj.GetActionWithName("OnOff_On").Apply(ScrObj);  
            }  
            else  
            {  
                gyroBlock.SetOverride(false, "", 1);  
                thrustBlock.SetOverridePercent("", 0);  
                drillBlock.Turn("Off");  
                ParentProgram.Timer.GetActionWithName("Stop").Apply(ParentProgram.Timer);  
                connectorBlock.Turn("On");  
                Paused = true;  
                ScrObj.GetActionWithName("OnOff_Off").Apply(ScrObj);  
            }  
            navBlock.SaveToStorage();  
        }  
  
        private void SequencerDepoDrill()  
        {  
		  
            if (Command == Commands.StartDepoDrill)  
            {  
                navBlock.SetDrillMatrixDepo();  
                CurrentStatus = Commands.DrillAlign;  
                Command = Commands.DepoDrill;  
                GoHome = false; StayHome = false;  
            }  
            else  
				CheckDamaged(); //paolo check if damaged, if so sets stay at home. 
				//ll++; 
				//TextOutput("TPPaolo", ll.ToString() + "\n" );  
                switch (CurrentStatus)  
                {  
                    case Commands.UnDock:  
                        if (navBlock.UnDock())  
                        {  
                            CurrentStatus = Commands.ToDrillPoint;  
                            navBlock.SaveToStorage();  
                        }  
                        break;  
                    case Commands.ToDrillPoint:  
                        if (GoHome)  
                        {  
                            CurrentStatus = Commands.ToBase;  
                            navBlock.SaveToStorage();  
                        }  
                        else if (navBlock.ToDrillPoint())  
                        {  
                            CurrentStatus = Commands.DrillAlign;  
                            navBlock.SaveToStorage();  
                        }  
                        break;  
                    case Commands.DrillAlign:  
                        if (GoHome)  
                        {  
                            CurrentStatus = Commands.ToBase;  
                            navBlock.SaveToStorage();  
                        }  
                        else if (navBlock.DrillAlign(out EmergencyReturn))  
                        {  
                            CurrentStatus = Commands.Drill;  
                            navBlock.SaveToStorage();  
                        }  
                        break;  
                    case Commands.Drill:  
                        if (GoHome)  
                        {  
                            CurrentStatus = Commands.PullOut;  
                            navBlock.SaveToStorage();  
                        }  
                        else if (navBlock.Drill(out EmergencyReturn))  
                        {  
                            if (navBlock.PullUpNeeded)  
                                CurrentStatus = Commands.PullUp;  
                            else  
                                CurrentStatus = Commands.PullOut;  
                            navBlock.SaveToStorage();  
                        }  
                        break;  
                    case Commands.PullUp:  
                        if (navBlock.PullUp())  
                        {  
                            CurrentStatus = Commands.Drill;  
                            navBlock.SaveToStorage();  
                        }  
                        break;  
                    case Commands.PullOut:  
                        if (navBlock.PullOut())  
                        {  
                            if (EmergencyReturn || GoHome)  
                                CurrentStatus = Commands.ToBase;  
                            else  
                            {  
                                navBlock.SetNewShaft();  
                                if (navBlock.ShaftN &gt;= ParentProgram.MaxShafts)  
                                    CurrentStatus = Commands.ToBase;  
                                else  
                                    CurrentStatus = Commands.DrillAlign;  
                            }  
                            navBlock.SaveToStorage();  
                        }  
                        break;  
                    case Commands.ToBase:  
                        if (navBlock.ToBase())  
                        {  
                            CurrentStatus = Commands.Dock;  
                            navBlock.SaveToStorage();  
                        }  
                        break;  
                    case Commands.Dock:  
                        if (navBlock.Dock())  
                        {  
                            CurrentStatus = Commands.Docked;  
                            //navBlock.SaveToStorage();            
                        }  
                        break;  
                    case Commands.Docked:  
                        if (connectorBlock.Locked)  
                        {  
                            CurrentStatus = Commands.BaseOperations;  
                            navBlock.SaveToStorage();  
                        }  
                        break;  
                    case Commands.BaseOperations:  
                        if (navBlock.UnloadAndRecharge())  
                        {  
                            if ((navBlock.ShaftN &gt;= ParentProgram.MaxShafts) || StayHome)  
                            {  
                                CurrentStatus = Commands.Complete;  
                                batteryBlock.Recharge(false);  
                                thrustBlock.Turn("On");  
                                thrustBlock.SetOverridePercent("U", 0);  
                                thrustBlock.SetOverridePercent("R", 0);  
                                thrustBlock.SetOverridePercent("L", 0);  
                                thrustBlock.SetOverridePercent("F", 0);  
                                thrustBlock.SetOverridePercent("B", 0);  
                            }  
                            else  
                                CurrentStatus = Commands.UnDock;  
                            if (GoHome) GoHome = false;  
                            navBlock.SaveToStorage();  
                        }  
                        break;  
                    default:  
                        break;  
                }  
        }  
        private void SequencerRockDrill()  
        {  
            if (Command == Commands.StartRockDrill)  
            {  
  
                navBlock.StartRockScavenging();  
                CurrentStatus = Commands.ToDrillPoint;  
                Command = Commands.RockDrill;  
                GoHome = false; StayHome = false;  
            }  
            else  
                switch (CurrentStatus)  
                {  
                    case Commands.UnDock:  
                        if (navBlock.UnDock())  
                        {  
                            CurrentStatus = Commands.ToDrillPoint;  
                            navBlock.SaveToStorage();  
                        }  
                        break;  
                    case Commands.ToDrillPoint:  
                        if (GoHome)  
                        {  
                            CurrentStatus = Commands.ToBase;  
                            navBlock.SaveToStorage();  
                        }  
                        else if (navBlock.ToDrillPoint())  
                        {  
                            CurrentStatus = Commands.DrillAlign;  
                            navBlock.SaveToStorage();  
                        }  
                        break;  
                    case Commands.DrillAlign:  
                        if (GoHome)  
                        {  
                            CurrentStatus = Commands.ToBase;  
                            navBlock.SaveToStorage();  
                        }  
                        else if (navBlock.DrillAlign(out EmergencyReturn))  
                        {  
                            CurrentStatus = Commands.Drill;  
                            navBlock.SaveToStorage();  
                        }  
                        break;  
                    case Commands.Drill:  
                        if (GoHome)  
                        {  
                            CurrentStatus = Commands.PullOut;  
                            navBlock.SaveToStorage();  
                        }  
                        else if (navBlock.Drill(out EmergencyReturn))  
                        {  
                            if (navBlock.PullUpNeeded)  
                                CurrentStatus = Commands.PullUp;  
                            else  
                                CurrentStatus = Commands.PullOut;  
                            navBlock.SaveToStorage();  
                        }  
                        break;  
                    case Commands.PullUp:  
                        if (navBlock.PullUp())  
                        {  
                            CurrentStatus = Commands.Drill;  
                            navBlock.SaveToStorage();  
                        }  
                        break;  
                    case Commands.PullOut:  
                        if (navBlock.PullOut())  
                        {  
                            if (EmergencyReturn || GoHome)  
                                CurrentStatus = Commands.ToBase;  
                            else  
                            {  
                                if (navBlock.ShaftN &gt;= 3)  
                                {  
                                    navBlock.SetNewRock();  
                                    if (navBlock.RockN &gt;= navBlock.MaxRocks)  
                                        CurrentStatus = Commands.ToBase;  
                                    else  
                                    {  
                                        CurrentStatus = Commands.ToDrillPoint;  
                                    }  
                                }  
                                else  
                                {  
                                    navBlock.SetNewShaftRock();  
                                    CurrentStatus = Commands.DrillAlign;  
                                }  
                            }  
                            navBlock.SaveToStorage();  
  
                        }  
                        break;  
                    case Commands.ToBase:  
                        if (navBlock.ToBase())  
                        {  
                            CurrentStatus = Commands.Dock;  
                            navBlock.SaveToStorage();  
                        }  
                        break;  
                    case Commands.Dock:  
                        if (navBlock.Dock())  
                        {  
                            CurrentStatus = Commands.Docked;  
                            //navBlock.SaveToStorage();            
                        }  
                        break;  
                    case Commands.Docked:  
                        if (connectorBlock.Locked)  
                        {  
                            CurrentStatus = Commands.BaseOperations;  
                            navBlock.SaveToStorage();  
                        }  
                        break;  
                    case Commands.BaseOperations:  
                        if (navBlock.UnloadAndRecharge())  
                        {  
                            if ((navBlock.RockN &gt;= navBlock.MaxRocks) || StayHome)  
                            {  
                                CurrentStatus = Commands.Complete;  
                                batteryBlock.Recharge(false);  
                                thrustBlock.Turn("On");  
                                thrustBlock.SetOverridePercent("U", 0);  
                                thrustBlock.SetOverridePercent("R", 0);  
                                thrustBlock.SetOverridePercent("L", 0);  
                                thrustBlock.SetOverridePercent("F", 0);  
                                thrustBlock.SetOverridePercent("B", 0);  
                            }  
                            else  
                                CurrentStatus = Commands.UnDock;  
                            if (GoHome) GoHome = false;  
                            navBlock.SaveToStorage();  
                        }  
                        break;  
                    default:  
                        break;  
                }  
        }  
  
        public void Update()  
        {  
            if (!Paused)  
            {  
                cargoBlock.Update();  
                navBlock.Update();  
                thrustBlock.Update();  
                batteryBlock.Update();  
  
                if (Command == Commands.SaveConnector)  
                {  
                    if (connectorBlock.Connector.Status == MyShipConnectorStatus.Connected)  
                    {  
                        navBlock.SetDockMatrix();  
                        navBlock.SaveToStorage();  
                        Command = Commands.Pause;  
                    }  
                }  
                else if ((Command == Commands.StartDepoDrill) || (Command == Commands.DepoDrill))  
                {  
                    SequencerDepoDrill();  
                }  
                else if ((Command == Commands.StartRockDrill) || (Command == Commands.RockDrill))  
                {  
                    SequencerRockDrill();  
                }  
                else if (Command == Commands.Pause)  
                {  
                    Pause();  
                    navBlock.SaveToStorage();  
                }  
            }  
        }  
  
        private class MyThrusters  
        {  
            private List&lt;IMyTerminalBlock&gt; Thrusts;  
            public float TotalMass { get; private set; }  
            //public float ThrustMultiplier { get;private set;}            
            private MyDriller myDriller;  
            private static string Prefix = "Thr";  
            public float g { get; private set; }  
            private IMyShipController ShipControl;  
  
            private Matrix ControlLocM;  
  
            public float UMaxT { get; private set; }  
            public float DMaxT { get; private set; }  
            public float FMaxT { get; private set; }  
            public float BMaxT { get; private set; }  
            public float RMaxT { get; private set; }  
            public float LMaxT { get; private set; }  
  
            public float XMaxA { get; private set; }  
            public float YMaxA { get; private set; }  
            public float ZMaxA { get; private set; }  
  
  
  
            public MyThrusters(MyDriller mdr)  
            {  
                myDriller = mdr;  
                Thrusts = new List&lt;IMyTerminalBlock&gt;();  
                ShipControl = ParentProgram.GridTerminalSystem.GetBlockWithName(myDriller.MyName + "RemCon") as IMyShipController;  
                ShipControl.Orientation.GetMatrix(out ControlLocM);  
            }  
  
            public void Update()  
            {  
                UMaxT = 0;  
                DMaxT = 0;  
                FMaxT = 0;  
                BMaxT = 0;  
                RMaxT = 0;  
                LMaxT = 0;  
  
                Matrix ThrLocM = new Matrix();  
  
                ParentProgram.GridTerminalSystem.SearchBlocksOfName(myDriller.MyName + Prefix, Thrusts);  
                for (int i = 0; i &lt; Thrusts.Count; i++)  
                {  
                    IMyThrust Thrust = Thrusts[i] as IMyThrust;  
                    if (Thrust != null)  
                    {  
                        Thrust.Orientation.GetMatrix(out ThrLocM);  
                        if (ThrLocM.Forward == ControlLocM.Up)  
                        {  
                            DMaxT += Thrust.MaxEffectiveThrust;  
                        }  
                        else if (ThrLocM.Forward == ControlLocM.Down)  
                        {  
                            UMaxT += Thrust.MaxEffectiveThrust;  
                        }  
                        else if (ThrLocM.Forward == ControlLocM.Forward)  
                        {  
                            BMaxT += Thrust.MaxEffectiveThrust;  
                        }  
                        else if (ThrLocM.Forward == ControlLocM.Backward)  
                        {  
                            FMaxT += Thrust.MaxEffectiveThrust;  
                        }  
                        else if (ThrLocM.Forward == ControlLocM.Right)  
                        {  
                            LMaxT += Thrust.MaxEffectiveThrust;  
                        }  
                        else if (ThrLocM.Forward == ControlLocM.Left)  
                        {  
                            RMaxT += Thrust.MaxEffectiveThrust;  
                        }  
                    }  
                }  
  
                g = (float)myDriller.navBlock.GravVector.Length();  
                TotalMass = ShipControl.CalculateShipMass().PhysicalMass;  
                //myDriller.TextOutput("TP_Rock", TotalMass.ToString());  
                YMaxA = Math.Min(UMaxT / TotalMass - g, DMaxT / TotalMass + g);  
                ZMaxA = Math.Min(FMaxT, BMaxT) / TotalMass;  
                XMaxA = Math.Min(RMaxT, LMaxT) / TotalMass;  
            }  
  
            public void SetOverridePercent(string axis, float OverrideValue)  
            {  
                ParentProgram.GridTerminalSystem.SearchBlocksOfName(myDriller.MyName + Prefix + axis, Thrusts);  
                for (int i = 0; i &lt; Thrusts.Count; i++)  
                {  
                    IMyThrust Thrust = Thrusts[i] as IMyThrust;  
                    if (Thrust != null)  
                    {  
                        Thrust.SetValue("Override", OverrideValue);  
                        // ThrustMultiplier = Thrust.GetValue&lt;float&gt;("ThrustMultiplier");            
                    }  
                }  
            }  
  
            public void SetOverrideN(string axis, float OverrideValue)  
            {  
                float MaxThrust = 0;  
                ParentProgram.GridTerminalSystem.SearchBlocksOfName(myDriller.MyName + Prefix + axis, Thrusts);  
  
                if (axis == "U") MaxThrust = UMaxT;  
                else if (axis == "D") MaxThrust = DMaxT;  
                else if (axis == "F") MaxThrust = FMaxT;  
                else if (axis == "B") MaxThrust = BMaxT;  
                else if (axis == "R") MaxThrust = RMaxT;  
                else if (axis == "L") MaxThrust = LMaxT;  
  
                for (int i = 0; i &lt; Thrusts.Count; i++)  
                {  
                    IMyThrust Thrust = Thrusts[i] as IMyThrust;  
                    if (Thrust != null)  
                    {  
                        //if (axis == "U") myDriller.TextOutput("TP_Rock", OverrideValue.ToString());  
                        if (OverrideValue == 0)  
                        {  
                            Thrust.SetValue("Override", 0);  
                        }  
                        else  
                        {  
                            Thrust.SetValue("Override", Math.Max(OverrideValue * 100 / MaxThrust, 2));  
                        }  
                    }  
                }  
            }  
  
            public void SetOverrideAccel(string axis, float OverrideValue)  
            {  
                switch (axis)  
                {  
  
                    case "U":  
                        OverrideValue += g;  
                        break;  
                    case "L":  
                        if (OverrideValue &lt; 0)  
                        {  
                            axis = "R";  
                            OverrideValue = -OverrideValue;  
                        }  
                        break;  
                    case "R":  
                        if (OverrideValue &lt; 0)  
                        {  
                            axis = "L";  
                            OverrideValue = -OverrideValue;  
                        }  
                        break;  
                    case "F":  
                        if (OverrideValue &lt; 0)  
                        {  
                            axis = "B";  
                            OverrideValue = -OverrideValue;  
                        }  
                        break;  
                    case "B":  
                        if (OverrideValue &lt; 0)  
                        {  
                            axis = "F";  
                            OverrideValue = -OverrideValue;  
                        }  
                        break;  
                }  
                SetOverrideN(axis, OverrideValue * TotalMass);  
                //myDriller.TextOutput("TP_Rock", OverrideValue.ToString());            
            }  
  
            public void Turn(string OnOff)  
            {  
                TurnGroup(myDriller.MyName + "Thr", OnOff);  
            }  
        }  
  
        private class MyGyros  
        {  
            private MyDriller myDriller;  
            private static string Prefix = "Gyro";  
  
            public MyGyros(MyDriller mdr)  
            {  
                myDriller = mdr;  
            }  
  
            public void Turn(string OnOff)  
            {  
                TurnGroup(myDriller.MyName + Prefix, OnOff);  
            }  
            public void SetOverride(bool OverrideOnOff = true, string axis = "", float OverrideValue = 0, float Power = 1)  
            {  
                var Gyros = new List&lt;IMyTerminalBlock&gt;();  
                ParentProgram.GridTerminalSystem.SearchBlocksOfName(myDriller.MyName + Prefix, Gyros);  
                for (int i = 0; i &lt; Gyros.Count; i++)  
                {  
                    IMyGyro Gyro = Gyros[i] as IMyGyro;  
                    if (Gyro != null)  
                    {  
                        if (((!Gyro.GyroOverride) &amp;&amp; OverrideOnOff) || ((Gyro.GyroOverride) &amp;&amp; !OverrideOnOff))  
                            Gyro.ApplyAction("Override");  
  
                        Gyro.SetValue("Power", Power);  
                        if (axis != "")  
                            Gyro.SetValue(axis, OverrideValue);  
                    }  
                }  
            }  
            public void SetOverride(bool OverrideOnOff, Vector3 settings, float Power = 1)  
            {  
                var Gyros = new List&lt;IMyTerminalBlock&gt;();  
                ParentProgram.GridTerminalSystem.SearchBlocksOfName(myDriller.MyName + Prefix, Gyros);  
                for (int i = 0; i &lt; Gyros.Count; i++)  
                {  
                    IMyGyro Gyro = Gyros[i] as IMyGyro;  
                    if (Gyro != null)  
                    {  
                        if ((!Gyro.GyroOverride) &amp;&amp; OverrideOnOff)  
                            Gyro.ApplyAction("Override");  
                        Gyro.SetValue("Power", Power);  
                        Gyro.SetValue("Yaw", settings.GetDim(0));  
                        Gyro.SetValue("Pitch", settings.GetDim(1));  
                        Gyro.SetValue("Roll", settings.GetDim(2));  
                    }  
                }  
            }  
        }  
  
        private class MyNavigation  
        {  
            private MyDriller myDriller;  
            private IMyRemoteControl RemCon;  
            public double AbsHeight { get; private set; }  
            public Vector3D MyPos { get; private set; }  
            public Vector3D MyPrevPos { get; private set; }  
            public Vector3D VelocityVector { get; private set; }  
            public Vector3D UpVelocityVector { get; private set; }  
            public Vector3D ForwVelocityVector { get; private set; }  
            public Vector3D LeftVelocityVector { get; private set; }  
            public Vector3D GravVector { get; private set; }  
            public Vector3D PlanetCenter;  
            public MatrixD DockMatrix { get; private set; }  
            public MatrixD DrillMatrix { get; private set; }  
            private Vector3D ConnectorPoint = new Vector3D(0, 0, 3);  
            private Vector3D DrillPoint = new Vector3D(0, 0, 0);  
            private double FlyHeight;  
            private Vector3D BaseDockPoint;  
            public int ShaftN { get; private set; }  
            public int RockN { get; private set; }  
            public int MaxRocks { get; private set; }  
            public int Status { get; private set; }  
            public bool PullUpNeeded { get; private set; }  
			 
			public int counter = 0; 
  
            public MyNavigation(MyDriller mdr)  
            {  
                List&lt;IMyTerminalBlock&gt; blocks = new List&lt;IMyTerminalBlock&gt;();  
                myDriller = mdr;  
                RemCon = ParentProgram.GridTerminalSystem.GetBlockWithName(myDriller.MyName + "RemCon") as IMyRemoteControl;  
                LoadFromStorage();  
                FindPlanetCenter();  
            }  
            public void Update()  
            {  
                MyPrevPos = MyPos;  
                MyPos = RemCon.GetPosition();  
                GravVector = RemCon.GetNaturalGravity();  
                VelocityVector = (MyPos - MyPrevPos) * 60 / ParentProgram.Clock;  
                UpVelocityVector = RemCon.WorldMatrix.Up * Vector3D.Dot(VelocityVector, RemCon.WorldMatrix.Up);  
                ForwVelocityVector = RemCon.WorldMatrix.Forward * Vector3D.Dot(VelocityVector, RemCon.WorldMatrix.Forward);  
                LeftVelocityVector = RemCon.WorldMatrix.Left * Vector3D.Dot(VelocityVector, RemCon.WorldMatrix.Left);  
                AbsHeight = (MyPos - PlanetCenter).Length();  
            }  
            public double GetVal(string Key, IMyTextPanel ScrObj)  
            {  
                string val = "0";  
                string pattern = @"(" + Key + "):([^:^;]+);";  
                System.Text.RegularExpressions.Match match = System.Text.RegularExpressions.Regex.Match(ScrObj.GetPublicText().Replace("\n", ""), pattern);  
                if (match.Success)  
                {  
                    val = match.Groups[2].Value;  
                }  
                return Convert.ToDouble(val);  
            }  
            public int GetValInt(string Key, IMyTextPanel ScrObj)  
            {  
                string val = "0";  
                string pattern = @"(" + Key + "):([^:^;]+);";  
                System.Text.RegularExpressions.Match match = System.Text.RegularExpressions.Regex.Match(ScrObj.GetPublicText().Replace("\n", ""), pattern);  
                if (match.Success)  
                {  
                    val = match.Groups[2].Value;  
                }  
                return Convert.ToInt32(val);  
            }  
            public Vector3D GetRockByNum(int Key, IMyTextPanel ScrObj)  
            {  
                string pattern = @"\n(" + Key.ToString() + ");([^;^;]+);([^;^;]+);([^;^;]+);";  
                Vector3D RockPos = new Vector3D(0, 0, 0);  
                System.Text.RegularExpressions.Match match = System.Text.RegularExpressions.Regex.Match(ScrObj.GetPublicText(), pattern);  
                if (match.Success)  
                {  
                    RockPos = new Vector3D(Convert.ToDouble(match.Groups[2].Value), Convert.ToDouble(match.Groups[3].Value), Convert.ToDouble(match.Groups[4].Value));  
                }  
                return RockPos;  
            }  
            public void FindPlanetCenter()  
            {  
                if ((RemCon as IMyShipController).TryGetPlanetPosition(out PlanetCenter))  
                {  
                    myDriller.TextOutput("TP_Status", "Calibration: \n Planet Center: \n X: " + PlanetCenter.GetDim(0).ToString() + "\n Y: " + PlanetCenter.GetDim(1).ToString() + "\n Z: " + PlanetCenter.GetDim(2).ToString() + "\n");  
                    SaveToStorage();  
                } 
				else 
				{ 
					myDriller.TextOutput("TP_Status", "Paolo: No planet center!\n"); 
				} 
            }  
            public void SetFlyHeight()  
            {  
                FlyHeight = (RemCon.GetPosition() - PlanetCenter).Length();  
                BaseDockPoint = new Vector3D(0, 0, -200);  
                SaveToStorage();  
            }  
            public void DisplayHeight()  
            {  
                myDriller.TextOutput("TP_Status", "Calibration: \n Planet Center: \n X: " + PlanetCenter.GetDim(0).ToString() + "\n Y: " + PlanetCenter.GetDim(1).ToString() + "\n Z: " + PlanetCenter.GetDim(2).ToString() + "\n" + Math.Round((RemCon.GetPosition() - PlanetCenter).Length(), 2).ToString() + "\n");  
            }  
            public void LoadFromStorage()  
            {  
                IMyTextPanel ScrObj = ParentProgram.GridTerminalSystem.GetBlockWithName(myDriller.MyName + "TP_Mem") as IMyTextPanel;  
                myDriller.CurrentStatus = GetValInt("Status", ScrObj);  
                myDriller.Command = GetValInt("Command", ScrObj);  
                FlyHeight = GetVal("FlyHeight", ScrObj);  
                ShaftN = GetValInt("ShaftN", ScrObj);  
                RockN = GetValInt("RockN", ScrObj);  
                MaxRocks = GetValInt("MaxRocks", ScrObj);  
                myDriller.Paused = GetValInt("Paused", ScrObj) == 1;  
                myDriller.GoHome = GetValInt("GoHome", ScrObj) == 1;  
                myDriller.StayHome = GetValInt("StayHome", ScrObj) == 1;  
                myDriller.EmergencyReturn = GetValInt("EmergencyReturn", ScrObj) == 1;  
                if (myDriller.Command == Commands.DepoDrill)  
                    DrillPoint = GetSpiralXY(ShaftN, ParentProgram.DrillFrameWidth, ParentProgram.DrillFrameLength);  
                else if (myDriller.Command == Commands.RockDrill)  
                {  
                    DrillPoint = GetSpiralXY(ShaftN, ParentProgram.DrillFrameWidth, ParentProgram.DrillFrameLength) + new Vector3D(ParentProgram.DrillFrameWidth / 2, 12, -ParentProgram.DrillFrameLength / 2);  
                }  
                DockMatrix = new MatrixD(GetVal("MC11", ScrObj), GetVal("MC12", ScrObj), GetVal("MC13", ScrObj), GetVal("MC14", ScrObj),  
                GetVal("MC21", ScrObj), GetVal("MC22", ScrObj), GetVal("MC23", ScrObj), GetVal("MC24", ScrObj),  
                GetVal("MC31", ScrObj), GetVal("MC32", ScrObj), GetVal("MC33", ScrObj), GetVal("MC34", ScrObj),  
                GetVal("MC41", ScrObj), GetVal("MC42", ScrObj), GetVal("MC43", ScrObj), GetVal("MC44", ScrObj));  
                DrillMatrix = new MatrixD(GetVal("MD11", ScrObj), GetVal("MD12", ScrObj), GetVal("MD13", ScrObj), GetVal("MD14", ScrObj),  
                GetVal("MD21", ScrObj), GetVal("MD22", ScrObj), GetVal("MD23", ScrObj), GetVal("MD24", ScrObj),  
                GetVal("MD31", ScrObj), GetVal("MD32", ScrObj), GetVal("MD33", ScrObj), GetVal("MD34", ScrObj),  
                GetVal("MD41", ScrObj), GetVal("MD42", ScrObj), GetVal("MD43", ScrObj), GetVal("MD44", ScrObj));  
                PlanetCenter = new Vector3D(GetVal("PX", ScrObj), GetVal("PY", ScrObj), GetVal("PZ", ScrObj));  
  
                BaseDockPoint = new Vector3D(0, 0, -200);  
            }  
            public void SaveToStorage()  
            {  
                IMyTextPanel ScrObj = ParentProgram.GridTerminalSystem.GetBlockWithName(myDriller.MyName + "TP_Mem") as IMyTextPanel;  
                string NavData = "";  
                NavData += "Command:" + myDriller.Command.ToString() + ";\n";  
                NavData += "Status:" + myDriller.CurrentStatus.ToString() + ";\n";  
                NavData += "Paused:" + (myDriller.Paused ? 1 : 0).ToString() + ";\n";  
                NavData += "FlyHeight:" + Math.Round(FlyHeight, 0).ToString() + ";\n";  
                NavData += "ShaftN:" + ShaftN.ToString() + ";\n";  
                NavData += "RockN:" + RockN.ToString() + ";\n";  
                NavData += "MaxRocks:" + MaxRocks.ToString() + ";\n";  
                NavData += "EmergencyReturn:" + (myDriller.EmergencyReturn ? 1 : 0).ToString() + ";\n";  
                NavData += "GoHome:" + (myDriller.GoHome ? 1 : 0).ToString() + ";\n";  
                NavData += "StayHome:" + (myDriller.StayHome ? 1 : 0).ToString() + ";\n";  
                NavData += DockMatrix.ToString().Replace("}", "").Replace("{", "").Replace(" ", " ").Replace(" ", ";\n").Replace("M", "MC");  
                NavData += DrillMatrix.ToString().Replace("}", "").Replace("{", "").Replace(" ", " ").Replace(" ", ";\n").Replace("M", "MD");  
                NavData += PlanetCenter.ToString().Replace("}", "").Replace("{", "").Replace(" ", " ").Replace(" ", ";\n").Replace("X", "PX").Replace("Y", "PY").Replace("Z", "PZ") + ";\n";  
  
                ScrObj.ShowTextureOnScreen();  
                ScrObj.WritePublicText(NavData);  
                ScrObj.ShowPublicTextOnScreen();  
                ScrObj.GetActionWithName("OnOff_On").Apply(ScrObj);  
            }  
            public MatrixD GetTransMatrixFromMyPos()  
            {  
                MatrixD mRot;  
                Vector3D V3Dcenter = RemCon.GetPosition();  
                Vector3D V3Dfow = RemCon.WorldMatrix.Forward;  
                Vector3D V3Dup = RemCon.WorldMatrix.Up;  
                Vector3D V3Dleft = RemCon.WorldMatrix.Left;  
                mRot = new MatrixD(V3Dleft.GetDim(0), V3Dleft.GetDim(1), V3Dleft.GetDim(2), 0, V3Dup.GetDim(0), V3Dup.GetDim(1), V3Dup.GetDim(2), 0, V3Dfow.GetDim(0), V3Dfow.GetDim(1), V3Dfow.GetDim(2), 0, 0, 0, 0, 1);  
                mRot = MatrixD.Invert(mRot);  
                return new MatrixD(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, -V3Dcenter.GetDim(0), -V3Dcenter.GetDim(1), -V3Dcenter.GetDim(2), 1) * mRot;  
            }  
            public MatrixD GetNormTransMatrixFromMyPos()  
            {  
                MatrixD mRot;  
                Vector3D V3Dcenter = RemCon.GetPosition();  
                Vector3D V3Dup = -Vector3D.Normalize(RemCon.GetNaturalGravity());  
                Vector3D V3Dleft = Vector3D.Normalize(Vector3D.Reject(RemCon.WorldMatrix.Left, V3Dup));  
                Vector3D V3Dfow = Vector3D.Normalize(Vector3D.Cross(V3Dleft, V3Dup));  
  
                mRot = new MatrixD(V3Dleft.GetDim(0), V3Dleft.GetDim(1), V3Dleft.GetDim(2), 0, V3Dup.GetDim(0), V3Dup.GetDim(1), V3Dup.GetDim(2), 0, V3Dfow.GetDim(0), V3Dfow.GetDim(1), V3Dfow.GetDim(2), 0, 0, 0, 0, 1);  
                mRot = MatrixD.Invert(mRot);  
                return new MatrixD(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, -V3Dcenter.GetDim(0), -V3Dcenter.GetDim(1), -V3Dcenter.GetDim(2), 1) * mRot;  
            }  
            public MatrixD GetNormTransMatrixFromPoint(Vector3D Point)  
            {  
                MatrixD mRot;  
                Vector3D V3Dcenter = Point;  
                Vector3D V3Dup = Vector3D.Normalize(V3Dcenter - PlanetCenter);  
                Vector3D V3Dleft = Vector3D.Normalize(Vector3D.CalculatePerpendicularVector(V3Dup));  
                Vector3D V3Dfow = Vector3D.Normalize(Vector3D.Cross(V3Dleft, V3Dup));  
  
                mRot = new MatrixD(V3Dleft.GetDim(0), V3Dleft.GetDim(1), V3Dleft.GetDim(2), 0, V3Dup.GetDim(0), V3Dup.GetDim(1), V3Dup.GetDim(2), 0, V3Dfow.GetDim(0), V3Dfow.GetDim(1), V3Dfow.GetDim(2), 0, 0, 0, 0, 1);  
                mRot = MatrixD.Invert(mRot);  
                return new MatrixD(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, -V3Dcenter.GetDim(0), -V3Dcenter.GetDim(1), -V3Dcenter.GetDim(2), 1) * mRot;  
            }  
            public int SetNewShaft()  
            {  
                ShaftN++;  
                DrillPoint = GetSpiralXY(ShaftN, myDriller.drillBlock.Width, myDriller.drillBlock.Length);  
                return ShaftN;  
            }  
            public void SetDockMatrix()  
            {  
                DockMatrix = GetNormTransMatrixFromMyPos();  
            }  
  
            public void SetDrillMatrixDepo()  
            {  
                DrillMatrix = GetNormTransMatrixFromMyPos();  
                ShaftN = 0;  
                DrillPoint = new Vector3D(0, 0, 0);  
            }  
            public void StartRockScavenging()  
            {  
                RockN = 0;  
                ShaftN = 0;  
                IMyTextPanel ScrObj = ParentProgram.GridTerminalSystem.GetBlockWithName(myDriller.MyName + "TP_Rock") as IMyTextPanel;  
                MaxRocks = GetValInt("Rocks found", ScrObj);  
                SetRock(RockN);  
                SaveToStorage();  
            }  
            public void SetNewRock()  
            {  
                RockN++;  
                ShaftN = 0;  
                SetRock(RockN);  
            }  
            public void SetRock(int Num)  
            {  
                IMyTextPanel ScrObj = ParentProgram.GridTerminalSystem.GetBlockWithName(myDriller.MyName + "TP_Rock") as IMyTextPanel;  
                DrillMatrix = GetNormTransMatrixFromPoint(GetRockByNum(Num, ScrObj));  
                DrillPoint = new Vector3D(ParentProgram.DrillFrameWidth / 2, 14, -ParentProgram.DrillFrameLength / 2);  
            }  
            public int SetNewShaftRock()  
            {  
                ShaftN++;  
                DrillPoint = GetSpiralXY(ShaftN, myDriller.drillBlock.Width, myDriller.drillBlock.Length);  
                DrillPoint += new Vector3D(ParentProgram.DrillFrameWidth / 2, 14, -ParentProgram.DrillFrameLength / 2);  
                return ShaftN;  
            }  
            public Vector3D GetNavAngles(Vector3D Target, MatrixD InvMatrix, double sfiftX = 0, double shiftZ = 0)  
            {  
                Vector3D V3Dcenter = RemCon.GetPosition();  
                Vector3D V3Dfow = RemCon.WorldMatrix.Forward + V3Dcenter;  
                Vector3D V3Dup = RemCon.WorldMatrix.Up + V3Dcenter;  
                Vector3D V3Dleft = RemCon.WorldMatrix.Left + V3Dcenter;  
                Vector3D GravNorm = Vector3D.Normalize(GravVector) + V3Dcenter;  
  
                V3Dcenter = Vector3D.Transform(V3Dcenter, InvMatrix);  
                V3Dfow = (Vector3D.Transform(V3Dfow, InvMatrix)) - V3Dcenter;  
                V3Dup = (Vector3D.Transform(V3Dup, InvMatrix)) - V3Dcenter;  
                V3Dleft = (Vector3D.Transform(V3Dleft, InvMatrix)) - V3Dcenter;  
                GravNorm = Vector3D.Normalize((Vector3D.Transform(GravNorm, InvMatrix)) - V3Dcenter - new Vector3D(sfiftX, 0, shiftZ));  
  
                Vector3D TargetNorm = Vector3D.Normalize(Vector3D.Reject(Target - V3Dcenter, GravNorm));  
  
                double TargetPitch = Vector3D.Dot(V3Dfow, Vector3D.Normalize(Vector3D.Reject(-GravNorm, V3Dleft)));  
                TargetPitch = Math.Acos(TargetPitch) - Math.PI / 2;  
  
                double TargetRoll = Vector3D.Dot(V3Dleft, Vector3D.Reject(-GravNorm, V3Dfow));  
                TargetRoll = Math.Acos(TargetRoll) - Math.PI / 2;  
  
                double TargetYaw = Math.Acos(Vector3D.Dot(V3Dfow, TargetNorm));  
                if ((V3Dleft - TargetNorm).Length() &lt; Math.Sqrt(2))  
                    TargetYaw = -TargetYaw;  
  
                if (double.IsNaN(TargetYaw)) TargetYaw = 0;  
                if (double.IsNaN(TargetPitch)) TargetPitch = 0;  
                if (double.IsNaN(TargetRoll)) TargetRoll = 0;  
  
                return new Vector3D(TargetYaw, TargetPitch, TargetRoll);  
            }  
            public bool Dock()  
            {  
                bool Complete = false;  
                float MaxUSpeed, MaxLSpeed, MaxFSpeed;  
                Vector3D MyPosCon = Vector3D.Transform(MyPos, DockMatrix);  
                Vector3D gyrAng = GetNavAngles(ConnectorPoint, DockMatrix);  
                float Distance = (float)((Vector3D.Reject(MyPosCon, Vector3D.Normalize(Vector3D.Transform(PlanetCenter, DockMatrix)))).Length() + ConnectorPoint.Length());  
  
                MaxLSpeed = (float)Math.Sqrt(2 * Math.Abs(MyPosCon.GetDim(0)) * myDriller.thrustBlock.XMaxA) / 2;  
                MaxUSpeed = (float)Math.Sqrt(2 * Math.Abs(MyPosCon.GetDim(1)) * myDriller.thrustBlock.YMaxA) / 2;  
                MaxFSpeed = (float)Math.Sqrt(2 * Distance * myDriller.thrustBlock.ZMaxA) / 2;  
                if (Distance &lt; 15)  
                    MaxFSpeed = MaxFSpeed / 5;  
                if (Math.Abs(MyPosCon.GetDim(1)) &lt; 1)  
                    MaxUSpeed = 0.1f;  
                myDriller.gyroBlock.SetOverride(true, gyrAng * ParentProgram.GyroMult, 1);  
                if (LeftVelocityVector.Length() &lt; MaxLSpeed)  
                    myDriller.thrustBlock.SetOverrideAccel("R", (float)(MyPosCon.GetDim(0) * ParentProgram.AlignAccelMult));  
                else  
                {  
                    myDriller.thrustBlock.SetOverridePercent("R", 0);  
                    myDriller.thrustBlock.SetOverridePercent("L", 0);  
                }  
                float UpAccel = -(float)(MyPosCon.GetDim(1) * ParentProgram.AlignAccelMult);  
                float minUpAccel = 0.3f;  
                if ((UpAccel &lt; 0) &amp;&amp; (UpAccel &gt; -minUpAccel))  
                    UpAccel = -minUpAccel;  
                if ((UpAccel &gt; 0) &amp;&amp; (UpAccel &lt; minUpAccel))  
                    UpAccel = minUpAccel;  
  
                if (UpVelocityVector.Length() &lt; MaxUSpeed)  
                    myDriller.thrustBlock.SetOverrideAccel("U", UpAccel);  
                else  
                {  
                    myDriller.thrustBlock.SetOverridePercent("U", 0);  
                }  
                if (((Distance &gt; 100) || ((Math.Abs(MyPosCon.GetDim(0)) &lt; (Distance / 10 + 0.2f)) &amp;&amp; (Math.Abs(MyPosCon.GetDim(1)) &lt; (Distance / 10 + 0.2f)))) &amp;&amp; (ForwVelocityVector.Length() &lt; MaxFSpeed))  
                {  
                    myDriller.thrustBlock.SetOverrideAccel("F", (float)(Distance * ParentProgram.AlignAccelMult));  
                    myDriller.thrustBlock.SetOverridePercent("B", 0);  
                }  
                else  
                {  
                    myDriller.thrustBlock.SetOverridePercent("F", 0);  
                    myDriller.thrustBlock.SetOverridePercent("B", 0);  
                }  
                if (Distance &lt; 6)  
                {  
                    myDriller.connectorBlock.Turn("On");  
                    if (myDriller.connectorBlock.Connector.Status == MyShipConnectorStatus.Connectable)  
                        Complete = myDriller.connectorBlock.Lock();  
                }  
                string strStatus = " STATUS\n";  
                if (myDriller.Command == Commands.DepoDrill)  
                    strStatus += "Cycle: Ore field mining\n";  
                else if (myDriller.Command == Commands.RockDrill)  
                    strStatus += "Cycle: Rock scavenging\n";  
                strStatus += "Task: Docking \n";  
                strStatus += "Ship Mass: " + myDriller.thrustBlock.TotalMass.ToString() + "\n";  
                strStatus += "Battery charge: " + Math.Round(myDriller.batteryBlock.StoredPower * 100 / myDriller.batteryBlock.MaxPower, 2).ToString() + " % \n";  
                strStatus += "XY shifts: " + Math.Round(MyPosCon.GetDim(0), 2).ToString() + " / " + Math.Round(MyPosCon.GetDim(1), 2).ToString() + "\n";  
                strStatus += "Distance: " + Math.Round(Distance).ToString() + "\n";  
                strStatus += "Connector: " + (Complete ? "Locked" : "Unlocked") + "\n";  
                strStatus += "Shafts drilled: " + ShaftN.ToString() + " / " + ParentProgram.MaxShafts.ToString() + "\n";  
                myDriller.TextOutput("TP_Status", strStatus);  
                //return false;            
                return Complete;  
            }  
            public bool UnloadAndRecharge()  
            {  
                bool Complete = true;  
                if (myDriller.cargoBlock.CurrentMass &gt; 0)  
                {  
                    myDriller.cargoBlock.UnLoad();  
                    Complete = false;  
                }  
                if ((myDriller.batteryBlock.MaxPower - myDriller.batteryBlock.StoredPower) &gt; 0.5f)  
                {  
                    myDriller.batteryBlock.Recharge(true);  
                    Complete = false;  
                }  
                else myDriller.batteryBlock.Recharge(false);  
                if (!Complete)  
                {  
                    if (myDriller.connectorBlock.Locked)  
                    {  
                        myDriller.thrustBlock.Turn("Off");  
                    }  
                }  
                else  
                {  
                    myDriller.thrustBlock.Turn("On");  
                    myDriller.thrustBlock.SetOverridePercent("U", 0);  
                    myDriller.thrustBlock.SetOverridePercent("R", 0);  
                    myDriller.thrustBlock.SetOverridePercent("L", 0);  
                    myDriller.thrustBlock.SetOverridePercent("F", 0);  
                }  
                string strStatus = " STATUS\n";  
                if (myDriller.Command == Commands.DepoDrill)  
                    strStatus += "Cycle: Ore field mining\n";  
                else if (myDriller.Command == Commands.RockDrill)  
                    strStatus += "Cycle: Rock scavenging\n";  
                strStatus += "Task: Unload &amp; Recharge\n";  
                strStatus += "Ship Mass: " + myDriller.thrustBlock.TotalMass.ToString() + "\n";  
                strStatus += "Battery charge: " + Math.Round(myDriller.batteryBlock.StoredPower * 100 / myDriller.batteryBlock.MaxPower, 2).ToString() + " % \n";  
                strStatus += "Shafts drilled: " + ShaftN.ToString() + " / " + ParentProgram.MaxShafts.ToString() + "\n";  
                strStatus += "Connector: " + (myDriller.connectorBlock.Locked ? "Locked" : "Unlocked") + "\n";  
                strStatus += "\n !WARNING \n";  
                strStatus += "Do not disconnect!\n";  
                myDriller.TextOutput("TP_Status", strStatus);  
                //myDriller.TextOutput("TP_Status", Complete.ToString());            
                return Complete;  
            }  
            public bool UnDock()  
            {  
                bool Complete = false;  
                float Distance = 0;  
                if (myDriller.connectorBlock.UnLock())  
                {  
                    Vector3D MyPosCon = Vector3D.Transform(MyPos, DockMatrix);  
                    Vector3D gyrAng = GetNavAngles(ConnectorPoint, DockMatrix);  
                    Distance = (float)((Vector3D.Reject(MyPosCon, Vector3D.Normalize(Vector3D.Transform(PlanetCenter, DockMatrix)))).Length() + ConnectorPoint.Length());  
                    myDriller.gyroBlock.SetOverride(true, gyrAng * ParentProgram.GyroMult, 1);  
                    myDriller.thrustBlock.SetOverridePercent("U", 0);  
                    myDriller.thrustBlock.SetOverridePercent("R", 0);  
                    myDriller.thrustBlock.SetOverridePercent("L", 0);  
                    myDriller.thrustBlock.SetOverridePercent("F", 0);  
                    myDriller.thrustBlock.SetOverrideAccel("B", 3);  
                    if (Distance &gt; 50)  
                    {  
                        Complete = true;  
                    }  
                }  
                string strStatus = " STATUS\n";  
                if (myDriller.Command == Commands.DepoDrill)  
                    strStatus += "Cycle: Ore field mining\n";  
                else if (myDriller.Command == Commands.RockDrill)  
                    strStatus += "Cycle: Rock scavenging\n";  
                strStatus += "Task: Undocking\n";  
                strStatus += "Ship Mass: " + myDriller.thrustBlock.TotalMass.ToString() + "\n";  
                strStatus += "Battery charge: " + Math.Round(myDriller.batteryBlock.StoredPower * 100 / myDriller.batteryBlock.MaxPower, 2).ToString() + " % \n";  
                strStatus += "Connector: " + (myDriller.connectorBlock.Locked ? "Locked" : "Unlocked") + "\n";  
                strStatus += "Shafts drilled: " + ShaftN.ToString() + " / " + ParentProgram.MaxShafts.ToString() + "\n";  
                strStatus += "Distance: " + Math.Round(Distance).ToString() + "\n";  
                myDriller.TextOutput("TP_Status", strStatus);  
                return Complete;  
            }  
            public bool ToBase()  
            {  
                bool Complete = false;  
                float MaxUSpeed, MaxFSpeed;  
                Vector3D gyrAng = GetNavAngles(BaseDockPoint, DockMatrix);  
                Vector3D MyPosCon = Vector3D.Transform(MyPos, DockMatrix);  
                float Distance = (float)(BaseDockPoint - new Vector3D(MyPosCon.GetDim(0), 0, MyPosCon.GetDim(2))).Length();  
  
                MaxUSpeed = (float)Math.Sqrt(2 * Math.Abs(FlyHeight - (MyPos - PlanetCenter).Length()) * myDriller.thrustBlock.YMaxA) / 1.2f;  
                MaxFSpeed = (float)Math.Sqrt(2 * Distance * myDriller.thrustBlock.ZMaxA) / 1.2f;  
                myDriller.gyroBlock.SetOverride(true, gyrAng * ParentProgram.GyroMult, 1);  
                myDriller.thrustBlock.SetOverridePercent("R", 0);  
                myDriller.thrustBlock.SetOverridePercent("L", 0);  
  
                if (UpVelocityVector.Length() &lt; MaxUSpeed)  
                    myDriller.thrustBlock.SetOverrideAccel("U", (float)((FlyHeight - (MyPos - PlanetCenter).Length()) * ParentProgram.AlignAccelMult));  
                else  
                {  
                    myDriller.thrustBlock.SetOverridePercent("U", 0);  
                }  
                // myDriller.TextOutput("TP1", "\n" + MaxFSpeed.ToString() + "\n" + ForwVelocityVector.Length().ToString() + "\n" + Distance.ToString());            
                if (Distance &gt; ParentProgram.TargetSize)  
                {  
                    if (ForwVelocityVector.Length() &lt; MaxFSpeed)  
                    {  
                        myDriller.thrustBlock.SetOverrideAccel("F", (float)(Distance * ParentProgram.AlignAccelMult));  
                        myDriller.thrustBlock.SetOverridePercent("B", 0);  
                    }  
                    else  
                    {  
                        myDriller.thrustBlock.SetOverridePercent("F", 0);  
                        myDriller.thrustBlock.SetOverridePercent("B", 0);  
                    }  
                }  
                else  
                {  
                    Complete = true;  
                }  
                string strStatus = " STATUS\n";  
                if (myDriller.Command == Commands.DepoDrill)  
                    strStatus += "Cycle: Ore field mining\n";  
                else if (myDriller.Command == Commands.RockDrill)  
                    strStatus += "Cycle: Rock scavenging\n";  
                strStatus += "Task: To base\n";  
                strStatus += "Battery charge: " + Math.Round(myDriller.batteryBlock.StoredPower * 100 / myDriller.batteryBlock.MaxPower, 2).ToString() + " % \n";  
                strStatus += "Height: " + Math.Round((MyPos - PlanetCenter).Length()).ToString() + " / " + Math.Round(FlyHeight).ToString() + "\n";  
                strStatus += "Distance: " + Math.Round(Distance).ToString() + "\n";  
                strStatus += "Shafts drilled: " + ShaftN.ToString() + " / " + ParentProgram.MaxShafts.ToString() + "\n";  
                myDriller.TextOutput("TP_Status", strStatus);  
                return Complete;  
            }  
  
            public bool ToDrillPoint()  
            {  
                bool Complete = false;  
                float MaxUSpeed, MaxFSpeed;  
                Vector3D gyrAng = GetNavAngles(new Vector3D(0, 0, 0), DrillMatrix);  
                Vector3D MyPosDrill = Vector3D.Transform(MyPos, DrillMatrix);  
                float Distance = (float)(DrillPoint - new Vector3D(MyPosDrill.GetDim(0), 0, MyPosDrill.GetDim(2))).Length();  
  
                MaxUSpeed = (float)Math.Sqrt(2 * Math.Abs(FlyHeight - (MyPos - PlanetCenter).Length()) * myDriller.thrustBlock.YMaxA) / 1.2f;  
                MaxFSpeed = (float)Math.Sqrt(2 * Distance * myDriller.thrustBlock.ZMaxA) / 1.2f;  
                myDriller.gyroBlock.SetOverride(true, gyrAng * ParentProgram.GyroMult, 1);  
                myDriller.thrustBlock.SetOverridePercent("R", 0);  
                myDriller.thrustBlock.SetOverridePercent("L", 0);  
  
                if (UpVelocityVector.Length() &lt; MaxUSpeed)  
                    myDriller.thrustBlock.SetOverrideAccel("U", (float)((FlyHeight - (MyPos - PlanetCenter).Length()) * ParentProgram.AlignAccelMult));  
                else  
                {  
                    myDriller.thrustBlock.SetOverridePercent("U", 0);  
                }  
                //myDriller.TextOutput("TP1", "\n" + MaxFSpeed.ToString() + "\n" + ForwVelocityVector.Length().ToString() + "\n" + Distance.ToString());            
                if (Distance &gt; ParentProgram.TargetSize)  
                {  
                    if (ForwVelocityVector.Length() &lt; MaxFSpeed)  
                    {  
                        myDriller.thrustBlock.SetOverrideAccel("F", (float)(Distance * ParentProgram.AlignAccelMult));  
                        myDriller.thrustBlock.SetOverridePercent("B", 0);  
                    }  
                    else  
                    {  
                        myDriller.thrustBlock.SetOverridePercent("F", 0);  
                        myDriller.thrustBlock.SetOverridePercent("B", 0);  
                    }  
                }  
                else  
                {  
                    Complete = true;  
                }  
  
                string strStatus = " STATUS\n";  
                if (myDriller.Command == Commands.DepoDrill)  
                    strStatus += "Cycle: Ore field mining\n";  
                else if (myDriller.Command == Commands.RockDrill)  
                    strStatus += "Cycle: Rock scavenging\n";  
  
                strStatus += "Task: To drilling point\n";  
                strStatus += "Battery charge: " + Math.Round(myDriller.batteryBlock.StoredPower * 100 / myDriller.batteryBlock.MaxPower, 2).ToString() + " % \n";  
                strStatus += "Height: " + Math.Round((MyPos - PlanetCenter).Length()).ToString() + " / " + Math.Round(FlyHeight).ToString() + "\n";  
                strStatus += "Distance: " + Math.Round(Distance).ToString() + "\n";  
                strStatus += "Shafts drilled: " + ShaftN.ToString() + " / " + ParentProgram.MaxShafts.ToString() + "\n";  
                myDriller.TextOutput("TP_Status", strStatus);  
                return Complete;  
            }  
  
            public bool DrillAlign(out bool Emergency)  
            {  
                bool Complete = false; 
				Emergency = false; 
                float MaxUSpeed, MaxLSpeed, MaxFSpeed;  
                Vector3D MyPosDrill = Vector3D.Transform(MyPos, DrillMatrix) - DrillPoint;  
  
                Vector3D gyrAng = GetNavAngles(MyPosDrill + DrillPoint + new Vector3D(0, 0, 1), DrillMatrix);  
                myDriller.gyroBlock.SetOverride(true, gyrAng * ParentProgram.GyroMult, 1);  
  
                MaxLSpeed = (float)Math.Sqrt(2 * Math.Abs(MyPosDrill.GetDim(0)) * myDriller.thrustBlock.XMaxA) / 2;  
                MaxUSpeed = (float)Math.Sqrt(2 * Math.Abs(MyPosDrill.GetDim(1)) * myDriller.thrustBlock.YMaxA) / 2;  
                MaxFSpeed = (float)Math.Sqrt(2 * Math.Abs(MyPosDrill.GetDim(2)) * myDriller.thrustBlock.ZMaxA) / 2;  
                if (Math.Abs(MyPosDrill.GetDim(1)) &lt; 1)  
                    MaxUSpeed = 0.1f;  
                if (LeftVelocityVector.Length() &lt; MaxLSpeed)  
                    myDriller.thrustBlock.SetOverrideAccel("R", (float)(MyPosDrill.GetDim(0) * ParentProgram.AlignAccelMult));  
                else  
                {  
                    myDriller.thrustBlock.SetOverridePercent("R", 0);  
                    myDriller.thrustBlock.SetOverridePercent("L", 0);  
                }  
                if (ForwVelocityVector.Length() &lt; MaxFSpeed)  
                    myDriller.thrustBlock.SetOverrideAccel("B", (float)(MyPosDrill.GetDim(2) * ParentProgram.AlignAccelMult));  
                else  
                {  
                    myDriller.thrustBlock.SetOverridePercent("F", 0);  
                    myDriller.thrustBlock.SetOverridePercent("B", 0);  
                }  
                if (UpVelocityVector.Length() &lt; MaxUSpeed)  
                {  
                    float UpAccel = -(float)(MyPosDrill.GetDim(1) * ParentProgram.AlignAccelMult);  
                    float minUpAccel = 0.3f;  
                    if ((UpAccel &lt; 0) &amp;&amp; (UpAccel &gt; -minUpAccel))  
                        UpAccel = -minUpAccel;  
                    if ((UpAccel &gt; 0) &amp;&amp; (UpAccel &lt; minUpAccel))  
                        UpAccel = minUpAccel;  
                    myDriller.thrustBlock.SetOverrideAccel("U", UpAccel);  
                }  
                else  
                {  
                    myDriller.thrustBlock.SetOverridePercent("U", 0);  
                }  
                if (MyPosDrill.Length() &lt; 0.5) 
				{				 
                    Complete = true; 
				} 
				else if (myDriller.cargoBlock.CriticalMassReached || myDriller.batteryBlock.LowPower) 
                { 
                    Complete = true; 
                    Emergency = true; 
                } 
				 
				counter ++; 
				 
				if(counter &gt; 2000) 
				{ 
					Complete = true; 
					counter = 0; 
				} 
				if(Complete) 
				{ 
					counter = 0; 
				} 
				 
                //myDriller.TextOutput("TP1", "\n" + ShaftN.ToString() + "\n" + DrillPoint.ToString() + "\n" + MyPosDrill.ToString());            
  
                string strStatus = " STATUS\n";  
                if (myDriller.Command == Commands.DepoDrill)  
                    strStatus += "Cycle: Ore field mining\n";  
                else if (myDriller.Command == Commands.RockDrill)  
                    strStatus += "Cycle: Rock scavenging\n";  
                strStatus += "Task: Alligning \n";  
                strStatus += "Ship Mass: " + myDriller.thrustBlock.TotalMass.ToString() + "\n";  
                strStatus += "Battery charge: " + Math.Round(myDriller.batteryBlock.StoredPower * 100 / myDriller.batteryBlock.MaxPower, 2).ToString() + " % \n";  
                strStatus += "Y shift: " + Math.Round(MyPosDrill.GetDim(1), 2).ToString() + "\n";  
                strStatus += "XZ shifts: " + Math.Round(MyPosDrill.GetDim(0), 2).ToString() + " / " + Math.Round(MyPosDrill.GetDim(2), 2).ToString() + "\n";  
                strStatus += "Shafts drilled: " + ShaftN.ToString() + " / " + ParentProgram.MaxShafts.ToString() + "\n";  
                myDriller.TextOutput("TP_Status", strStatus);  
  
                return Complete;  
            }  
  
            public bool Drill(out bool Emergency)  
            {  
                bool Complete = false;  
                Emergency = false;  
  
                float MaxLSpeed, MaxFSpeed;  
                Vector3D MyPosDrill = Vector3D.Transform(MyPos, DrillMatrix) - DrillPoint;  
  
                double shiftX = MyPosDrill.GetDim(0) / 2;  
                if (shiftX &lt; 0) shiftX = Math.Max(shiftX, -0.1);  
                else shiftX = Math.Min(shiftX, 0.1);  
                double shiftZ = MyPosDrill.GetDim(2) / 2;  
                if (shiftZ &lt; 0) shiftZ = Math.Max(shiftZ, -0.1);  
                else shiftZ = Math.Min(shiftZ, 0.1);  
  
  
  
                Vector3D gyrAng = GetNavAngles(MyPosDrill + DrillPoint + new Vector3D(0, 0, 1), DrillMatrix, shiftX, shiftZ);  
                myDriller.gyroBlock.SetOverride(true, gyrAng * ParentProgram.DrillGyroMult, 1);  
  
  
                MaxLSpeed = (float)Math.Sqrt(2 * Math.Abs(MyPosDrill.GetDim(0)) * myDriller.thrustBlock.XMaxA) / 5;  
                MaxFSpeed = (float)Math.Sqrt(2 * Math.Abs(MyPosDrill.GetDim(2)) * myDriller.thrustBlock.ZMaxA) / 5;  
  
  
  
                if (LeftVelocityVector.Length() &lt; MaxLSpeed)  
                    myDriller.thrustBlock.SetOverrideAccel("R", (float)(MyPosDrill.GetDim(0) * 10));  
                else  
                {  
                    myDriller.thrustBlock.SetOverridePercent("R", 0);  
                    myDriller.thrustBlock.SetOverridePercent("L", 0);  
                }  
                if (ForwVelocityVector.Length() &lt; MaxFSpeed)  
                    myDriller.thrustBlock.SetOverrideAccel("B", (float)(MyPosDrill.GetDim(2) * 10));  
                else  
                {  
                    myDriller.thrustBlock.SetOverridePercent("F", 0);  
                    myDriller.thrustBlock.SetOverridePercent("B", 0);  
                }  
  
  
                if (myDriller.cargoBlock.StoneDumpNeeded &amp;&amp; myDriller.drillBlock.DrillSOn)  
                    myDriller.drillBlock.Turn("Off");  
                else if (!myDriller.cargoBlock.StoneDumpNeeded &amp;&amp; !myDriller.drillBlock.DrillSOn)  
                    myDriller.drillBlock.Turn("On");  
  
                if ((UpVelocityVector.Length() &lt; ParentProgram.DrillSpeedLimit) &amp;&amp; (!myDriller.cargoBlock.StoneDumpNeeded))  
                {  
                    if ((Math.Abs(MyPosDrill.GetDim(0)) &lt; 1) &amp;&amp; (Math.Abs(MyPosDrill.GetDim(2)) &lt; 1))  
                        myDriller.thrustBlock.SetOverrideAccel("U", (-ParentProgram.DrillAccel));  
                    else  
                    {  
                        myDriller.thrustBlock.SetOverrideAccel("U", (ParentProgram.DrillAccel));  
                        PullUpNeeded = true;  
                        Complete = true;  
                    }  
                }  
                else  
                {  
                    myDriller.thrustBlock.SetOverridePercent("U", 0);  
                }  
                if (MyPosDrill.GetDim(1) &lt; ((myDriller.Command == Commands.DepoDrill) ? (-ParentProgram.DrillDepth) : -16))  
                    Complete = true;  
                else if (myDriller.cargoBlock.CriticalMassReached || myDriller.batteryBlock.LowPower)  
                {  
                    Complete = true;  
                    Emergency = true;  
                }  
  
                string strStatus = " STATUS\n";  
                if (myDriller.Command == Commands.DepoDrill)  
                    strStatus += "Cycle: Ore field mining\n";  
                else if (myDriller.Command == Commands.RockDrill)  
                    strStatus += "Cycle: Rock scavenging\n";  
                strStatus += "Task: Drilling\n";  
                strStatus += "Ship Mass: " + myDriller.thrustBlock.TotalMass.ToString() + "\n";  
                strStatus += "Battery charge: " + Math.Round(myDriller.batteryBlock.StoredPower * 100 / myDriller.batteryBlock.MaxPower, 2).ToString() + " % \n";  
                strStatus += "Depth: " + Math.Round(-MyPosDrill.GetDim(1), 2).ToString() + " / " + Math.Round(((myDriller.Command == Commands.DepoDrill) ? (ParentProgram.DrillDepth) : 16), 2).ToString() + "\n";  
                strStatus += "XZ shifts: " + Math.Round(MyPosDrill.GetDim(0), 2).ToString() + " / " + Math.Round(MyPosDrill.GetDim(2), 2).ToString() + "\n";  
                strStatus += "Shafts drilled: " + ShaftN.ToString() + " / " + ParentProgram.MaxShafts.ToString() + "\n";  
                myDriller.TextOutput("TP_Status", strStatus);  
  
                return Complete;  
            }  
  
            public bool PullUp()  
            {  
                bool Complete = false;  
                float MaxLSpeed, MaxFSpeed;  
                Vector3D MyPosDrill = Vector3D.Transform(MyPos, DrillMatrix) - DrillPoint;  
                Vector3D gyrAng = GetNavAngles(MyPosDrill + DrillPoint + new Vector3D(0, 0, 1), DrillMatrix);  
                myDriller.gyroBlock.SetOverride(true, gyrAng * ParentProgram.DrillGyroMult, 1);  
                //myDriller.drillBlock.Turn("Off");            
  
                MaxLSpeed = (float)Math.Sqrt(2 * Math.Abs(MyPosDrill.GetDim(0)) * myDriller.thrustBlock.XMaxA) / 4;  
                MaxFSpeed = (float)Math.Sqrt(2 * Math.Abs(MyPosDrill.GetDim(2)) * myDriller.thrustBlock.ZMaxA) / 4;  
  
  
                if (LeftVelocityVector.Length() &lt; MaxLSpeed)  
                    myDriller.thrustBlock.SetOverrideAccel("R", (float)(MyPosDrill.GetDim(0) * 0.5));  
                else  
                {  
                    myDriller.thrustBlock.SetOverridePercent("R", 0);  
                    myDriller.thrustBlock.SetOverridePercent("L", 0);  
                }  
                if (ForwVelocityVector.Length() &lt; MaxFSpeed)  
                    myDriller.thrustBlock.SetOverrideAccel("B", (float)(MyPosDrill.GetDim(2) * 0.5));  
                else  
                {  
                    myDriller.thrustBlock.SetOverridePercent("F", 0);  
                    myDriller.thrustBlock.SetOverridePercent("B", 0);  
                }  
  
                if (UpVelocityVector.Length() &lt; ParentProgram.DrillSpeedLimit * 5)  
                    myDriller.thrustBlock.SetOverrideAccel("U", (ParentProgram.DrillAccel * 2));  
                else  
                {  
                    myDriller.thrustBlock.SetOverridePercent("U", 0);  
                }  
  
                if ((MyPosDrill.GetDim(1) &gt; 0) || ((MyPosDrill.GetDim(0) &lt; 0.15) &amp;&amp; (MyPosDrill.GetDim(2) &lt; 0.15)))  
                {  
                    Complete = true;  
                    PullUpNeeded = false;  
                }  
                string strStatus = " STATUS\n";  
                if (myDriller.Command == Commands.DepoDrill)  
                    strStatus += "Cycle: Ore field mining\n";  
                else if (myDriller.Command == Commands.RockDrill)  
                    strStatus += "Cycle: Rock scavenging\n";  
                strStatus += "Task: Pull Up\n";  
                strStatus += "Cargo Mass: " + myDriller.cargoBlock.CurrentMass.ToString() + "\n";  
                strStatus += "Battery charge: " + Math.Round(myDriller.batteryBlock.StoredPower * 100 / myDriller.batteryBlock.MaxPower, 2).ToString() + " % \n";  
                strStatus += "Depth: " + Math.Round(-MyPosDrill.GetDim(1), 2).ToString() + " / " + Math.Round(((myDriller.Command == Commands.DepoDrill) ? (ParentProgram.DrillDepth) : 16), 2).ToString() + "\n";  
                strStatus += "XZ shifts: " + Math.Round(MyPosDrill.GetDim(0), 2).ToString() + " / " + Math.Round(MyPosDrill.GetDim(2), 2).ToString() + "\n";  
                strStatus += "Shafts drilled: " + ShaftN.ToString() + " / " + ParentProgram.MaxShafts.ToString() + "\n";  
                myDriller.TextOutput("TP_Status", strStatus);  
  
                return Complete;  
            }  
  
            public bool PullOut()  
            {  
                bool Complete = false;  
                float MaxLSpeed, MaxFSpeed;  
                Vector3D MyPosDrill = Vector3D.Transform(MyPos, DrillMatrix) - DrillPoint;  
                Vector3D gyrAng = GetNavAngles(MyPosDrill + DrillPoint + new Vector3D(0, 0, 1), DrillMatrix);  
                myDriller.gyroBlock.SetOverride(true, gyrAng * ParentProgram.DrillGyroMult, 1);  
                myDriller.drillBlock.Turn("Off");  
  
                MaxLSpeed = (float)Math.Sqrt(2 * Math.Abs(MyPosDrill.GetDim(0)) * myDriller.thrustBlock.XMaxA) / 2;  
                MaxFSpeed = (float)Math.Sqrt(2 * Math.Abs(MyPosDrill.GetDim(2)) * myDriller.thrustBlock.ZMaxA) / 2;  
  
  
                if (LeftVelocityVector.Length() &lt; MaxLSpeed)  
                    myDriller.thrustBlock.SetOverrideAccel("R", (float)(MyPosDrill.GetDim(0) * 1));  
                else  
                {  
                    myDriller.thrustBlock.SetOverridePercent("R", 0);  
                    myDriller.thrustBlock.SetOverridePercent("L", 0);  
                }  
                if (ForwVelocityVector.Length() &lt; MaxFSpeed)  
                    myDriller.thrustBlock.SetOverrideAccel("B", (float)(MyPosDrill.GetDim(2) * 1));  
                else  
                {  
                    myDriller.thrustBlock.SetOverridePercent("F", 0);  
                    myDriller.thrustBlock.SetOverridePercent("B", 0);  
                }  
  
                if ((UpVelocityVector.Length() &lt; ParentProgram.DrillSpeedLimit * 5) &amp;&amp; (MyPosDrill.GetDim(0) &lt; 0.5) &amp;&amp; (MyPosDrill.GetDim(2) &lt; 0.5))  
                    myDriller.thrustBlock.SetOverrideAccel("U", (ParentProgram.DrillAccel * 2));  
                else  
                {  
                    myDriller.thrustBlock.SetOverridePercent("U", 0);  
                }  
                if (MyPosDrill.GetDim(1) &gt; 0)  
                    Complete = true;  
                string strStatus = " STATUS\n";  
                if (myDriller.Command == Commands.DepoDrill)  
                    strStatus += "Cycle: Ore field mining\n";  
                else if (myDriller.Command == Commands.RockDrill)  
                    strStatus += "Cycle: Rock scavenging\n";  
                strStatus += "Task: Pull Out\n";  
                strStatus += "Cargo Mass: " + myDriller.cargoBlock.CurrentMass.ToString() + "\n";  
                strStatus += "Battery charge: " + Math.Round(myDriller.batteryBlock.StoredPower * 100 / myDriller.batteryBlock.MaxPower, 2).ToString() + " % \n";  
                strStatus += "Depth: " + Math.Round(-MyPosDrill.GetDim(1), 2).ToString() + " / " + Math.Round(((myDriller.Command == Commands.DepoDrill) ? (ParentProgram.DrillDepth) : 16), 2).ToString() + "\n";  
                strStatus += "XZ shifts: " + Math.Round(MyPosDrill.GetDim(0), 2).ToString() + " / " + Math.Round(MyPosDrill.GetDim(2), 2).ToString() + "\n";  
                strStatus += "Shafts drilled: " + ShaftN.ToString() + " / " + ParentProgram.MaxShafts.ToString() + "\n";  
                myDriller.TextOutput("TP_Status", strStatus);  
  
                return Complete;  
            }  
  
            private Vector3D GetSpiralXY(int p, float W, float L, int n = 20)  
            {  
                int positionX = 0, positionY = 0, direction = 0, stepsCount = 1, stepPosition = 0, stepChange = 0;  
                int X = 0;  
                int Y = 0;  
                for (int i = 0; i &lt; n * n; i++)  
                {  
                    if (i == p)  
                    {  
                        X = positionX;  
                        Y = positionY;  
                        break;  
                    }  
                    if (stepPosition &lt; stepsCount)  
                    {  
                        stepPosition++;  
                    }  
                    else  
                    {  
                        stepPosition = 1;  
                        if (stepChange == 1)  
                        {  
                            stepsCount++;  
                        }  
                        stepChange = (stepChange + 1) % 2;  
                        direction = (direction + 1) % 4;  
                    }  
                    if (direction == 0) { positionY++; }  
                    else if (direction == 1) { positionX--; }  
                    else if (direction == 2) { positionY--; }  
                    else if (direction == 3) { positionX++; }  
                }  
                return new Vector3D(X * W, 0, Y * L);  
            }  
        }  
        private class MyCargo  
        {  
            public int MaxVolume { get; private set; }  
            public int CriticalMass { get; private set; }  
            public int CurrentVolume { get; private set; }  
            public int CurrentMass { get; private set; }  
            public int CurrentOreMass { get; private set; }  
            public int FeAmount { get; private set; }  
            public int CbAmount { get; private set; }  
            public int NiAmount { get; private set; }  
            public int MgAmount { get; private set; }  
            public int AuAmount { get; private set; }  
            public int AgAmount { get; private set; }  
            public int PtAmount { get; private set; }  
            public int SiAmount { get; private set; }  
            public int UAmount { get; private set; }  
            public int StoneAmount { get; private set; }  
            public int IceAmount { get; private set; }  
            public bool StoneDumpNeeded { get; private set; }  
            public bool CriticalMassReached { get; private set; }  
  
            private MyDriller myDriller;  
            private List&lt;IMyTerminalBlock&gt; CargoGroup = new List&lt;IMyTerminalBlock&gt;();  
  
            public MyCargo(MyDriller mdr)  
            {  
                myDriller = mdr;  
                CriticalMass = (int)(ParentProgram.CriticalMass);  
                List&lt;IMyTerminalBlock&gt; TempGroup = new List&lt;IMyTerminalBlock&gt;();  
                ParentProgram.GridTerminalSystem.GetBlocksOfType&lt;IMyTerminalBlock&gt;(TempGroup);  
                for (int i = 0; i &lt; TempGroup.Count; i++)  
                {  
                    if (TempGroup[i].CustomName.StartsWith(myDriller.MyName))  
                    {  
                        IMyTerminalBlock CargoOwner = TempGroup[i] as IMyTerminalBlock;  
                        if ((CargoOwner != null))  
                            if ((CargoOwner is IMyShipDrill) || (CargoOwner is IMyCargoContainer) || (CargoOwner is IMyShipConnector))  
                            {  
                                MaxVolume += (int)CargoOwner.GetInventory(0).MaxVolume;  
                                CurrentVolume += (int)(CargoOwner.GetInventory(0).CurrentVolume * 1000);  
                                CurrentMass += (int)CargoOwner.GetInventory(0).CurrentMass;  
                                CargoGroup.Add(CargoOwner);  
                            }  
                    }  
                }  
            }  
  
            private void OutputCargoList()  
            {  
                string Output = " CARGO: " + ((int)(myDriller.thrustBlock.TotalMass * 100 / CriticalMass)).ToString() + "%";  
                Output += "\n CurrentMass: " + CurrentMass.ToString();  
                //Output+="\n Cargo Mass: "+Math.Round(CargoMass,1);            
                if (FeAmount &gt; 0) { Output += "\n Fe: " + FeAmount; }  
                if (CbAmount &gt; 0) { Output += "\n Cb: " + CbAmount; }  
                if (NiAmount &gt; 0) { Output += "\n Ni: " + NiAmount; }  
                if (MgAmount &gt; 0) { Output += "\n Mg: " + MgAmount; }  
                if (AuAmount &gt; 0) { Output += "\n Au: " + AuAmount; }  
                if (AgAmount &gt; 0) { Output += "\n Ag: " + AgAmount; }  
                if (PtAmount &gt; 0) { Output += "\n Pt: " + PtAmount; }  
                if (SiAmount &gt; 0) { Output += "\n Si: " + SiAmount; }  
                if (UAmount &gt; 0) { Output += "\n U: " + UAmount; }  
                if (IceAmount &gt; 0) { Output += "\n Ice: " + IceAmount; }  
                if (StoneAmount &gt; 0) { Output += "\n Stone: " + StoneAmount; }  
                Output += "\n Crit Mass:" + CriticalMassReached.ToString();  
                Output += "\n Dump Stone:" + StoneDumpNeeded.ToString();  
                myDriller.TextOutput("TP_Cargo", Output);  
            }  
            public void UnLoad()  
            {  
                var BaseCargo = new List&lt;IMyTerminalBlock&gt;();  
                ParentProgram.GridTerminalSystem.SearchBlocksOfName("BaseCargo", BaseCargo);  
  
                for (int ii = 0; ii &lt; BaseCargo.Count; ii++)  
                {  
                    var Destination = BaseCargo[ii].GetInventory(0);  
                    for (int i = 0; i &lt; CargoGroup.Count; i++)  
                    {  
                        var containerInvOwner = CargoGroup[i];  
                        var containerInv = containerInvOwner.GetInventory(0);  
                        var containerItems = containerInv.GetItems();  
                        for (int j = 0; j &lt; containerItems.Count; j++)  
                        {  
                            containerInv.TransferItemTo(Destination, 0, null, true, null);  
                        }  
                    }  
                }  
                Update();  
            }  
  
            public void Update()  
            {  
                CurrentVolume = 0;  
                CurrentMass = 0;  
                FeAmount = 0;  
                CbAmount = 0;  
                NiAmount = 0;  
                MgAmount = 0;  
                AuAmount = 0;  
                AgAmount = 0;  
                PtAmount = 0;  
                SiAmount = 0;  
                UAmount = 0;  
                StoneAmount = 0;  
                IceAmount = 0;  
                for (int i = 0; i &lt; CargoGroup.Count; i++)  
                {  
                    IMyTerminalBlock CargoOwner = CargoGroup[i];  
                    if (CargoOwner != null)  
                    {  
                        CurrentVolume += (int)CargoOwner.GetInventory(0).CurrentVolume;  
                        CurrentMass += (int)CargoOwner.GetInventory(0).CurrentMass;  
  
                        var crateItems = CargoOwner.GetInventory(0).GetItems();  
  
                        for (int j = crateItems.Count - 1; j &gt;= 0; j--)  
                        {  
                            if (crateItems[j].Content.SubtypeName == "Iron")  
                                FeAmount += (int)crateItems[j].Amount;  
                            else if (crateItems[j].Content.SubtypeName == "Cobalt")  
                                CbAmount += (int)crateItems[j].Amount;  
                            else if (crateItems[j].Content.SubtypeName == "Nickel")  
                                NiAmount += (int)crateItems[j].Amount;  
                            else if (crateItems[j].Content.SubtypeName == "Magnesium")  
                                MgAmount += (int)crateItems[j].Amount;  
                            else if (crateItems[j].Content.SubtypeName == "Gold")  
                                AuAmount += (int)crateItems[j].Amount;  
                            else if (crateItems[j].Content.SubtypeName == "Silver")  
                                AgAmount += (int)crateItems[j].Amount;  
                            else if (crateItems[j].Content.SubtypeName == "Platinum")  
                                PtAmount += (int)crateItems[j].Amount;  
                            else if (crateItems[j].Content.SubtypeName == "Silicon")  
                                SiAmount += (int)crateItems[j].Amount;  
                            else if (crateItems[j].Content.SubtypeName == "Uranium")  
                                UAmount += (int)crateItems[j].Amount;  
                            else if (crateItems[j].Content.SubtypeName == "Stone")  
                                StoneAmount += (int)crateItems[j].Amount;  
                            else if (crateItems[j].Content.SubtypeName == "Ice")  
                                IceAmount += (int)crateItems[j].Amount;  
                        }  
                    }  
                }  
                if (myDriller.thrustBlock.TotalMass &gt; CriticalMass)  
                {  
                    CriticalMassReached = true;  
                }  
                else  
                {  
  
                    CriticalMassReached = false;  
                    if (StoneAmount &gt; ParentProgram.StoneDumpOn)  
                        StoneDumpNeeded = true;  
                    if (StoneAmount &lt; 100)  
                        StoneDumpNeeded = false;  
  
                }  
                OutputCargoList();  
            }  
        }  
  
        private class MyBatteries  
        {  
            public List&lt;IMyTerminalBlock&gt; BatteryGroup = new List&lt;IMyTerminalBlock&gt;();  
            public bool LowPower { get; private set; }  
            public bool IsCharging { get; private set; }  
            public float MaxPower { get; private set; }  
            public float StoredPower { get; private set; }  
            public float InitialPower { get; private set; }  
            public float MinPower { get; private set; }  
  
            private MyDriller myDriller;  
            public MyBatteries(MyDriller mdr)  
            {  
                myDriller = mdr;  
                List&lt;IMyTerminalBlock&gt; TempGroup = new List&lt;IMyTerminalBlock&gt;();  
                BatteryGroup.Clear();  
                ParentProgram.GridTerminalSystem.GetBlocksOfType&lt;IMyBatteryBlock&gt;(TempGroup);  
                MaxPower = 0;  
                MinPower = ParentProgram.ReturnOnCharge;  
                for (int i = 0; i &lt; TempGroup.Count; i++)  
                {  
                    if (TempGroup[i].CustomName.StartsWith(myDriller.MyName))  
                    {  
                        IMyBatteryBlock battery = TempGroup[i] as IMyBatteryBlock;  
                        if (battery != null)  
                        {  
                            BatteryGroup.Add(battery);  
                            MaxPower += battery.MaxStoredPower;  
                        }  
                    }  
                }  
            }  
            public void Recharge(bool bRecharge)  
            {  
                for (int i = 0; i &lt; BatteryGroup.Count; i++)  
                {  
                    IMyBatteryBlock battery = BatteryGroup[i] as IMyBatteryBlock;  
                    if (battery != null)  
                        battery.SetValueBool("Recharge", bRecharge);  
                }  
                IsCharging = bRecharge;  
            }  
            public void Update()  
            {  
                StoredPower = 0;  
                for (int i = 0; i &lt; BatteryGroup.Count; i++)  
                {  
                    IMyBatteryBlock battery = BatteryGroup[i] as IMyBatteryBlock;  
                    if (battery != null)  
                    {  
                        StoredPower += battery.CurrentStoredPower;  
                    }  
                }  
                LowPower = (StoredPower / MaxPower) &lt; MinPower;  
            }  
        }  
        private class MyDrills  
        {  
            public List&lt;IMyTerminalBlock&gt; DrillGroup = new List&lt;IMyTerminalBlock&gt;();  
            public bool DrillSOn { get; private set; }  
            public float Width { get; private set; }  
            public float Length { get; private set; }  
            private MyDriller myDriller;  
            public MyDrills(MyDriller mdr)  
            {  
                myDriller = mdr;  
                DrillGroup.Clear();  
                List&lt;IMyTerminalBlock&gt; TempGroup = new List&lt;IMyTerminalBlock&gt;();  
                ParentProgram.GridTerminalSystem.GetBlocksOfType&lt;IMyShipDrill&gt;(TempGroup);  
                for (int i = 0; i &lt; TempGroup.Count; i++)  
                {  
                    if (TempGroup[i].CustomName.StartsWith(myDriller.MyName))  
                    {  
                        IMyShipDrill drill = TempGroup[i] as IMyShipDrill;  
                        if (drill != null)  
                            DrillGroup.Add(drill);  
                    }  
                }  
                Width = ParentProgram.DrillFrameWidth;  
                Length = ParentProgram.DrillFrameLength;  
  
            }  
            public void Turn(string OnOff)  
            {  
                for (int i = 0; i &lt; DrillGroup.Count; i++)  
                {  
                    IMyShipDrill drill = DrillGroup[i] as IMyShipDrill;  
                    if (drill != null)  
                        drill.GetActionWithName("OnOff_" + OnOff).Apply(drill);  
                    else  
                        ParentProgram.GridTerminalSystem.GetBlocksOfType&lt;IMyShipDrill&gt;(DrillGroup);  
                }  
                if (OnOff == "On")  
                    DrillSOn = true;  
                else  
                    DrillSOn = false;  
            }  
        }  
        public class MyConnector  
        {  
            private MyDriller myDriller;  
            public IMyShipConnector Connector { get; private set; }  
            public bool On { get; private set; }  
            public bool Locked { get; private set; }  
            public bool ReadyToLock { get; private set; }  
  
            public MyConnector(MyDriller mdr)  
            {  
                myDriller = mdr;  
                Connector = ParentProgram.GridTerminalSystem.GetBlockWithName(myDriller.MyName + "Connector") as IMyShipConnector;  
                Locked = (Connector.Status == MyShipConnectorStatus.Connected);  
            }  
  
            public void Update()  
            {  
                if (Connector == null)  
                    Connector = ParentProgram.GridTerminalSystem.GetBlockWithName(myDriller.MyName + "Connector") as IMyShipConnector;  
                else  
                {  
                    Locked = (Connector.Status == MyShipConnectorStatus.Connected);        
                }  
            }  
            public void Turn(string OnOff)  
            {  
                if (Connector != null)  
                {  
                    Connector.GetActionWithName("OnOff_" + OnOff).Apply(Connector);  
                    if (OnOff == "On")  
                        On = true;  
                    else  
                        On = false;  
                }  
                else  
                {  
                    //Connector crashed event!!!            
                }  
            }  
  
            public bool Lock()  
            {  
                Connector.GetActionWithName("OnOff_On").Apply(Connector);  
                Connector.GetActionWithName("Lock").Apply(Connector);  
                Locked = (Connector.Status == MyShipConnectorStatus.Connected);  
                return Locked;  
            }  
  
            public bool UnLock()  
            {  
                Connector.GetActionWithName("Unlock").Apply(Connector);  
                Connector.GetActionWithName("OnOff_Off").Apply(Connector);  
                Locked = (Connector.Status == MyShipConnectorStatus.Connected);  
                return !Locked;  
            }  
        }  
  
    }  
</Program>
              <Storage />
              <TextPanels>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>1</FontSize>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294967295</PackedValue>
                    <X>255</X>
                    <Y>255</Y>
                    <Z>255</Z>
                    <R>255</R>
                    <G>255</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <SelectedScript />
                  <TextPadding>2</TextPadding>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>1</FontSize>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294967295</PackedValue>
                    <X>255</X>
                    <Y>255</Y>
                    <Z>255</Z>
                    <R>255</R>
                    <G>255</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <SelectedScript />
                  <TextPadding>2</TextPadding>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
              </TextPanels>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Beacon">
              <SubtypeName>SmallBlockBeacon</SubtypeName>
              <EntityId>141013105934220338</EntityId>
              <Min x="-1" y="16" z="-22" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="1" z="-1" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>OctopusV1.2Beacon</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <BroadcastRadius>50000</BroadcastRadius>
              <HudText />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ButtonPanel">
              <SubtypeName>ButtonPanelSmall</SubtypeName>
              <EntityId>85633253272114450</EntityId>
              <Min x="1" y="15" z="-21" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>Button Panel 3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>StayHome</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
                <SlotsGamepad />
              </Toolbar>
              <AnyoneCanUse>false</AnyoneCanUse>
              <CustomButtonNames>
                <dictionary>
                  <item>
                    <Key>0</Key>
                    <Value>Octopus1PB_Nav - Run</Value>
                  </item>
                </dictionary>
              </CustomButtonNames>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ButtonPanel">
              <SubtypeName>ButtonPanelSmall</SubtypeName>
              <EntityId>133701580320714361</EntityId>
              <Min x="1" y="15" z="-20" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>Button Panel 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>GoHome</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
                <SlotsGamepad />
              </Toolbar>
              <AnyoneCanUse>false</AnyoneCanUse>
              <CustomButtonNames>
                <dictionary>
                  <item>
                    <Key>0</Key>
                    <Value>Octopus1PB_Nav - Run</Value>
                  </item>
                </dictionary>
              </CustomButtonNames>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ButtonPanel">
              <SubtypeName>ButtonPanelSmall</SubtypeName>
              <EntityId>140821049354882431</EntityId>
              <Min x="1" y="15" z="-19" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>Button Panel</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value>Pause</Value>
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>140757921696918985</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
                <SlotsGamepad />
              </Toolbar>
              <AnyoneCanUse>false</AnyoneCanUse>
              <CustomButtonNames>
                <dictionary>
                  <item>
                    <Key>0</Key>
                    <Value>Scavenger1PB_Nav - Run</Value>
                  </item>
                </dictionary>
              </CustomButtonNames>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_AirVent">
              <SubtypeName>SmallAirVent</SubtypeName>
              <EntityId>105199506889742546</EntityId>
              <Min x="-1" y="15" z="-18" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>Air Vent</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsDepressurizing>true</IsDepressurizing>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorFrameMedium</SubtypeName>
              <EntityId>87160318758733800</EntityId>
              <Min x="-2" y="11" z="-17" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorFrameMedium</SubtypeName>
              <EntityId>89534763650492738</EntityId>
              <Min x="-2" y="11" z="-16" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipConnector">
              <SubtypeName>ConnectorMedium</SubtypeName>
              <EntityId>110490617468386801</EntityId>
              <Min x="-2" y="11" z="-15" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>1.152</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Connector</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <MasterToSlaveTransform xsi:nil="true" />
              <Strength>1.95908415E-05</Strength>
              <MasterToSlaveGrid xsi:nil="true" />
              <IsMaster>true</IsMaster>
              <TradingEnabled>false</TradingEnabled>
              <AutoUnlockTime>0</AutoUnlockTime>
              <TimeOfConnection>0</TimeOfConnection>
              <IsParkingEnabled>true</IsParkingEnabled>
              <IsPowerTransferOverrideEnabled>false</IsPowerTransferOverrideEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="0" y="14" z="-15" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="0" y="15" z="-15" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>120385933424119241</EntityId>
              <Min x="0" y="15" z="-16" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>OctopusV1.2TP_Status</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>1.8</FontSize>
              <PublicDescription>Calibration: 
 Planet Center: 
 X: 0.5
 Y: 0.5
 Z: 0.5
</PublicDescription>
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4278236340</PackedValue>
                <X>180</X>
                <Y>180</Y>
                <Z>0</Z>
                <R>180</R>
                <G>180</G>
                <B>0</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
              <ContentType>TEXT_AND_IMAGE</ContentType>
              <SelectedScript />
              <TextPadding>2</TextPadding>
              <Version>1</Version>
              <ScriptBackgroundColor>
                <PackedValue>4288108544</PackedValue>
                <X>0</X>
                <Y>88</Y>
                <Z>151</Z>
                <R>0</R>
                <G>88</G>
                <B>151</B>
                <A>255</A>
              </ScriptBackgroundColor>
              <ScriptForegroundColor>
                <PackedValue>4294962611</PackedValue>
                <X>179</X>
                <Y>237</Y>
                <Z>255</Z>
                <R>179</R>
                <G>237</G>
                <B>255</B>
                <A>255</A>
              </ScriptForegroundColor>
              <Sprites>
                <Length>0</Length>
              </Sprites>
              <SelectedRotationIndex>0</SelectedRotationIndex>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="1" y="15" z="-15" />
              <ColorMaskHSV x="0.122222222" y="-0.1" z="0.26" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeAtmosphericThrust</SubtypeName>
              <EntityId>127483344312026126</EntityId>
              <Min x="2" y="13" z="-18" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855883</BuiltBy>
              <CustomName>OctopusV1.2ThrB1</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>75156972246008609</EntityId>
              <Min x="1" y="15" z="-16" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>OctopusV1.2TP_Icon</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>false</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <SelectedImages>
                <string>Construction</string>
              </SelectedImages>
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>1</FontSize>
              <PublicDescription />
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4294967295</PackedValue>
                <X>255</X>
                <Y>255</Y>
                <Z>255</Z>
                <R>255</R>
                <G>255</G>
                <B>255</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
              <ContentType>TEXT_AND_IMAGE</ContentType>
              <SelectedScript />
              <TextPadding>2</TextPadding>
              <Version>1</Version>
              <ScriptBackgroundColor>
                <PackedValue>4288108544</PackedValue>
                <X>0</X>
                <Y>88</Y>
                <Z>151</Z>
                <R>0</R>
                <G>88</G>
                <B>151</B>
                <A>255</A>
              </ScriptBackgroundColor>
              <ScriptForegroundColor>
                <PackedValue>4294962611</PackedValue>
                <X>179</X>
                <Y>237</Y>
                <Z>255</Z>
                <R>179</R>
                <G>237</G>
                <B>255</B>
                <A>255</A>
              </ScriptForegroundColor>
              <Sprites>
                <Length>0</Length>
              </Sprites>
              <SelectedRotationIndex>0</SelectedRotationIndex>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="1" y="14" z="-15" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="13" z="-15" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="1" y="16" z="-15" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0.122222222" y="-0.1" z="0.26" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>91960964806089143</EntityId>
              <Min x="1" y="16" z="-16" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.122222222" y="0.05" z="0.46" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyModStorageComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                      <Storage>
                        <dictionary>
                          <item>
                            <Key>74de02b3-27f9-4960-b1c4-27351f2b06d1</Key>
                            <Value>Power</Value>
                          </item>
                        </dictionary>
                      </Storage>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Text panel 7[LCD]</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>1.662</FontSize>
              <PublicDescription> Reactors:          0W / 0W
 [''''''''''''''''''''''''''''''''''']    0.0%
 Batteries: (IN 0W / OUT 5.8 MW)
   Stored: 5.5 MWh / 7.6 MWh
 [|||||||||||||||||||||||||'''''''''']  72.7%
   Output: 5.8 MW / 30.2 MW
 [||||||''''''''''''''''''''''''''''']   19.2%
   Input:      0W / 30.2 MW
 [''''''''''''''''''''''''''''''''''']    0.0%
 Total Output: 5.8 MW / 30.2 MW
 [||||||''''''''''''''''''''''''''''']   19.2%
</PublicDescription>
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4283301724</PackedValue>
                <X>92</X>
                <Y>255</Y>
                <Z>77</Z>
                <R>92</R>
                <G>255</G>
                <B>77</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
              <ContentType>TEXT_AND_IMAGE</ContentType>
              <SelectedScript />
              <TextPadding>2</TextPadding>
              <Version>1</Version>
              <ScriptBackgroundColor>
                <PackedValue>4288108544</PackedValue>
                <X>0</X>
                <Y>88</Y>
                <Z>151</Z>
                <R>0</R>
                <G>88</G>
                <B>151</B>
                <A>255</A>
              </ScriptBackgroundColor>
              <ScriptForegroundColor>
                <PackedValue>4294962611</PackedValue>
                <X>179</X>
                <Y>237</Y>
                <Z>255</Z>
                <R>179</R>
                <G>237</G>
                <B>255</B>
                <A>255</A>
              </ScriptForegroundColor>
              <Sprites>
                <Length>0</Length>
              </Sprites>
              <SelectedRotationIndex>0</SelectedRotationIndex>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="2" y="16" z="-15" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0.122222222" y="0.05" z="0.46" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>89065252612677961</EntityId>
              <Min x="2" y="16" z="-16" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.122222222" y="0.05" z="0.46" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyModStorageComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                      <Storage>
                        <dictionary>
                          <item>
                            <Key>74de02b3-27f9-4960-b1c4-27351f2b06d1</Key>
                            <Value>Echo 1 - Pause
Echo 2 - dock camera
Echo 3 - down camera
Echo
Echo 5 - SaveConnector
Echo 6 - StartDepoDrill
Echo 7 - GoHome ??
//Echo 8 - StayHome
Echo
Echo 9 - set flight height / stop cycle</Value>
                          </item>
                        </dictionary>
                      </Storage>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Text panel 9[LCD] instrukcja</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>1.7</FontSize>
              <PublicDescription> 1 - Pause
 2 - dock camera
 3 - down camera
 
 5 - SaveConnector
 6 - StartDepoDrill
 7 - GoHome ??
 
 9 - set flight height / stop cycle
</PublicDescription>
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4294967295</PackedValue>
                <X>255</X>
                <Y>255</Y>
                <Z>255</Z>
                <R>255</R>
                <G>255</G>
                <B>255</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
              <ContentType>TEXT_AND_IMAGE</ContentType>
              <SelectedScript />
              <TextPadding>2</TextPadding>
              <Version>1</Version>
              <ScriptBackgroundColor>
                <PackedValue>4288108544</PackedValue>
                <X>0</X>
                <Y>88</Y>
                <Z>151</Z>
                <R>0</R>
                <G>88</G>
                <B>151</B>
                <A>255</A>
              </ScriptBackgroundColor>
              <ScriptForegroundColor>
                <PackedValue>4294962611</PackedValue>
                <X>179</X>
                <Y>237</Y>
                <Z>255</Z>
                <R>179</R>
                <G>237</G>
                <B>255</B>
                <A>255</A>
              </ScriptForegroundColor>
              <Sprites>
                <Length>0</Length>
              </Sprites>
              <SelectedRotationIndex>0</SelectedRotationIndex>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="3" y="16" z="-16" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0.122222222" y="0.05" z="0.46" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>123882724049447715</EntityId>
              <Min x="3" y="16" z="-17" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.122222222" y="0.05" z="0.46" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>OctopusV1.2TPPaolo</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>2.12</FontSize>
              <PublicDescription>Damaged: False
 Counter: 0
</PublicDescription>
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4281255644</PackedValue>
                <X>220</X>
                <Y>198</Y>
                <Z>46</Z>
                <R>220</R>
                <G>198</G>
                <B>46</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
              <ContentType>TEXT_AND_IMAGE</ContentType>
              <SelectedScript />
              <TextPadding>2</TextPadding>
              <Version>1</Version>
              <ScriptBackgroundColor>
                <PackedValue>4288108544</PackedValue>
                <X>0</X>
                <Y>88</Y>
                <Z>151</Z>
                <R>0</R>
                <G>88</G>
                <B>151</B>
                <A>255</A>
              </ScriptBackgroundColor>
              <ScriptForegroundColor>
                <PackedValue>4294962611</PackedValue>
                <X>179</X>
                <Y>237</Y>
                <Z>255</Z>
                <R>179</R>
                <G>237</G>
                <B>255</B>
                <A>255</A>
              </ScriptForegroundColor>
              <Sprites>
                <Length>0</Length>
              </Sprites>
              <SelectedRotationIndex>0</SelectedRotationIndex>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="0" y="14" z="-16" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-1" y="15" z="-15" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-1" y="14" z="-16" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>106598824449323883</EntityId>
              <Min x="-1" y="15" z="-16" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>OctopusV1.2TP_Cargo</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>1.8</FontSize>
              <PublicDescription> CARGO: 220%
 CurrentMass: 0
 Crit Mass:True
 Dump Stone:False</PublicDescription>
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4278241280</PackedValue>
                <X>0</X>
                <Y>200</Y>
                <Z>0</Z>
                <R>0</R>
                <G>200</G>
                <B>0</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
              <ContentType>TEXT_AND_IMAGE</ContentType>
              <SelectedScript />
              <TextPadding>2</TextPadding>
              <Version>1</Version>
              <ScriptBackgroundColor>
                <PackedValue>4288108544</PackedValue>
                <X>0</X>
                <Y>88</Y>
                <Z>151</Z>
                <R>0</R>
                <G>88</G>
                <B>151</B>
                <A>255</A>
              </ScriptBackgroundColor>
              <ScriptForegroundColor>
                <PackedValue>4294962611</PackedValue>
                <X>179</X>
                <Y>237</Y>
                <Z>255</Z>
                <R>179</R>
                <G>237</G>
                <B>255</B>
                <A>255</A>
              </ScriptForegroundColor>
              <Sprites>
                <Length>0</Length>
              </Sprites>
              <SelectedRotationIndex>0</SelectedRotationIndex>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CameraBlock">
              <SubtypeName>SmallCameraBlock</SubtypeName>
              <EntityId>125852581095535208</EntityId>
              <Min x="-1" y="14" z="-15" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>OctopusV1.2Camera1</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsActive>false</IsActive>
              <Fov>1.04719758</Fov>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-2" y="15" z="-15" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-2" y="14" z="-15" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-3" y="14" z="-15" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HalfArmorBlock</SubtypeName>
              <Min x="-3" y="15" z="-15" />
              <ColorMaskHSV x="0.122222222" y="0.05" z="0.46" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-2" y="14" z="-16" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeAtmosphericThrust</SubtypeName>
              <EntityId>133807358842674811</EntityId>
              <Min x="-6" y="13" z="-18" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855883</BuiltBy>
              <CustomName>OctopusV1.2ThrB2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-3" y="13" z="-15" />
              <ColorMaskHSV x="0.122222222" y="0.05" z="0.46" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>142899850361084685</EntityId>
              <Min x="-3" y="15" z="-16" />
              <IntegrityPercent>0.649532735</IntegrityPercent>
              <BuildPercent>0.649532735</BuildPercent>
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>OctopusV1.2TP_Mem</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>1.7</FontSize>
              <PublicDescription>Command:6;
Status:28;
Paused:1;
FlyHeight:61133;
ShaftN:0;
RockN:0;
MaxRocks:0;
EmergencyReturn:1;
GoHome:0;
StayHome:0;
;
MC11:0.051002738766801;
MC12:0.86859154563485;
MC13:-0.492896994807179;
MC14:0;
MC21:-0.33629503378489;
MC22:-0.449779758381984;
MC23:-0.827407891672217;
MC24:0;
MC31:-0.940374590729623;
MC32:0.207958880073699;
MC33:0.26916302366519;
MC34:0;
MC41:0.613143064814722;
MC42:-60885.5566579663;
MC43:0.523157264831752;
MC44:1;
;
MD11:0.0318310020543834;
MD12:0.878444993252513;
MD13:0.476782110756901;
MD14:0;
MD21:0.469092511723665;
MD22:-0.434352827383013;
MD23:0.768953728639874;
MD24:0;
MD31:0.88257521081945;
MD32:0.199178350163804;
MD33:-0.425897854036656;
MD34:0;
MD41:-0.692356003150053;
MD42:-61032.1280306042;
MD43:-0.410261736809844;
MD44:1;
PX:0.5;
PY:0.5;
PZ:0.5;
</PublicDescription>
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4294967295</PackedValue>
                <X>255</X>
                <Y>255</Y>
                <Z>255</Z>
                <R>255</R>
                <G>255</G>
                <B>255</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
              <ContentType>TEXT_AND_IMAGE</ContentType>
              <SelectedScript />
              <TextPadding>2</TextPadding>
              <Version>1</Version>
              <ScriptBackgroundColor>
                <PackedValue>4288108544</PackedValue>
                <X>0</X>
                <Y>88</Y>
                <Z>151</Z>
                <R>0</R>
                <G>88</G>
                <B>151</B>
                <A>255</A>
              </ScriptBackgroundColor>
              <ScriptForegroundColor>
                <PackedValue>4294962611</PackedValue>
                <X>179</X>
                <Y>237</Y>
                <Z>255</Z>
                <R>179</R>
                <G>237</G>
                <B>255</B>
                <A>255</A>
              </ScriptForegroundColor>
              <Sprites>
                <Length>0</Length>
              </Sprites>
              <SelectedRotationIndex>0</SelectedRotationIndex>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-3" y="16" z="-15" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0.122222222" y="0.05" z="0.46" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>92084498924231407</EntityId>
              <Min x="-3" y="16" z="-16" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.122222222" y="0.05" z="0.46" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyModStorageComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                      <Storage>
                        <dictionary>
                          <item>
                            <Key>74de02b3-27f9-4960-b1c4-27351f2b06d1</Key>
                            <Value>Damage</Value>
                          </item>
                        </dictionary>
                      </Storage>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Text panel 6 [LCD]</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>1.7</FontSize>
              <PublicDescription> No damaged blocks found.
</PublicDescription>
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4280823551</PackedValue>
                <X>255</X>
                <Y>46</Y>
                <Z>40</Z>
                <R>255</R>
                <G>46</G>
                <B>40</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
              <ContentType>TEXT_AND_IMAGE</ContentType>
              <SelectedScript />
              <TextPadding>2</TextPadding>
              <Version>1</Version>
              <ScriptBackgroundColor>
                <PackedValue>4288108544</PackedValue>
                <X>0</X>
                <Y>88</Y>
                <Z>151</Z>
                <R>0</R>
                <G>88</G>
                <B>151</B>
                <A>255</A>
              </ScriptBackgroundColor>
              <ScriptForegroundColor>
                <PackedValue>4294962611</PackedValue>
                <X>179</X>
                <Y>237</Y>
                <Z>255</Z>
                <R>179</R>
                <G>237</G>
                <B>255</B>
                <A>255</A>
              </ScriptForegroundColor>
              <Sprites>
                <Length>0</Length>
              </Sprites>
              <SelectedRotationIndex>0</SelectedRotationIndex>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-4" y="16" z="-15" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0.122222222" y="0.05" z="0.46" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-5" y="16" z="-16" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0.122222222" y="0.05" z="0.46" />
              <BuiltBy>144115188075855883</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>77142839593059204</EntityId>
              <Min x="-4" y="16" z="-16" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.122222222" y="0.05" z="0.46" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyModStorageComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                      <Storage>
                        <dictionary>
                          <item>
                            <Key>74de02b3-27f9-4960-b1c4-27351f2b06d1</Key>
                            <Value>Altitude
Speed
Accel
StopDistance
StopTime</Value>
                          </item>
                        </dictionary>
                      </Storage>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Text panel 8 [LCD]</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>1.891</FontSize>
              <PublicDescription> Ground:               49 m
 Speed:          0.0 m/s 
 Acceleration: 0.0 m/s²
 Stop Distance:      0m 
 Stop Time:              0s
</PublicDescription>
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4294967295</PackedValue>
                <X>255</X>
                <Y>255</Y>
                <Z>255</Z>
                <R>255</R>
                <G>255</G>
                <B>255</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
              <ContentType>TEXT_AND_IMAGE</ContentType>
              <SelectedScript />
              <TextPadding>2</TextPadding>
              <Version>1</Version>
              <ScriptBackgroundColor>
                <PackedValue>4288108544</PackedValue>
                <X>0</X>
                <Y>88</Y>
                <Z>151</Z>
                <R>0</R>
                <G>88</G>
                <B>151</B>
                <A>255</A>
              </ScriptBackgroundColor>
              <ScriptForegroundColor>
                <PackedValue>4294962611</PackedValue>
                <X>179</X>
                <Y>237</Y>
                <Z>255</Z>
                <R>179</R>
                <G>237</G>
                <B>255</B>
                <A>255</A>
              </ScriptForegroundColor>
              <Sprites>
                <Length>0</Length>
              </Sprites>
              <SelectedRotationIndex>0</SelectedRotationIndex>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>74996028574779688</EntityId>
              <Min x="-5" y="16" z="-17" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.122222222" y="0.05" z="0.46" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyModStorageComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                      <Storage>
                        <dictionary>
                          <item>
                            <Key>74de02b3-27f9-4960-b1c4-27351f2b06d1</Key>
                            <Value>CargoAll
InventoryX
</Value>
                          </item>
                        </dictionary>
                      </Storage>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Text panel 11[LCD]</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>1.471</FontSize>
              <PublicDescription> Cargo Used:      0L / 519.7 kL
 ['''''''''''''''''''''''''''''''''''''''''''] 0.0%
</PublicDescription>
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4281254412</PackedValue>
                <X>12</X>
                <Y>194</Y>
                <Z>46</Z>
                <R>12</R>
                <G>194</G>
                <B>46</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
              <ContentType>TEXT_AND_IMAGE</ContentType>
              <SelectedScript />
              <TextPadding>2</TextPadding>
              <Version>1</Version>
              <ScriptBackgroundColor>
                <PackedValue>4288108544</PackedValue>
                <X>0</X>
                <Y>88</Y>
                <Z>151</Z>
                <R>0</R>
                <G>88</G>
                <B>151</B>
                <A>255</A>
              </ScriptBackgroundColor>
              <ScriptForegroundColor>
                <PackedValue>4294962611</PackedValue>
                <X>179</X>
                <Y>237</Y>
                <Z>255</Z>
                <R>179</R>
                <G>237</G>
                <B>255</B>
                <A>255</A>
              </ScriptForegroundColor>
              <Sprites>
                <Length>0</Length>
              </Sprites>
              <SelectedRotationIndex>0</SelectedRotationIndex>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeAtmosphericThrust</SubtypeName>
              <EntityId>125862717364283757</EntityId>
              <Min x="2" y="13" z="-26" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855883</BuiltBy>
              <CustomName>OctopusV1.2ThrF2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeAtmosphericThrust</SubtypeName>
              <EntityId>128152838468393744</EntityId>
              <Min x="1" y="5" z="-21" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="1" z="-1" />
              <BuiltBy>144115188075855883</BuiltBy>
              <CustomName>OctopusV1.2ThrU2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeAtmosphericThrust</SubtypeName>
              <EntityId>115558131712490612</EntityId>
              <Min x="1" y="5" z="-18" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="1" z="-1" />
              <BuiltBy>144115188075855883</BuiltBy>
              <CustomName>OctopusV1.2ThrU1</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeAtmosphericThrust</SubtypeName>
              <EntityId>118593122835915454</EntityId>
              <Min x="1" y="5" z="-24" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="1" z="-1" />
              <BuiltBy>144115188075855883</BuiltBy>
              <CustomName>OctopusV1.2ThrU3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeAtmosphericThrust</SubtypeName>
              <EntityId>140834486371886914</EntityId>
              <Min x="-5" y="5" z="-21" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="1" z="-1" />
              <BuiltBy>144115188075855883</BuiltBy>
              <CustomName>OctopusV1.2ThrU5</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeAtmosphericThrust</SubtypeName>
              <EntityId>92420177025691526</EntityId>
              <Min x="-5" y="5" z="-24" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="1" z="-1" />
              <BuiltBy>144115188075855883</BuiltBy>
              <CustomName>OctopusV1.2ThrU6</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeAtmosphericThrust</SubtypeName>
              <EntityId>127678112819465136</EntityId>
              <Min x="-5" y="5" z="-18" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="1" z="-1" />
              <BuiltBy>144115188075855883</BuiltBy>
              <CustomName>OctopusV1.2ThrU4</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Drill">
              <SubtypeName>SmallBlockDrill</SubtypeName>
              <EntityId>86908984816282525</EntityId>
              <Min x="-2" y="1" z="-21" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="1" z="-1" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>3.375</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>OctopusV1.2Drill9</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockBatteryBlock</SubtypeName>
              <EntityId>73943466949327149</EntityId>
              <Min x="-2" y="8" z="-25" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>OctopusV1.2Battery5</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.9999999</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockBatteryBlock</SubtypeName>
              <EntityId>96664950428043822</EntityId>
              <Min x="-2" y="10" z="-25" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>OctopusV1.2Battery7</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>0.9999999</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeAtmosphericThrust</SubtypeName>
              <EntityId>100083787469227173</EntityId>
              <Min x="-7" y="10" z="-25" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855883</BuiltBy>
              <CustomName>OctopusV1.2ThrL2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeAtmosphericThrust</SubtypeName>
              <EntityId>125786198177083699</EntityId>
              <Min x="-6" y="13" z="-26" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <BuiltBy>144115188075855883</BuiltBy>
              <CustomName>OctopusV1.2ThrF1</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>78547104192335881</EntityId>
              <Min x="-2" y="15" z="-16" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.09166667" y="1" z="0.62" />
              <Owner>144115188075855883</Owner>
              <BuiltBy>144115188075855883</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>OctopusV1.2TP_Rock</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>1.8</FontSize>
              <PublicDescription>180258</PublicDescription>
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4278227199</PackedValue>
                <X>255</X>
                <Y>144</Y>
                <Z>0</Z>
                <R>255</R>
                <G>144</G>
                <B>0</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
              <ContentType>TEXT_AND_IMAGE</ContentType>
              <SelectedScript />
              <TextPadding>2</TextPadding>
              <Version>1</Version>
              <ScriptBackgroundColor>
                <PackedValue>4288108544</PackedValue>
                <X>0</X>
                <Y>88</Y>
                <Z>151</Z>
                <R>0</R>
                <G>88</G>
                <B>151</B>
                <A>255</A>
              </ScriptBackgroundColor>
              <ScriptForegroundColor>
                <PackedValue>4294962611</PackedValue>
                <X>179</X>
                <Y>237</Y>
                <Z>255</Z>
                <R>179</R>
                <G>237</G>
                <B>255</B>
                <A>255</A>
              </ScriptForegroundColor>
              <Sprites>
                <Length>0</Length>
              </Sprites>
              <SelectedRotationIndex>0</SelectedRotationIndex>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <ConveyorLines>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="4" y="9" z="-15" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="5" y="9" z="-15" />
              <EndDirection>Left</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="4" y="9" z="-15" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="4" y="9" z="-16" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="4" y="9" z="-15" />
              <StartDirection>Down</StartDirection>
              <EndPosition x="5" y="8" z="-15" />
              <EndDirection>Left</EndDirection>
              <Sections>
                <Section Direction="Down" Length="1" />
                <Section Direction="Right" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="4" y="9" z="-16" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="5" y="9" z="-16" />
              <EndDirection>Left</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="4" y="9" z="-16" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="4" y="9" z="-17" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="4" y="9" z="-16" />
              <StartDirection>Down</StartDirection>
              <EndPosition x="5" y="8" z="-16" />
              <EndDirection>Left</EndDirection>
              <Sections>
                <Section Direction="Down" Length="1" />
                <Section Direction="Right" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="5" y="7" z="-15" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="-1" y="7" z="-15" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="5" y="7" z="-15" />
              <StartDirection>Down</StartDirection>
              <EndPosition x="5" y="6" z="-15" />
              <EndDirection>Up</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="5" y="6" z="-16" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="5" y="6" z="-19" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="4" y="9" z="-17" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="5" y="9" z="-17" />
              <EndDirection>Left</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="4" y="9" z="-17" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="4" y="9" z="-18" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="4" y="9" z="-17" />
              <StartDirection>Down</StartDirection>
              <EndPosition x="5" y="8" z="-17" />
              <EndDirection>Left</EndDirection>
              <Sections>
                <Section Direction="Down" Length="1" />
                <Section Direction="Right" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="5" y="9" z="-18" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="4" y="9" z="-18" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="4" y="9" z="-18" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="4" y="9" z="-19" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="5" y="8" z="-18" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="4" y="9" z="-18" />
              <EndDirection>Down</EndDirection>
              <Sections>
                <Section Direction="Left" Length="1" />
                <Section Direction="Up" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="5" y="9" z="-19" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="4" y="9" z="-19" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="5" y="6" z="-21" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="5" y="6" z="-24" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="5" y="6" z="-20" />
              <StartDirection>Up</StartDirection>
              <EndPosition x="5" y="7" z="-20" />
              <EndDirection>Down</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="5" y="7" z="-20" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="4" y="8" z="-20" />
              <EndDirection>Down</EndDirection>
              <Sections>
                <Section Direction="Left" Length="1" />
                <Section Direction="Up" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
              <ConveyorLineConductivity>BACKWARD</ConveyorLineConductivity>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="4" y="9" z="-19" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="4" y="9" z="-20" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="5" y="8" z="-19" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="4" y="9" z="-19" />
              <EndDirection>Down</EndDirection>
              <Sections>
                <Section Direction="Left" Length="1" />
                <Section Direction="Up" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="4" y="9" z="-20" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="5" y="9" z="-20" />
              <EndDirection>Left</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="4" y="9" z="-20" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="4" y="9" z="-21" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="4" y="9" z="-20" />
              <StartDirection>Down</StartDirection>
              <EndPosition x="4" y="8" z="-20" />
              <EndDirection>Up</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
              <ConveyorLineConductivity>FORWARD</ConveyorLineConductivity>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="5" y="8" z="-21" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="4" y="9" z="-21" />
              <EndDirection>Down</EndDirection>
              <Sections>
                <Section Direction="Left" Length="1" />
                <Section Direction="Up" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="5" y="9" z="-21" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="4" y="9" z="-21" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="5" y="8" z="-22" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="4" y="9" z="-22" />
              <EndDirection>Down</EndDirection>
              <Sections>
                <Section Direction="Left" Length="1" />
                <Section Direction="Up" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="5" y="6" z="-25" />
              <StartDirection>Up</StartDirection>
              <EndPosition x="5" y="7" z="-25" />
              <EndDirection>Down</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="5" y="8" z="-23" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="4" y="9" z="-23" />
              <EndDirection>Down</EndDirection>
              <Sections>
                <Section Direction="Left" Length="1" />
                <Section Direction="Up" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="4" y="9" z="-21" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="4" y="9" z="-22" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="4" y="9" z="-22" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="5" y="9" z="-22" />
              <EndDirection>Left</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="4" y="9" z="-22" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="4" y="9" z="-23" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="5" y="9" z="-23" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="4" y="9" z="-23" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="4" y="9" z="-23" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="4" y="9" z="-24" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="5" y="9" z="-24" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="4" y="9" z="-24" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="5" y="8" z="-24" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="4" y="9" z="-24" />
              <EndDirection>Down</EndDirection>
              <Sections>
                <Section Direction="Left" Length="1" />
                <Section Direction="Up" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="5" y="7" z="-25" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="-1" y="7" z="-25" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="5" y="8" z="-25" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="4" y="9" z="-25" />
              <EndDirection>Down</EndDirection>
              <Sections>
                <Section Direction="Left" Length="1" />
                <Section Direction="Up" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="5" y="9" z="-25" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="4" y="9" z="-25" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="4" y="9" z="-25" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="4" y="9" z="-24" />
              <EndDirection>Forward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-1" y="7" z="-25" />
              <StartDirection>Down</StartDirection>
              <EndPosition x="-1" y="6" z="-25" />
              <EndDirection>Up</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-1" y="7" z="-15" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="-7" y="7" z="-15" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-1" y="7" z="-15" />
              <StartDirection>Down</StartDirection>
              <EndPosition x="-1" y="6" z="-15" />
              <EndDirection>Up</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-7" y="7" z="-15" />
              <StartDirection>Down</StartDirection>
              <EndPosition x="-7" y="6" z="-15" />
              <EndDirection>Up</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-7" y="8" z="-15" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="-6" y="9" z="-15" />
              <EndDirection>Down</EndDirection>
              <Sections>
                <Section Direction="Right" Length="1" />
                <Section Direction="Up" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-7" y="8" z="-16" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="-6" y="9" z="-16" />
              <EndDirection>Down</EndDirection>
              <Sections>
                <Section Direction="Right" Length="1" />
                <Section Direction="Up" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-1" y="6" z="-16" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="-1" y="6" z="-18" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-1" y="6" z="-18" />
              <StartDirection>Up</StartDirection>
              <EndPosition x="-1" y="10" z="-20" />
              <EndDirection>Down</EndDirection>
              <Sections>
                <Section Direction="Up" Length="1" />
                <Section Direction="Forward" Length="1" />
                <Section Direction="Up" Length="1" />
                <Section Direction="Forward" Length="1" />
                <Section Direction="Up" Length="2" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-1" y="6" z="-18" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="-1" y="6" z="-19" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-1" y="12" z="-15" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="-1" y="12" z="-18" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>LARGE_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="1" y="12" z="-20" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="2" y="15" z="-20" />
              <EndDirection>Right</EndDirection>
              <Sections>
                <Section Direction="Right" Length="4" />
                <Section Direction="Up" Length="3" />
                <Section Direction="Left" Length="3" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-3" y="12" z="-20" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="-4" y="15" z="-20" />
              <EndDirection>Left</EndDirection>
              <Sections>
                <Section Direction="Left" Length="4" />
                <Section Direction="Up" Length="3" />
                <Section Direction="Right" Length="3" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-1" y="6" z="-24" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="-1" y="6" z="-21" />
              <EndDirection>Forward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-6" y="9" z="-19" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="-7" y="9" z="-19" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-6" y="9" z="-19" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="-6" y="9" z="-20" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-6" y="9" z="-19" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="-6" y="9" z="-18" />
              <EndDirection>Forward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-6" y="9" z="-19" />
              <StartDirection>Down</StartDirection>
              <EndPosition x="-7" y="8" z="-19" />
              <EndDirection>Right</EndDirection>
              <Sections>
                <Section Direction="Down" Length="1" />
                <Section Direction="Left" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-7" y="8" z="-17" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="-6" y="9" z="-17" />
              <EndDirection>Down</EndDirection>
              <Sections>
                <Section Direction="Right" Length="1" />
                <Section Direction="Up" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-7" y="9" z="-17" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="-6" y="9" z="-17" />
              <EndDirection>Left</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-7" y="9" z="-15" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="-6" y="9" z="-15" />
              <EndDirection>Left</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-7" y="9" z="-16" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="-6" y="9" z="-16" />
              <EndDirection>Left</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-6" y="9" z="-15" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="-6" y="9" z="-16" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-6" y="9" z="-16" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="-6" y="9" z="-17" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-6" y="9" z="-17" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="-6" y="9" z="-18" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-6" y="9" z="-18" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="-7" y="9" z="-18" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-6" y="9" z="-18" />
              <StartDirection>Down</StartDirection>
              <EndPosition x="-7" y="8" z="-18" />
              <EndDirection>Right</EndDirection>
              <Sections>
                <Section Direction="Down" Length="1" />
                <Section Direction="Left" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-7" y="9" z="-20" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="-6" y="9" z="-20" />
              <EndDirection>Left</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-7" y="9" z="-21" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="-6" y="9" z="-21" />
              <EndDirection>Left</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-7" y="7" z="-20" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="-6" y="8" z="-20" />
              <EndDirection>Down</EndDirection>
              <Sections>
                <Section Direction="Right" Length="1" />
                <Section Direction="Up" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
              <ConveyorLineConductivity>BACKWARD</ConveyorLineConductivity>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-7" y="7" z="-20" />
              <StartDirection>Down</StartDirection>
              <EndPosition x="-7" y="6" z="-20" />
              <EndDirection>Up</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-6" y="8" z="-20" />
              <StartDirection>Up</StartDirection>
              <EndPosition x="-6" y="9" z="-20" />
              <EndDirection>Down</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
              <ConveyorLineConductivity>BACKWARD</ConveyorLineConductivity>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-6" y="9" z="-20" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="-6" y="9" z="-21" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-6" y="9" z="-21" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="-6" y="9" z="-22" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-6" y="9" z="-21" />
              <StartDirection>Down</StartDirection>
              <EndPosition x="-7" y="8" z="-21" />
              <EndDirection>Right</EndDirection>
              <Sections>
                <Section Direction="Down" Length="1" />
                <Section Direction="Left" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-1" y="15" z="-20" />
              <StartDirection>Down</StartDirection>
              <EndPosition x="-1" y="14" z="-20" />
              <EndDirection>Up</EndDirection>
              <Sections />
              <ConveyorLineType>LARGE_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-7" y="6" z="-19" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="-7" y="6" z="-16" />
              <EndDirection>Forward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-6" y="9" z="-22" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="-7" y="9" z="-22" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-6" y="9" z="-22" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="-6" y="9" z="-23" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-6" y="9" z="-22" />
              <StartDirection>Down</StartDirection>
              <EndPosition x="-7" y="8" z="-22" />
              <EndDirection>Right</EndDirection>
              <Sections>
                <Section Direction="Down" Length="1" />
                <Section Direction="Left" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-6" y="9" z="-23" />
              <StartDirection>Down</StartDirection>
              <EndPosition x="-7" y="8" z="-23" />
              <EndDirection>Right</EndDirection>
              <Sections>
                <Section Direction="Down" Length="1" />
                <Section Direction="Left" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-6" y="9" z="-23" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="-7" y="9" z="-23" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-6" y="9" z="-23" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="-6" y="9" z="-24" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-6" y="9" z="-24" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="-7" y="9" z="-24" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-6" y="9" z="-24" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="-6" y="9" z="-25" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-6" y="9" z="-24" />
              <StartDirection>Down</StartDirection>
              <EndPosition x="-7" y="8" z="-24" />
              <EndDirection>Right</EndDirection>
              <Sections>
                <Section Direction="Down" Length="1" />
                <Section Direction="Left" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-6" y="9" z="-25" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="-7" y="9" z="-25" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-7" y="8" z="-25" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="-6" y="9" z="-25" />
              <EndDirection>Down</EndDirection>
              <Sections>
                <Section Direction="Right" Length="1" />
                <Section Direction="Up" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-7" y="7" z="-25" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="-1" y="7" z="-25" />
              <EndDirection>Left</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-7" y="7" z="-25" />
              <StartDirection>Down</StartDirection>
              <EndPosition x="-7" y="6" z="-25" />
              <EndDirection>Up</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-7" y="6" z="-24" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="-7" y="6" z="-21" />
              <EndDirection>Forward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-1" y="15" z="-19" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="-1" y="15" z="-18" />
              <EndDirection>Forward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-2" y="16" z="-24" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="-1" y="16" z="-24" />
              <EndDirection>Left</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="16" z="-24" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="-1" y="16" z="-24" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-4" y="15" z="-20" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="-4" y="15" z="-21" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-4" y="16" z="-22" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="-4" y="15" z="-21" />
              <EndDirection>Up</EndDirection>
              <Sections>
                <Section Direction="Backward" Length="1" />
                <Section Direction="Down" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="2" y="15" z="-20" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="2" y="15" z="-21" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="2" y="16" z="-22" />
              <StartDirection>Backward</StartDirection>
              <EndPosition x="2" y="15" z="-21" />
              <EndDirection>Up</EndDirection>
              <Sections>
                <Section Direction="Backward" Length="1" />
                <Section Direction="Down" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
          </ConveyorLines>
          <BlockGroups>
            <MyObjectBuilder_BlockGroup>
              <Name>OctopusV1.Drills</Name>
              <Blocks>
                <Vector3I>
                  <X>5</X>
                  <Y>6</Y>
                  <Z>-15</Z>
                </Vector3I>
                <Vector3I>
                  <X>5</X>
                  <Y>6</Y>
                  <Z>-20</Z>
                </Vector3I>
                <Vector3I>
                  <X>5</X>
                  <Y>6</Y>
                  <Z>-25</Z>
                </Vector3I>
                <Vector3I>
                  <X>-1</X>
                  <Y>6</Y>
                  <Z>-15</Z>
                </Vector3I>
                <Vector3I>
                  <X>-7</X>
                  <Y>6</Y>
                  <Z>-15</Z>
                </Vector3I>
                <Vector3I>
                  <X>-7</X>
                  <Y>6</Y>
                  <Z>-20</Z>
                </Vector3I>
                <Vector3I>
                  <X>-7</X>
                  <Y>6</Y>
                  <Z>-25</Z>
                </Vector3I>
                <Vector3I>
                  <X>-1</X>
                  <Y>6</Y>
                  <Z>-25</Z>
                </Vector3I>
                <Vector3I>
                  <X>-1</X>
                  <Y>6</Y>
                  <Z>-20</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
            <MyObjectBuilder_BlockGroup>
              <Name>OctopusV1.AtmosphericThrusters</Name>
              <Blocks>
                <Vector3I>
                  <X>3</X>
                  <Y>14</Y>
                  <Z>-16</Z>
                </Vector3I>
                <Vector3I>
                  <X>-5</X>
                  <Y>14</Y>
                  <Z>-16</Z>
                </Vector3I>
                <Vector3I>
                  <X>-5</X>
                  <Y>14</Y>
                  <Z>-24</Z>
                </Vector3I>
                <Vector3I>
                  <X>3</X>
                  <Y>14</Y>
                  <Z>-24</Z>
                </Vector3I>
                <Vector3I>
                  <X>-5</X>
                  <Y>11</Y>
                  <Z>-16</Z>
                </Vector3I>
                <Vector3I>
                  <X>-5</X>
                  <Y>11</Y>
                  <Z>-24</Z>
                </Vector3I>
                <Vector3I>
                  <X>3</X>
                  <Y>11</Y>
                  <Z>-16</Z>
                </Vector3I>
                <Vector3I>
                  <X>3</X>
                  <Y>11</Y>
                  <Z>-24</Z>
                </Vector3I>
                <Vector3I>
                  <X>2</X>
                  <Y>7</Y>
                  <Z>-17</Z>
                </Vector3I>
                <Vector3I>
                  <X>2</X>
                  <Y>7</Y>
                  <Z>-20</Z>
                </Vector3I>
                <Vector3I>
                  <X>2</X>
                  <Y>7</Y>
                  <Z>-23</Z>
                </Vector3I>
                <Vector3I>
                  <X>-4</X>
                  <Y>7</Y>
                  <Z>-17</Z>
                </Vector3I>
                <Vector3I>
                  <X>-4</X>
                  <Y>7</Y>
                  <Z>-20</Z>
                </Vector3I>
                <Vector3I>
                  <X>-4</X>
                  <Y>7</Y>
                  <Z>-23</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
            <MyObjectBuilder_BlockGroup>
              <Name>OctopusV1.Turrets</Name>
              <Blocks>
                <Vector3I>
                  <X>-4</X>
                  <Y>18</Y>
                  <Z>-24</Z>
                </Vector3I>
                <Vector3I>
                  <X>2</X>
                  <Y>18</Y>
                  <Z>-24</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
          </BlockGroups>
          <DisplayName>Paolo.OctopusV1</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
      </CubeGrids>
      <EnvironmentType>None</EnvironmentType>
      <WorkshopId>0</WorkshopId>
      <OwnerSteamId>76561198204968289</OwnerSteamId>
      <Points>0</Points>
    </ShipBlueprint>
  </ShipBlueprints>
</Definitions>